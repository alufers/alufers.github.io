{"css_columns":"<h1>CSS Columns</h1> <p><strong>CSS Columns</strong> is a module of CSS that defines a multi-column layout, allowing to express how content should flow between columns and how gaps and rules are handled.</p> <h2 id=\"Reference\">Reference</h2> <h3 id=\"CSS_Properties\">CSS Properties</h3> <div class=\"index\"> <ul> <li><a href=\"break-after\" title=\"The break-after CSS property describes how the page, column or region break behavior after the generated box. If there is no generated box, the property is ignored.\"><code>break-after</code></a></li> <li><a href=\"break-before\" title=\"The break-before CSS property describes how the page, column or region break behavior before the generated box. If there is no generated box, the property is ignored.\"><code>break-before</code></a></li> <li><a href=\"break-inside\" title=\"The break-inside CSS property describes how the page, column or region break inside the generated box. If there is no generated box, the property is ignored.\"><code>break-inside</code></a></li> <li><a href=\"column-count\" title=\"The column-count CSS property describes the number of columns of the element.\"><code>column-count</code></a></li> <li><a href=\"column-fill\" title=\"The column-fill CSS property controls how contents are partitioned into columns. Contents are either balanced, which means that contents in all columns will have the same height or, when using auto, just take up the room the content needs.\"><code>column-fill</code></a></li> <li><a href=\"column-gap\" title=\"The column-gap CSS property sets the size of the gap between columns for elements which are specified to be displayed as multi-column elements.\"><code>column-gap</code></a></li> <li><a href=\"column-rule\" title='In multi-column layouts, the column-rule CSS property specifies a straight line, or \"rule\", to be drawn between each column. It is a convenient shorthand to avoid setting each of the individual column-rule-* properties separately : column-rule-width, column-rule-style and column-rule-color.'><code>column-rule</code></a></li> <li><a href=\"column-rule-color\" title='The column-rule-color CSS property lets you set the color of the \"rule\" or line drawn between columns in multi-column layouts.'><code>column-rule-color</code></a></li> <li><a href=\"column-rule-style\" title=\"The column-rule-style CSS property lets you set the style of the rule drawn between columns in multi-column layouts.\"><code>column-rule-style</code></a></li> <li><a href=\"column-rule-width\" title=\"The column-rule-width CSS property lets you set the width of the rule drawn between columns in multi-column layouts.\"><code>column-rule-width</code></a></li> <li><a href=\"column-span\" title=\"The column-span CSS property makes it possible for an element to span across all columns when its value is set to all. An element that spans more than one column is called a spanning element.\"><code>column-span</code></a></li> <li><a href=\"column-width\" title=\"The column-width CSS property suggests an optimal column width. This is not a absolute value, but a mere hint to the browser, which will adjust the width of the column around that suggested value, allowing to achieve scalable designs that fit different screen sizes. Especially in presence of the column-count CSS property which has precedence, to set an exact column width, all length values must be specified. In horizontal text these are width, column-width, column-gap, and column-rule-width.\"><code>column-width</code></a></li> <li><a href=\"columns\" title=\"The columns CSS property is a shorthand property allowing to set both the column-width and the column-count properties at the same time.\"><code>columns</code></a></li> </ul> </div> <h2 id=\"Guides\">Guides</h2> <dl> <dt><a href=\"css_columns/using_multi-column_layouts\">Using CSS multi-column layouts</a></dt> <dd>Step-by-step tutorial about how to build layouts using several columns.</dd> </dl> <h2 id=\"Specifications\">Specifications</h2> <table class=\"standard-table\"> <thead> <tr> <th scope=\"col\">Specification</th> <th scope=\"col\">Status</th> <th scope=\"col\">Comment</th> </tr> </thead> <tbody> <tr> <td><a href=\"https://drafts.csswg.org/css-multicol-1/\" class=\"external\" lang=\"en\" title=\"The 'CSS Multi-column Layout Module' specification\" hreflang=\"en\">CSS Multi-column Layout Module</a></td> <td><span class=\"spec-CR\">Candidate Recommendation</span></td> <td>Initial definition</td> </tr> </tbody> </table> <h2 id=\"Browser_compatibility\">Browser compatibility</h2>  <div id=\"compat-desktop\"> <table class=\"compat-table\"> <tbody> <tr> <th>Feature</th> <th>Chrome</th> <th>Firefox (Gecko)</th> <th>Internet Explorer</th> <th>Opera</th> <th>Safari (WebKit)</th> </tr> <tr> <td>Basic support</td> <td>\n<span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span> <span class=\"inlineIndicator prefixBox prefixBoxInline\" title=\"prefix\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/Prefixes\" title=\"The name of this feature is prefixed with '-webkit' as this browser considers it experimental\">-webkit</a></span>\n</td> <td>\n<a href=\"https://developer.mozilla.org/en-US/Firefox/Releases/9\" title=\"Released on 2011-12-20.\">9</a> (9)<span class=\"inlineIndicator prefixBox prefixBoxInline\" title=\"prefix\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/Prefixes\" title=\"The name of this feature is prefixed with '-moz' as this browser considers it experimental\">-moz</a></span>\n</td> <td>10</td> <td>11.10<br> 15<span class=\"inlineIndicator prefixBox prefixBoxInline\" title=\"prefix\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/Prefixes\" title=\"The name of this feature is prefixed with '-webkit' as this browser considers it experimental\">-webkit</a></span>\n</td> <td>3.0 (522)<span class=\"inlineIndicator prefixBox prefixBoxInline\" title=\"prefix\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/Prefixes\" title=\"The name of this feature is prefixed with '-webkit' as this browser considers it experimental\">-webkit</a></span>\n</td> </tr> </tbody> </table> </div> <div id=\"compat-mobile\"> <table class=\"compat-table\"> <tbody> <tr> <th>Feature</th> <th>Android</th> <th>Firefox Mobile (Gecko)</th> <th>IE Phone</th> <th>Opera Mobile</th> <th>Safari Mobile</th> </tr> <tr> <td>Basic support</td> <td>2.1<span class=\"inlineIndicator prefixBox prefixBoxInline\" title=\"prefix\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/Prefixes\" title=\"The name of this feature is prefixed with '-webkit' as this browser considers it experimental\">-webkit</a></span>\n</td> <td>22.0 (22)<span class=\"inlineIndicator prefixBox prefixBoxInline\" title=\"prefix\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/Prefixes\" title=\"The name of this feature is prefixed with '-moz' as this browser considers it experimental\">-moz</a></span>\n</td> <td>10</td> <td>11.5<br> 32<span class=\"inlineIndicator prefixBox prefixBoxInline\" title=\"prefix\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/Prefixes\" title=\"The name of this feature is prefixed with '-webkit' as this browser considers it experimental\">-webkit</a></span>\n</td> <td>3.2<span class=\"inlineIndicator prefixBox prefixBoxInline\" title=\"prefix\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/Prefixes\" title=\"The name of this feature is prefixed with '-webkit' as this browser considers it experimental\">-webkit</a></span>\n</td> </tr> </tbody> </table> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Columns$edit\" class=\"_attribution-link\">Edit this page on MDN</a>\n  </p>\n</div>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2016 Mozilla Contributors<br>Licensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.<br>\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Columns\" class=\"_attribution-link\">https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Columns</a>\n  </p>\n</div>\n","css_charsets":"<h1>CSS Charsets</h1> <p><strong>CSS Charsets</strong> is a module of CSS that allow to define the character set used in the stylesheet.</p> <h2 id=\"Reference\">Reference</h2> <h3 id=\"At-rules\">At-rules</h3> <div class=\"index\"> <ul> <li><a title=\"The @charset CSS at-rule specifies the character encoding used in the style sheet. It must be the first element in the style sheet and not be preceded by any character; as it is not a nested statement, it cannot be used inside conditional group at-rules. If several @charset at-rules are defined, only the first one is used, and it cannot be used inside a style attribute on an HTML element or inside the &lt;style&gt; element where the character set of the HTML page is relevant.\" href=\"@charset\"><code>@charset</code></a></li> </ul> </div> <h2 id=\"Guides\">Guides</h2> <p><em>None.</em></p> <h2 id=\"Specifications\">Specifications</h2> <table class=\"standard-table\"> <thead> <tr> <th scope=\"col\">Specification</th> <th scope=\"col\">Status</th> <th scope=\"col\">Comment</th> </tr> </thead> <tbody> <tr> <td><a lang=\"en\" hreflang=\"en\" href=\"http://www.w3.org/TR/CSS2/syndata.html#x57\" class=\"external\">CSS Level 2 (Revision 1)<br><small lang=\"en-US\">The definition of '@charset' in that specification.</small></a></td> <td><span class=\"spec-REC\">Recommendation</span></td> <td>Initial definition</td> </tr> </tbody> </table> <h2 id=\"Browser_compatibility\">Browser compatibility</h2>  <div id=\"compat-desktop\"> <table class=\"compat-table\"> <tbody> <tr> <th>Feature</th> <th>Chrome</th> <th>Firefox (Gecko)</th> <th>Internet Explorer</th> <th>Opera</th> <th>Safari</th> </tr> <tr> <td>Basic support</td> <td>2.0</td> <td>\n<a title=\"Released on 2005-11-25.\" href=\"https://developer.mozilla.org/en-US/Firefox/Releases/1.5\">1.5</a> (1.8)</td> <td>5.5</td> <td>9</td> <td>4</td> </tr> </tbody> </table> </div> <div id=\"compat-mobile\"> <table class=\"compat-table\"> <tbody> <tr> <th>Feature</th> <th>Android</th> <th>Firefox Mobile (Gecko)</th> <th>IE Mobile</th> <th>Opera Mobile</th> <th>Safari Mobile</th> </tr> <tr> <td>Basic support</td> <td>2.1</td> <td>1.0 (1.8)</td> <td>5.5</td> <td>10.0</td> <td>4</td> </tr> </tbody> </table> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Charsets$edit\" class=\"_attribution-link\">Edit this page on MDN</a>\n  </p>\n</div>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2016 Mozilla Contributors<br>Licensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.<br>\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Charsets\" class=\"_attribution-link\">https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Charsets</a>\n  </p>\n</div>\n","css_box_model":"<h1>CSS Box Model</h1> <p><strong>CSS Box Model</strong> is a CSS module that defines the rectangular boxes, including their padding and margin, that are generated for elements and laid out according to the visual formatting model.</p> <h2 id=\"Reference\">Reference</h2> <h3 id=\"Properties\">Properties</h3> <h4 id=\"Properties_controlling_the_flow_of_content_in_a_box\">Properties controlling the flow of content in a box</h4> <div class=\"index\"> <ul> <li><a title=\"The box-decoration-break CSS property specifies how the background, padding, border, border-image, box-shadow, margin and clip of an element is applied when the box for the element is fragmented.  Fragmentation occurs when an inline box wraps onto multiple lines, or when a block spans more than one column inside a column layout container, or spans a page break when printed.  Each piece of the rendering for the element is called a fragment.\" href=\"box-decoration-break\"><code>box-decoration-break</code></a></li> <li><a title=\"The box-sizing property is used to alter the default CSS box model used to calculate widths and heights of elements. It is possible to use this property to emulate the behavior of browsers that do not correctly support the CSS box model specification.\" href=\"box-sizing\"><code>box-sizing</code></a></li> <li><a title=\"The overflow property specifies whether to clip content, render scrollbars or just display content when it overflows its block level container.\" href=\"overflow\"><code>overflow</code></a></li> <li><a title=\"The overflow-x property specifies whether to clip content, render a scroll bar, or display overflow content of a block-level element, when it overflows at the left and right edges.\" href=\"overflow-x\"><code>overflow-x</code></a></li> <li><a title=\"The overflow-y property specifies whether to clip content, render a scroll bar, or display overflow content of a block-level element, when it overflows at the top and bottom edges.\" href=\"overflow-y\"><code>overflow-y</code></a></li> </ul> </div> <h4 id=\"Properties_controlling_the_size_of_a_box\">Properties controlling the size of a box</h4> <div class=\"index\"> <ul> <li><a title=\"The height CSS property specifies the height of the content area of an element. The content area is inside the padding, border, and margin of the element.\" href=\"height\"><code>height</code></a></li> <li><a title=\"The width CSS property specifies the width of the content area of an element. The content area is inside the padding, border, and margin of the element.\" href=\"width\"><code>width</code></a></li> <li><a title=\"The max-height property is used to set the maximum height of an element. It prevents the used value of the height property from becoming larger than the value specified for max-height.\" href=\"max-height\"><code>max-height</code></a></li> <li><a title=\"The max-width property is used to set the maximum width of a given element. It prevents the used value of the width property from becoming larger than the value specified for max-width.\" href=\"max-width\"><code>max-width</code></a></li> <li><a title=\"The min-height property is used to set the minimum height of a given element. It prevents the used value of the height property from becoming smaller than the value specified for min-height.\" href=\"min-height\"><code>min-height</code></a></li> <li><a title=\"The min-width property is used to set the minimum width of a given element. It prevents the used value of the width property from becoming smaller than the value specified for min-width.\" href=\"min-width\"><code>min-width</code></a></li> </ul> </div> <h4 id=\"Properties_controlling_the_margins_of_a_box\">Properties controlling the margins of a box</h4> <div class=\"index\"> <ul> <li><a title=\"The margin CSS property sets the margin for all four sides. It is a shorthand to avoid setting each side separately with the other margin properties: margin-top, margin-right, margin-bottom and margin-left.\" href=\"margin\"><code>margin</code></a></li> <li><a title=\"The margin-bottom CSS property of an element sets the margin space required on the bottom of an element. A negative value is also allowed.\" href=\"margin-bottom\"><code>margin-bottom</code></a></li> <li><a title=\"The margin-left CSS property sets the margin space required on the left side of a box associated with an element. A negative value is also allowed.\" href=\"margin-left\"><code>margin-left</code></a></li> <li><a title=\"The margin-right CSS property of an element sets the margin space required on the right side of an element. A negative value is also allowed.\" href=\"margin-right\"><code>margin-right</code></a></li> <li><a title=\"The margin-top CSS property of an element sets the margin space required on the top of an element. A negative value is also allowed.\" href=\"margin-top\"><code>margin-top</code></a></li> </ul> </div> <h4 id=\"Properties_controlling_the_paddings_of_a_box\">Properties controlling the paddings of a box</h4> <div class=\"index\"> <ul> <li><a title=\"The padding property sets the padding space on all sides of an element. The padding area is the space between the content of the element and its border. Negative values are not allowed.\" href=\"padding\"><code>padding</code></a></li> <li><a title=\"The padding-bottom CSS property of an element sets the height of the padding area at the bottom of an element. The padding area is the space between the content of the element and it's border. Contrary to margin-bottom values, negative values of padding-bottom are invalid.\" href=\"padding-bottom\"><code>padding-bottom</code></a></li> <li><a title=\"The padding-left CSS property of an element sets the padding space required on the left side of an element. The padding area is the space between the content of the element and it's border. A negative value is not allowed.\" href=\"padding-left\"><code>padding-left</code></a></li> <li><a title=\"The padding-right CSS property of an element sets the padding space required on the right side of an element. The padding area is the space between the content of the element and its border. Negative values are not allowed.\" href=\"padding-right\"><code>padding-right</code></a></li> <li><a title=\"The padding-top CSS property of an element sets the padding space required on the top of an element. The padding area is the space between the content of the element and its border. Contrary to margin-top values, negative values of padding-top are invalid.\" href=\"padding-top\"><code>padding-top</code></a></li> </ul> </div> <h4 id=\"Other_properties\">Other properties</h4> <div class=\"index\"> <ul> <li><a title=\"The box-shadow property describes one or more shadow effects as a comma-separated list.\" href=\"box-shadow\"><code>box-shadow</code></a></li> <li><a title=\"The visibility property can be used to hide an element while leaving the space where it would have been. It can also hide rows or columns of a table.\" href=\"visibility\"><code>visibility</code></a></li> </ul> </div> <h2 id=\"Guides_and_tools\">Guides and tools</h2> <dl> <dt><a href=\"css_box_model/introduction_to_the_css_box_model\">Introduction to the CSS box model</a></dt> <dd>Explains one of the fundamental concept of CSS, the box model: describes the meaning of the margin, padding, as well as the different areas of a box.</dd> <dt><a href=\"css_box_model/mastering_margin_collapsing\">Mastering margin collapsing</a></dt> <dd>In several cases, two adjacent margins are collapsed into one. This article describes when this is happening and how to control it.</dd> <dt><a href=\"css_box_model/box-shadow_generator\">Box-shadow generator</a></dt> <dd>An interactive tool that allows to visually create shadows and to generate the needed syntax for the <a title=\"The box-shadow property describes one or more shadow effects as a comma-separated list.\" href=\"box-shadow\"><code>box-shadow</code></a> property.</dd> </dl> <h2 id=\"Specifications\">Specifications</h2> <table class=\"standard-table\"> <thead> <tr> <th scope=\"col\">Specification</th> <th scope=\"col\">Status</th> <th scope=\"col\">Comment</th> </tr> </thead> <tbody> <tr> <td><a lang=\"en\" title=\"The 'CSS Basic Box Model' specification\" class=\"external\" href=\"https://drafts.csswg.org/css-box-3/\" hreflang=\"en\">CSS Basic Box Model</a></td> <td><span class=\"spec-WD\">Working Draft</span></td> <td> </td> </tr> <tr> <td><a lang=\"en\" title=\"The 'CSS Level 2 (Revision 1)' specification\" class=\"external\" href=\"http://www.w3.org/TR/CSS2/box.html\" hreflang=\"en\">CSS Level 2 (Revision 1)</a></td> <td><span class=\"spec-REC\">Recommendation</span></td> <td> </td> </tr> <tr> <td><a lang=\"en\" title=\"The 'CSS Level 1' specification\" class=\"external\" href=\"http://www.w3.org/TR/CSS1/\" hreflang=\"en\">CSS Level 1</a></td> <td><span class=\"spec-REC\">Recommendation</span></td> <td>Initial definition</td> </tr> </tbody> </table> <h2 id=\"Browser_compatibility\">Browser compatibility</h2>  <div id=\"compat-desktop\"> <table class=\"compat-table\"> <tbody> <tr> <th>Feature</th> <th>Chrome</th> <th>Firefox (Gecko)</th> <th>Internet Explorer</th> <th>Opera</th> <th>Safari (WebKit)</th> </tr> <tr> <td>Basic support</td> <td>1.0</td> <td>1.0 (1.7 or earlier)</td> <td>3.0</td> <td>3.5</td> <td>1.0 (85)</td> </tr> </tbody> </table> </div> <div id=\"compat-mobile\"> <table class=\"compat-table\"> <tbody> <tr> <th>Feature</th> <th>Android</th> <th>Firefox Mobile (Gecko)</th> <th>IE Mobile</th> <th>Opera Mobile</th> <th>Safari Mobile</th> </tr> <tr> <td>Basic support</td> <td>1.0</td> <td>1.0 (1)</td> <td>6.0</td> <td>6.0</td> <td>1.0</td> </tr> </tbody> </table> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Box_Model$edit\" class=\"_attribution-link\">Edit this page on MDN</a>\n  </p>\n</div>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2016 Mozilla Contributors<br>Licensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.<br>\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Box_Model\" class=\"_attribution-link\">https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Box_Model</a>\n  </p>\n</div>\n","css_columns/using_multi-column_layouts":"<h1>CSS Columns: Using multi-column layouts</h1> <p><span class=\"seoSummary\">The <strong>CSS multi-column layout</strong> extends the <em>block layout mode</em> to allow the easy definition of multiple columns of text.</span> People have trouble reading text if lines are too long; if it takes too long for the eyes to move from the end of the one line to the beginning of the next, they lose track of which line they were on. Therefore, to make maximum use of a large screen, authors should have limited-width columns of text placed side by side, just as newspapers do.</p> <p>Unfortunately this is impossible to do with CSS and HTML without forcing column breaks at fixed positions, or severely restricting the markup allowed in the text, or using heroic scripting. This limitation is solved by adding new CSS properties to extend the traditional block layout mode.</p> <h2 id=\"Using_columns\">Using columns</h2> <h3 id=\"Column_count_and_width\">Column count and width</h3> <p>Two CSS properties control whether and how many columns will appear: <a href=\"../column-count\" title=\"The column-count CSS property describes the number of columns of the element.\"><code>column-count</code></a> and <a href=\"../column-width\" title=\"The column-width CSS property suggests an optimal column width. The column-width is the maximum width a column will become before adding another column. For instance, a 300px column width a gap of 0px would be a single column at 599px, but at 600px it would be split into 2 columns. This allows us to achieve scalable designs that fit different screen sizes. Especially in presence of the column-count CSS property which has precedence, to set an exact column width, all length values must be specified. In horizontal text these are width, column-width, column-gap, and column-rule-width.\"><code>column-width</code></a>.</p> <p>The <code>column-count</code> property sets the number of columns to a particular number. E.g.,</p> <h2 id=\"Example_1\">Example 1</h2> <h3 id=\"HTML\">HTML</h3> <div id=\"column_count\"> <pre data-language=\"html\">&lt;div id=\"col\"&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum&lt;/div&gt;\n</pre> <h3 id=\"CSS\">CSS</h3> <pre data-language=\"css\">#col {\n-moz-column-count: 2;\n-webkit-column-count: 2;\ncolumn-count: 2;\n}\n</pre> </div> <h3 id=\"Result\">Result</h3> <p>Will display the content in two columns (if you're using a multi-column compliant browser):</p> <p><iframe width=\"700px\" frameborder=\"0\" class=\"live-sample-frame sample-code-frame\" id=\"frame_column_count\" src=\"https://mdn.mozillademos.org/en-US/docs/Web/CSS/CSS_Columns/Using_multi-column_layouts%24samples/column_count?revision=1055522\"></iframe></p> <p>The <code>column-width</code> property sets the minimum desired column width. If <code>column-count</code> is not also set, then the browser will automatically make as many columns as fit in the available width.</p> <h2 id=\"Example_2\">Example 2</h2> <h3 id=\"HTML_2\">HTML</h3> <div id=\"column_width\"> <pre data-language=\"html\">&lt;div id=\"wid\"&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum&lt;/div&gt;\n</pre> <h3 id=\"CSS_2\">CSS</h3> <pre data-language=\"css\">#wid {\n-moz-column-width: 100px;\n-webkit-column-width: 100px;\ncolumn-width: 100px;\n}\n</pre> </div> <h3 id=\"Result_2\">Result</h3> <p><iframe width=\"700px\" frameborder=\"0\" class=\"live-sample-frame sample-code-frame\" id=\"frame_column_width\" src=\"https://mdn.mozillademos.org/en-US/docs/Web/CSS/CSS_Columns/Using_multi-column_layouts%24samples/column_width?revision=1055522\"></iframe></p> <p>The exact details are described in <a href=\"http://www.w3.org/TR/css3-multicol/\" class=\"external\">the CSS3 specification</a>.</p> <p>In a multi-column block, content is automatically flowed from one column into the next as needed. All HTML, CSS and DOM functionality is supported within columns, as are editing and printing.</p> <h3 id=\"The_columns_shorthand\">The <code>columns</code> shorthand</h3> <p>Most of the time, the Web designer use one of the two CSS properties: <a href=\"../column-count\" title=\"The column-count CSS property describes the number of columns of the element.\"><code>column-count</code></a> or <a href=\"../column-width\" title=\"The column-width CSS property suggests an optimal column width. The column-width is the maximum width a column will become before adding another column. For instance, a 300px column width a gap of 0px would be a single column at 599px, but at 600px it would be split into 2 columns. This allows us to achieve scalable designs that fit different screen sizes. Especially in presence of the column-count CSS property which has precedence, to set an exact column width, all length values must be specified. In horizontal text these are width, column-width, column-gap, and column-rule-width.\"><code>column-width</code></a>. As values for these properties does not overlap, it is often convenient to use the shorthand <a href=\"../columns\" title=\"The columns CSS property is a shorthand property allowing to set both the column-width and the column-count properties at the same time.\"><code>columns</code></a>. E.g.</p> <p>The CSS declaration <code>column-width:12em</code> can be replaced by:</p> <h2 id=\"Example_3\">Example 3</h2> <h3 id=\"HTML_3\">HTML</h3> <div id=\"column_short\"> <pre data-language=\"html\">&lt;div id=\"col_short\"&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum&lt;/div&gt;\n</pre> <h3 id=\"CSS_3\">CSS</h3> <pre data-language=\"css\">#col_short {\n-moz-column-width: 12em;\n-moz-columns: 12em;\n-webkit-columns: 12em;\ncolumns: 12em;\n}\n</pre> </div> <p><iframe width=\"700px\" frameborder=\"0\" class=\"live-sample-frame sample-code-frame\" id=\"frame_column_short\" src=\"https://mdn.mozillademos.org/en-US/docs/Web/CSS/CSS_Columns/Using_multi-column_layouts%24samples/column_short?revision=1055522\"></iframe></p> <p>The CSS declaration <code>column-count:4</code> can be replaced by:</p> <h2 id=\"Example_4\">Example 4</h2> <h3 id=\"HTML_4\">HTML</h3> <div id=\"4_columns\"> <pre data-language=\"html\">&lt;div id=\"columns_4\"&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum&lt;/div&gt;\n</pre> <h3 id=\"CSS_4\">CSS</h3> <pre data-language=\"css\">#columns_4{\n-moz-column-count: 4;\n-moz-columns: 4;\n-webkit-columns: 4;\ncolumns: 4;\n}\n</pre> </div> <h3 id=\"Result_3\">Result</h3> <p><iframe width=\"700px\" frameborder=\"0\" class=\"live-sample-frame sample-code-frame\" id=\"frame_4_columns\" src=\"https://mdn.mozillademos.org/en-US/docs/Web/CSS/CSS_Columns/Using_multi-column_layouts%24samples/4_columns?revision=1055522\"></iframe></p> <p>The two CSS declarations <code>column-width:8em</code> and <code>column-count:12</code> can be replaced by:</p> <h2 id=\"Example_5\">Example 5</h2> <h3 id=\"HTML_5\">HTML</h3> <div id=\"12_columns\"> <pre data-language=\"html\">&lt;div id=\"columns_12\"&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum&lt;/div&gt;\n</pre> <h3 id=\"CSS_5\">CSS</h3> <pre data-language=\"css\">#columns_12 {\n-moz-columns: 12 8em;\n-webkit-columns: 12 8em;\ncolumns: 12 8em;\n}\n</pre> </div> <h3 id=\"Result_4\">Result</h3> <p><iframe width=\"700px\" frameborder=\"0\" class=\"live-sample-frame sample-code-frame\" id=\"frame_12_columns\" src=\"https://mdn.mozillademos.org/en-US/docs/Web/CSS/CSS_Columns/Using_multi-column_layouts%24samples/12_columns?revision=1055522\"></iframe></p> <h3 id=\"Height_Balancing\">Height Balancing</h3> <p>The CSS3 Column specification requires that the column heights must be balanced: that is, the browser automatically sets the maximum column height so that the heights of the content in each column are approximately equal. Firefox does this.</p> <p>However, in some situations it is also useful to set the maximum height of the columns explicitly, and then lay out content starting at the first column and creating as many columns as necessary, possibly overflowing to the right. Therefore, if the height is constrained, by setting the CSS <a href=\"../height\" title=\"The height CSS property specifies the height of the content area of an element. The content area is inside the padding, border, and margin of the element.\"><code>height</code></a> or <a href=\"../max-height\" title=\"The max-height property is used to set the maximum height of an element. It prevents the used value of the height property from becoming larger than the value specified for max-height.\"><code>max-height</code></a> properties on a multi-column block, each column is allowed to grow to that height and no further before adding new column. This mode is also much more efficient for layout.</p> <h3 id=\"Column_Gaps\">Column Gaps</h3> <p>There is a gap between columns. The recommended default is <code>1em</code>. This size can be changed by applying the <a href=\"../column-gap\" title=\"The column-gap CSS property sets the size of the gap between columns for elements which are specified to be displayed as multi-column elements.\"><code>column-gap</code></a> property to the multi-column block:</p> <h2 id=\"Example_6\">Example 6</h2> <h3 id=\"HTML_6\">HTML</h3> <div id=\"col_gap\"> <pre data-language=\"html\">&lt;div id=\"column_gap\"&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum&lt;/div&gt;\n</pre> <h3 id=\"CSS_6\">CSS</h3> <pre data-language=\"css\">#column_gap {\n-webkit-column-count: 5;\n-moz-column-count: 5;\ncolumn-count: 5;\n-moz-column-gap: 2em;\n-webkit-column-gap: 2em;\ncolumn-gap: 2em;\n}\n</pre> </div> <h3 id=\"Result_5\">Result</h3> <p><iframe width=\"700px\" frameborder=\"0\" class=\"live-sample-frame sample-code-frame\" id=\"frame_col_gap\" src=\"https://mdn.mozillademos.org/en-US/docs/Web/CSS/CSS_Columns/Using_multi-column_layouts%24samples/col_gap?revision=1055522\"></iframe></p> <h2 id=\"Graceful_Degradation\">Graceful Degradation</h2> <p>The column properties will just be ignored by non-columns-supporting browsers. Therefore it's relatively easy to create a layout that will display in a single column in those browsers and use multiple columns in supporting browsers.</p> <p>Note that not all browsers supports these properties unprefixed. To make use of this feature in most today's browsers, each property must be written thrice: once with the <span class=\"inlineIndicator prefixBox prefixBoxInline\" title=\"prefix\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/Prefixes\" title=\"The name of this feature is prefixed with '-moz' as this browser considers it experimental\">-moz</a></span> prefix, once with the <span class=\"inlineIndicator prefixBox prefixBoxInline\" title=\"prefix\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/Prefixes\" title=\"The name of this feature is prefixed with '-webkit' as this browser considers it experimental\">-webkit</a></span> prefix and once without prefix.</p> <h2 id=\"Conclusion\">Conclusion</h2> <p>CSS3 columns are a layout primitive that will help Web developers make the best use of screen real estate. Imaginative developers may find many uses for them, especially with the automatic height balancing feature.</p> <h2 id=\"See_also\">See also</h2> <ul> <li><a href=\"http://weblogs.mozillazine.org/roc/archives/2005/03/gecko_18_for_we.html\" rel=\"freelink\" class=\"external\">http://weblogs.mozillazine.org/roc/a...18_for_we.html</a></li> </ul><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Columns/Using_multi-column_layouts$edit\" class=\"_attribution-link\">Edit this page on MDN</a>\n  </p>\n</div>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2016 Mozilla Contributors<br>Licensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.<br>\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Columns/Using_multi-column_layouts\" class=\"_attribution-link\">https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Columns/Using_multi-column_layouts</a>\n  </p>\n</div>\n","margin_collapsing":"<h1>margin collapsing</h1> <p><a href=\"margin-top\">Top</a> and <a href=\"margin-bottom\">bottom</a> margins of blocks are sometimes combined (collapsed) into a single margin whose size is the largest of the margins combined into it, a behavior known as <strong>margin collapsing</strong>.</p> <p>Margin collapsing occurs in three basic cases:</p> <dl> <dt>Adjacent siblings</dt> <dd>The margins of adjacent siblings are collapsed (except when the later sibling needs to be <a href=\"clear\">cleared</a> past floats). For example: <pre data-language=\"html\"> &lt;p&gt;The bottom margin of this paragraph is collapsed...&lt;/p&gt;\n &lt;p&gt;...with the top margin of this paragraph.&lt;/p&gt;\n</pre> </dd> <dt>Parent and first/last child</dt> <dd>If there is no border, padding, inline content, or <em><a href=\"clear\">clearance</a></em> to separate the <a href=\"margin-top\" title=\"The margin-top CSS property of an element sets the margin space required on the top of an element. A negative value is also allowed.\"><code>margin-top</code></a> of a block from the <a href=\"margin-top\" title=\"The margin-top CSS property of an element sets the margin space required on the top of an element. A negative value is also allowed.\"><code>margin-top</code></a> of its first child block, or no border, padding, inline content, <a href=\"height\" title=\"The height CSS property specifies the height of the content area of an element. The content area is inside the padding, border, and margin of the element.\"><code>height</code></a>, <a href=\"min-height\" title=\"The min-height property is used to set the minimum height of a given element. It prevents the used value of the height property from becoming smaller than the value specified for min-height.\"><code>min-height</code></a>, or <a href=\"max-height\" title=\"The max-height property is used to set the maximum height of an element. It prevents the used value of the height property from becoming larger than the value specified for max-height.\"><code>max-height</code></a> to separate the <a href=\"margin-bottom\" title=\"The margin-bottom CSS property of an element sets the margin space required on the bottom of an element. A negative value is also allowed.\"><code>margin-bottom</code></a> of a block from the <a href=\"margin-bottom\" title=\"The margin-bottom CSS property of an element sets the margin space required on the bottom of an element. A negative value is also allowed.\"><code>margin-bottom</code></a> of its last child, then those margins collapse. The collapsed margin ends up outside the parent.</dd> <dt>Empty blocks</dt> <dd>If there is no border, padding, inline content, <a href=\"height\" title=\"The height CSS property specifies the height of the content area of an element. The content area is inside the padding, border, and margin of the element.\"><code>height</code></a>, or <a href=\"min-height\" title=\"The min-height property is used to set the minimum height of a given element. It prevents the used value of the height property from becoming smaller than the value specified for min-height.\"><code>min-height</code></a> to separate a block's <a href=\"margin-top\" title=\"The margin-top CSS property of an element sets the margin space required on the top of an element. A negative value is also allowed.\"><code>margin-top</code></a> from its <a href=\"margin-bottom\" title=\"The margin-bottom CSS property of an element sets the margin space required on the bottom of an element. A negative value is also allowed.\"><code>margin-bottom</code></a>, then its top and bottom margins collapse.</dd> </dl> <p>More complex margin collapsing (of more than two margins) occurs when these cases are combined.</p> <p>These rules apply even to margins that are zero, so the margin of a first/last child ends up outside its parent (according to the rules above) whether or not the parent's margin is zero.</p> <p>When negative margins are involved, the size of the collapsed margin is the sum of the largest positive margin and the smallest (most negative) negative margin.</p> <p>Margins of <a href=\"float\">floating</a> and <a href=\"position\">absolutely positioned</a> elements never collapse.</p> <h2 id=\"Specifications\">Specifications</h2> <table class=\"standard-table\"> <thead> <tr> <th scope=\"col\">Specification</th> <th scope=\"col\">Status</th> <th scope=\"col\">Comment</th> </tr> </thead> <tbody> <tr> <td><a href=\"http://www.w3.org/TR/CSS2/box.html#collapsing-margins\" class=\"external\" lang=\"en\" hreflang=\"en\">CSS Level 2 (Revision 1)<br><small lang=\"en-US\">The definition of 'margin collapsing' in that specification.</small></a></td> <td><span class=\"spec-REC\">Recommendation</span></td> <td>Initial definition</td> </tr> </tbody> </table> <h2 id=\"See_also\">See also</h2> <ul> <li><a href=\"css_reference\">CSS Reference</a></li> <li>CSS Key Concepts: <a href=\"syntax\" title=\"Syntax\">CSS syntax</a>, <a href=\"at-rule\" title=\"At-rule\">at-rule</a>, <a href=\"comments\" title=\"Comments\">comments</a>, <a href=\"specificity\" title=\"Specificity\">specificity</a> and <a href=\"inheritance\" title=\"inheritance\">inheritance</a>, the <a href=\"css_box_model/introduction_to_the_css_box_model\" title=\"Box model\">box</a>, <a href=\"layout_mode\" title=\"CSS layout modes\">layout modes</a> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Visual_formatting_model\" title=\"Visual formatting model\">visual formatting models</a>, and <a href=\"css_box_model/mastering_margin_collapsing\" title=\"Margin collapsing\">margin collapsing</a>, or the <a href=\"initial_value\" title=\"initial value\">initial</a>, <a href=\"computed_value\" title=\"computed value\">computed</a>, <a href=\"resolved_value\" title=\"resolved value\">resolved</a>, <a href=\"specified_value\" title=\"specified value\">specified</a>, <a href=\"used_value\" title=\"used value\">used</a>, and <a href=\"actual_value\" title=\"actual value\">actual</a> values. Definitions of <a href=\"value_definition_syntax\" title=\"Value definition syntax\">value syntax</a>, <a href=\"shorthand_properties\" title=\"Shorthand properties\">shorthand properties</a> and <a href=\"replaced_element\" title=\"Replaced element\">replaced elements</a>.</li> </ul><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/margin_collapsing$edit\" class=\"_attribution-link\">Edit this page on MDN</a>\n  </p>\n</div>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2016 Mozilla Contributors<br>Licensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.<br>\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/margin_collapsing\" class=\"_attribution-link\">https://developer.mozilla.org/en-US/docs/Web/CSS/margin_collapsing</a>\n  </p>\n</div>\n","css_generated_content":"<h1>CSS Generated Content</h1> <p><strong>CSS Generated Content</strong> is a module of CSS that defines how to add content to an element.</p> <h2 id=\"Reference\">Reference</h2> <h3 id=\"Properties\">Properties</h3> <div class=\"index\"> <ul> <li><a title=\"The content CSS property is used with the ::before and ::after pseudo-elements to generate content in an element. Objects inserted using the content property are anonymous replaced elements.\" href=\"content\"><code>content</code></a></li> <li><a title=\"The quotes CSS property indicates how user agents should render quotation marks.\" href=\"quotes\"><code>quotes</code></a></li> </ul> </div> <h2 id=\"Guides\">Guides</h2> <p><em>None.</em></p> <h2 id=\"Specifications\">Specifications</h2> <table class=\"standard-table\"> <thead> <tr> <th scope=\"col\">Specification</th> <th scope=\"col\">Status</th> <th scope=\"col\">Comment</th> </tr> </thead> <tbody> <tr> <td><a lang=\"en\" title=\"The 'CSS Level 2 (Revision 1)' specification\" class=\"external\" href=\"http://www.w3.org/TR/CSS2/\" hreflang=\"en\">CSS Level 2 (Revision 1)</a></td> <td><span class=\"spec-REC\">Recommendation</span></td> <td>Initial definition</td> </tr> </tbody> </table> <h2 id=\"Browser_compatibility\">Browser compatibility</h2>  <div id=\"compat-desktop\"> <table class=\"compat-table\"> <tbody> <tr> <th>Feature</th> <th>Chrome</th> <th>Firefox (Gecko)</th> <th>Internet Explorer</th> <th>Opera</th> <th>Safari (WebKit)</th> </tr> <tr> <td>Basic support</td> <td>1.0</td> <td>1.0 (1.7 or earlier)</td> <td><span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span></td> <td><span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span></td> <td><span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span></td> </tr> </tbody> </table> </div> <div id=\"compat-mobile\"> <table class=\"compat-table\"> <tbody> <tr> <th>Feature</th> <th>Android</th> <th>Firefox Mobile (Gecko)</th> <th>IE Mobile</th> <th>Opera Mobile</th> <th>Safari Mobile</th> </tr> <tr> <td>Basic support</td> <td>1.0</td> <td>1.0 (1)</td> <td><span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span></td> <td><span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span></td> <td><span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span></td> </tr> </tbody> </table> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Generated_Content$edit\" class=\"_attribution-link\">Edit this page on MDN</a>\n  </p>\n</div>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2016 Mozilla Contributors<br>Licensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.<br>\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Generated_Content\" class=\"_attribution-link\">https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Generated_Content</a>\n  </p>\n</div>\n","marker-offset":"<h1>marker-offset</h1><div><div class=\"overheadIndicator nonStandard nonStandardHeader\"> <p><strong> Non-standard</strong><br> This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p> </div></div>  <p><span class=\"seoSummary\">The <code>marker-offset</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS\">CSS</a> property describes the distance between the nearest border edges of a marker-box and the target node.</span></p> <p>Usually the marker-box is a <a title=\"::before creates a pseudo-element that is the first child of the element matched. It is often used to add cosmetic content to an element by using the content property. This element is inline by default.\" href=\"::before\"><code>::before</code></a> or <a title=\"The CSS ::after pseudo-element matches a virtual last child of the selected element. It is typically used to add cosmetic content to an element by using the content CSS property. This element is inline by default.\" href=\"::after\"><code>::after</code></a> pseudo-element set to <code><a title=\"The display CSS property specifies the type of rendering box used for an element. In HTML, default display property values are taken from behaviors described in the HTML specifications or from the browser/user default stylesheet. The default value in XML is inline.\" href=\"display\"><code>display</code></a>: marker;</code>.</p> <div class=\"note\"> <p><em>This property was proposed in CSS 2, but abandoned in CSS 2 (Revision 1)</em> and never implemented. It is considered as non-standard.</p> </div> <table class=\"properties\"><tbody>\n<tr>\n<th scope=\"row\"><a href=\"initial_value\">Initial value</a></th>\n<td><code>auto</code></td>\n</tr>\n<tr>\n<th scope=\"row\">Applies to</th>\n<td>elements with <code><a title=\"The display CSS property specifies the type of rendering box used for an element. In HTML, default display property values are taken from behaviors described in the HTML specifications or from the browser/user default stylesheet. The default value in XML is inline.\" href=\"display\"><code>display</code></a>: marker;</code>\n</td>\n</tr>\n<tr>\n<th scope=\"row\"><a href=\"inheritance\">Inherited</a></th>\n<td>no</td>\n</tr>\n<tr>\n<th scope=\"row\">Media</th>\n<td>visual</td>\n</tr>\n<tr>\n<th scope=\"row\"><a href=\"computed_value\">Computed value</a></th>\n<td>as specified</td>\n</tr>\n<tr>\n<th scope=\"row\">Animatable</th>\n<td>no</td>\n</tr>\n<tr>\n<th scope=\"row\">Canonical order</th>\n<td>the unique non-ambiguous order defined by the formal grammar</td>\n</tr>\n</tbody></table> <h2 id=\"Syntax\">Syntax</h2> <pre data-language=\"css\">/* Keyword value */\nmarker-offset: auto;\n\n/* &lt;length&gt; values */\nmarker-offset: 10px;\nmarker-offset: 2em;\n\n/* Global values */\nmarker-offset: inherit;\nmarker-offset: initial;\nmarker-offset: unset;\n</pre> <h3 id=\"Values\">Values</h3> <dl> <dt><code>&lt;length&gt;</code></dt> <dd>See <a title=\"The &lt;length&gt; CSS data type denotes distance measurements. It is a &lt;number&gt; immediately followed by a length unit (px, em, pc, in, mm, …). Like for any CSS dimension, there is no space between the unit literal and the number. The length unit is optional after the &lt;number&gt; 0.\" href=\"length\"><code>&lt;length&gt;</code></a> for possible units.</dd> <dt><code>auto</code></dt> <dd>The browser will calculate and select an offset.</dd> </dl> <h3 id=\"Formal_syntax\">Formal syntax</h3> <pre class=\"syntaxbox\"><a title=\"Possible values: a number followed by'em', 'ex', 'ch', 'rem', 'px', 'cm', 'mm', 'in', 'vh', 'vw', 'vmin', 'vmax', 'pt', 'pc' or 'px', like 3px, 1.5cm, -0.5em or 0\" href=\"length\">&lt;length&gt;</a> | auto</pre> <h2 id=\"Examples\">Examples</h2> <pre data-language=\"css\">li:before {\n  display: marker;\n  marker-offset: 4px;\n} \n</pre> <h2 id=\"Specifications\">Specifications</h2> <p>Was proposed in <a href=\"http://www.w3.org/TR/2008/REC-CSS2-20080411/generate.html#markers\">CSS 2</a>, that was abandoned for CSS 2 (Level 1).</p> <h2 id=\"Browser_compatibility\">Browser compatibility</h2>  <div id=\"compat-desktop\"> <table class=\"compat-table\"> <tbody> <tr> <th>Feature</th> <th>Chrome</th> <th>Firefox (Gecko)</th> <th>Internet Explorer</th> <th>Opera</th> <th>Safari (WebKit)</th> </tr> <tr> <td>Basic support</td> <td><span style=\"color: #f00;\">No support</span></td> <td><span style=\"color: #f00;\">No support</span></td> <td><span style=\"color: #f00;\">No support</span></td> <td><span style=\"color: #f00;\">No support</span></td> <td><span style=\"color: #f00;\">No support</span></td> </tr> </tbody> </table> </div> <div id=\"compat-mobile\"> <table class=\"compat-table\"> <tbody> <tr> <th>Feature</th> <th>Android</th> <th>Firefox Mobile (Gecko)</th> <th>IE Phone</th> <th>Opera Mobile</th> <th>Safari Mobile</th> </tr> <tr> <td>Basic support</td> <td><span style=\"color: #f00;\">No support</span></td> <td><span style=\"color: #f00;\">No support</span></td> <td><span style=\"color: #f00;\">No support</span></td> <td><span style=\"color: #f00;\">No support</span></td> <td><span style=\"color: #f00;\">No support</span></td> </tr> </tbody> </table> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/marker-offset$edit\" class=\"_attribution-link\">Edit this page on MDN</a>\n  </p>\n</div>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2016 Mozilla Contributors<br>Licensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.<br>\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/marker-offset\" class=\"_attribution-link\">https://developer.mozilla.org/en-US/docs/Web/CSS/marker-offset</a>\n  </p>\n</div>\n","css_lists_and_counters":"<h1>CSS Lists and Counters</h1> <p><strong>CSS Lists and Counters</strong> is a module of CSS that defines how lists are laid out, how the list marker can be styled and how authors can create new counters.</p> <h2 id=\"Reference\">Reference</h2> <h3 id=\"Properties\">Properties</h3> <div class=\"index\"> <ul> <li><a href=\"list-style-image\" title=\"The list-style-image property specifies an image to be used as the list item marker.\"><code>list-style-image</code></a></li> <li><a href=\"list-style-type\" title=\"The list-style-type property specifies the appearance of a list item element. Because it is the only property that defaults to display:list-item, this is usually a &lt;li&gt; element, but can be any element with this display value.\"><code>list-style-type</code></a></li> <li><a href=\"list-style-position\" title=\"The list-style-position property specifies the position of the marker box in the principal block box.\"><code>list-style-position</code></a></li> <li><a href=\"list-style\" title=\"The list-style property is a shorthand property for setting list-style-type, list-style-image and list-style-position.\"><code>list-style</code></a></li> <li><a href=\"counter-reset\" title=\"The counter-reset CSS property is used to reset CSS Counters to a given value.\"><code>counter-reset</code></a></li> <li><a href=\"counter-increment\" title=\"The counter-increment CSS property is used to increase the value of CSS Counters by a given value. The counter's value can be reset using the counter-reset CSS property.\"><code>counter-increment</code></a></li> </ul> </div> <h3 id=\"At-rules\">At-rules</h3> <dl> <dt><a href=\"@counter-style\" title=\"The @counter-style CSS at-rule lets authors define specific counter styles that are not part of the predefined set of styles. A @counter-style rule defines how to convert a counter value into a string representation.\"><code>@counter-style</code></a></dt> <dd> <div class=\"index\"> <ul> <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/@counter-style/system\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>system</code></a></li> <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/@counter-style/additive-symbols\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>additive-symbols</code></a></li> <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/@counter-style/negative\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>negative</code></a></li> <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/@counter-style/prefix\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>prefix</code></a></li> <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/@counter-style/suffix\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>suffix</code></a></li> <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/@counter-style/range\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>range</code></a></li> <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/@counter-style/pad\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>pad</code></a></li> <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/@counter-style/speak-as\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>speak-as</code></a></li> <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/@counter-style/fallback\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>fallback</code></a></li> </ul> </div> </dd> </dl> <h2 id=\"Guides\">Guides</h2> <dl> <dt><a href=\"css_lists_and_counters/consistent_list_indentation\">Consistent list indentation</a></dt> <dd>Explains how to reach a consistent indentation between different browsers.</dd> <dt><a href=\"css_lists_and_counters/using_css_counters\">Using CSS counters</a></dt> <dd>Describes how to use counters to be able to use numbering outside of traditional list elements or to perform complex counting.</dd> </dl> <h2 id=\"Specifications\">Specifications</h2> <table class=\"standard-table\"> <thead> <tr> <th scope=\"col\">Specification</th> <th scope=\"col\">Status</th> <th scope=\"col\">Comment</th> </tr> </thead> <tbody> <tr> <td><a href=\"https://drafts.csswg.org/css-lists-3/\" class=\"external\" lang=\"en\" title=\"The 'CSS Lists and Counters Module Level 3' specification\" hreflang=\"en\">CSS Lists and Counters Module Level 3</a></td> <td><span class=\"spec-WD\">Working Draft</span></td> <td> </td> </tr> <tr> <td><a href=\"http://www.w3.org/TR/CSS2/generate.html\" class=\"external\" lang=\"en\" title=\"The 'CSS Level 2 (Revision 1)' specification\" hreflang=\"en\">CSS Level 2 (Revision 1)</a></td> <td><span class=\"spec-REC\">Recommendation</span></td> <td>Initial definition</td> </tr> </tbody> </table> <h2 id=\"Browser_compatibility\">Browser compatibility</h2>  <div id=\"compat-desktop\"> <table class=\"compat-table\"> <tbody> <tr> <th>Feature</th> <th>Chrome</th> <th>Firefox (Gecko)</th> <th>Internet Explorer</th> <th>Opera</th> <th>Safari (WebKit)</th> </tr> <tr> <td>Basic support</td> <td>1.0</td> <td>1.0 (1.7 or earlier)</td> <td><span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span></td> <td><span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span></td> <td><span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span></td> </tr> </tbody> </table> </div> <div id=\"compat-mobile\"> <table class=\"compat-table\"> <tbody> <tr> <th>Feature</th> <th>Android</th> <th>Firefox Mobile (Gecko)</th> <th>IE Mobile</th> <th>Opera Mobile</th> <th>Safari Mobile</th> </tr> <tr> <td>Basic support</td> <td>1.0</td> <td>1.0 (1)</td> <td><span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span></td> <td><span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span></td> <td><span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span></td> </tr> </tbody> </table> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Lists_and_Counters$edit\" class=\"_attribution-link\">Edit this page on MDN</a>\n  </p>\n</div>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2016 Mozilla Contributors<br>Licensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.<br>\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Lists_and_Counters\" class=\"_attribution-link\">https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Lists_and_Counters</a>\n  </p>\n</div>\n","css_colors/color_picker_tool":"<h1>CSS Colors: Color picker tool</h1> <div style=\"display: none;\"> <h2 name=\"ColorPicker_Tool\" id=\"ColorPicker_Tool\">ColorPicker tool</h2> <h3 id=\"HTML_Content\">HTML Content</h3> <pre data-language=\"html\">    &lt;div id=\"container\"&gt;\n        &lt;div id=\"palette\" class=\"block\"&gt;\n            &lt;div id=\"color-palette\"&gt;&lt;/div&gt;\n            &lt;div id=\"color-info\"&gt;\n                &lt;div class=\"title\"&gt; CSS Color &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n\n        &lt;div id=\"picker\" class=\"block\"&gt;\n            &lt;div class=\"ui-color-picker\" data-topic=\"picker\" data-mode=\"HSL\"&gt;&lt;/div&gt;\n            &lt;div id=\"picker-samples\" sample-id=\"master\"&gt;&lt;/div&gt;\n            &lt;div id=\"controls\"&gt;\n                &lt;div id=\"delete\"&gt;\n                    &lt;div id=\"trash-can\"&gt;&lt;/div&gt;\n                &lt;/div&gt;\n                &lt;div id=\"void-sample\" class=\"icon\"&gt;&lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n\n        &lt;div id=\"canvas\" data-tutorial=\"drop\"&gt;\n            &lt;div id=\"zindex\" class=\"ui-input-slider\" data-topic=\"z-index\" data-info=\"z-index\"\n                data-max=\"20\" data-sensivity=\"10\"&gt;&lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n\n</pre> <h3 id=\"CSS_Content\">CSS Content</h3> <pre data-language=\"css\">/*\n * COLOR PICKER TOOL\n */\n\n.ui-color-picker {\n\twidth: 420px;\n\tmargin: 0;\n\tborder: 1px solid #DDD;\n\tbackground-color: #FFF;\n\tdisplay: table;\n\n\t-moz-user-select: none;\n\t-webkit-user-select: none;\n\t-ms-user-select: none;\n\tuser-select: none;\n}\n\n.ui-color-picker .picking-area {\n\twidth: 198px;\n\theight: 198px;\n\tmargin: 5px;\n\tborder: 1px solid #DDD;\n\tposition: relative;\n\tfloat: left;\n\tdisplay: table;\n}\n\n.ui-color-picker .picking-area:hover {\n\tcursor: default;\n}\n\n/* HSV format - Hue-Saturation-Value(Brightness) */\n.ui-color-picker .picking-area {\n\tbackground: url('https://mdn.mozillademos.org/files/5707/picker_mask_200.png') center center;\n\n\tbackground: -moz-linear-gradient(bottom, #000 0%, rgba(0, 0, 0, 0) 100%),\n\t\t\t\t-moz-linear-gradient(left, #FFF 0%, rgba(255, 255, 255, 0) 100%);\n\tbackground: -webkit-linear-gradient(bottom, #000 0%, rgba(0, 0, 0, 0) 100%),\n\t\t\t\t-webkit-linear-gradient(left, #FFF 0%, rgba(255, 255, 255, 0) 100%);\n\tbackground: -ms-linear-gradient(bottom, #000 0%, rgba(0, 0, 0, 0) 100%),\n\t\t\t\t-ms-linear-gradient(left, #FFF 0%, rgba(255, 255, 255, 0) 100%);\n\tbackground: -o-linear-gradient(bottom, #000 0%, rgba(0, 0, 0, 0) 100%),\n\t\t\t\t-o-linear-gradient(left, #FFF 0%, rgba(255, 255, 255, 0) 100%);\n\n\tbackground-color: #F00;\n}\n\n/* HSL format - Hue-Saturation-Lightness */\n.ui-color-picker[data-mode='HSL'] .picking-area {\n\tbackground: -moz-linear-gradient(top, hsl(0, 0%, 100%) 0%, hsla(0, 0%, 100%, 0) 50%,\n\t\t\t\t\t\t\t\t\thsla(0, 0%, 0%, 0) 50%, hsl(0, 0%, 0%) 100%),\n\t\t\t\t-moz-linear-gradient(left, hsl(0, 0%, 50%) 0%, hsla(0, 0%, 50%, 0) 100%);\n\tbackground: -webkit-linear-gradient(top, hsl(0, 0%, 100%) 0%, hsla(0, 0%, 100%, 0) 50%,\n\t\t\t\t\t\t\t\t\thsla(0, 0%, 0%, 0) 50%, hsl(0, 0%, 0%) 100%),\n\t\t\t\t-webkit-linear-gradient(left, hsl(0, 0%, 50%) 0%, hsla(0, 0%, 50%, 0) 100%);\n\tbackground: -ms-linear-gradient(top, hsl(0, 0%, 100%) 0%, hsla(0, 0%, 100%, 0) 50%,\n\t\t\t\t\t\t\t\t\thsla(0, 0%, 0%, 0) 50%, hsl(0, 0%, 0%) 100%),\n\t\t\t\t-ms-linear-gradient(left, hsl(0, 0%, 50%) 0%, hsla(0, 0%, 50%, 0) 100%);\n\tbackground: -o-linear-gradient(top, hsl(0, 0%, 100%) 0%, hsla(0, 0%, 100%, 0) 50%,\n\t\t\t\t\t\t\t\t\thsla(0, 0%, 0%, 0) 50%, hsl(0, 0%, 0%) 100%),\n\t\t\t\t-o-linear-gradient(left, hsl(0, 0%, 50%) 0%, hsla(0, 0%, 50%, 0) 100%);\n\tbackground-color: #F00;\n}\n\n.ui-color-picker .picker {\n\twidth: 10px;\n\theight: 10px;\n\tborder-radius: 50%;\n\tborder: 1px solid #FFF;\n\tposition: absolute;\n\ttop: 45%;\n\tleft: 45%;\n}\n\n.ui-color-picker .picker:before {\n\twidth: 8px;\n\theight: 8px;\n\tcontent: \"\";\n\tposition: absolute;\n\tborder: 1px solid #999;\n\tborder-radius: 50%;\n}\n\n.ui-color-picker .hue,\n.ui-color-picker .alpha {\n\twidth: 198px;\n\theight: 28px;\n\tmargin: 5px;\n\tborder: 1px solid #FFF;\n\tfloat: left;\n}\n\n.ui-color-picker .hue {\n\tbackground: url(\"https://mdn.mozillademos.org/files/5701/hue.png\") center;\n\tbackground: -moz-linear-gradient(left, #F00 0%, #FF0 16.66%, #0F0 33.33%, #0FF 50%,\n\t\t\t\t#00F 66.66%, #F0F 83.33%, #F00 100%);\n\tbackground: -webkit-linear-gradient(left, #F00 0%, #FF0 16.66%, #0F0 33.33%, #0FF 50%,\n\t\t\t\t#00F 66.66%, #F0F 83.33%, #F00 100%);\n\tbackground: -ms-linear-gradient(left, #F00 0%, #FF0 16.66%, #0F0 33.33%, #0FF 50%,\n\t\t\t\t#00F 66.66%, #F0F 83.33%, #F00 100%);\n\tbackground: -o-linear-gradient(left, #F00 0%, #FF0 16.66%, #0F0 33.33%, #0FF 50%,\n\t\t\t\t#00F 66.66%, #F0F 83.33%, #F00 100%);\n}\n\n.ui-color-picker .alpha {\n\tborder: 1px solid #CCC;\n\tbackground: url(\"https://mdn.mozillademos.org/files/5705/alpha.png\");\n}\n\n.ui-color-picker .alpha-mask {\n\twidth: 100%;\n\theight: 100%;\n\tbackground: url(\"https://mdn.mozillademos.org/files/6089/alpha_mask.png\");\n}\n\n.ui-color-picker .slider-picker {\n\twidth: 2px;\n\theight: 100%;\n\tborder: 1px solid #777;\n\tbackground-color: #FFF;\n\tposition: relative;\n\ttop: -1px;\n}\n\n/* input HSV and RGB */\n\n.ui-color-picker .info {\n\twidth: 200px;\n\tmargin: 5px;\n\tfloat: left;\n}\n\n.ui-color-picker .info * {\n\tfloat: left;\n}\n\n.ui-color-picker .input {\n\twidth: 64px;\n\tmargin: 5px 2px;\n\tfloat: left;\n}\n\n.ui-color-picker .input .name {\n\theight: 20px;\n\twidth: 30px;\n\ttext-align: center;\n\tfont-size: 14px;\n\tline-height: 18px;\n\tfloat: left;\n}\n\n.ui-color-picker .input input {\n\twidth: 30px;\n\theight: 18px;\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 1px solid #DDD;\n\ttext-align: center;\n\tfloat: right;\n\n\t-moz-user-select: text;\n\t-webkit-user-select: text;\n\t-ms-user-select: text;\n}\n\n.ui-color-picker .input[data-topic=\"lightness\"] {\n\tdisplay: none;\n}\n\n.ui-color-picker[data-mode='HSL'] .input[data-topic=\"value\"] {\n\tdisplay: none;\n}\n\n.ui-color-picker[data-mode='HSL'] .input[data-topic=\"lightness\"] {\n\tdisplay: block;\n}\n\n.ui-color-picker .input[data-topic=\"alpha\"] {\n\tmargin-top: 10px;\n\twidth: 93px;\n}\n\n.ui-color-picker .input[data-topic=\"alpha\"] &gt; .name {\n\twidth: 60px;\n}\n\n.ui-color-picker .input[data-topic=\"alpha\"] &gt; input {\n\tfloat: right;\n}\n\n.ui-color-picker .input[data-topic=\"hexa\"] {\n\twidth: auto;\n\tfloat: right;\n\tmargin: 6px 8px 0 0;\n}\n\n.ui-color-picker .input[data-topic=\"hexa\"] &gt; .name {\n\tdisplay: none;\n}\n\n.ui-color-picker .input[data-topic=\"hexa\"] &gt; input {\n\twidth: 90px;\n\theight: 24px;\n\tpadding: 2px 0;\n\t-moz-box-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\tbox-sizing: border-box;\n}\n\n/* Preview color */\n.ui-color-picker .preview {\n\twidth: 95px;\n\theight: 53px;\n\tmargin: 5px;\n\tmargin-top: 10px;\n\tborder: 1px solid #DDD;\n\tbackground-image: url(\"https://mdn.mozillademos.org/files/5705/alpha.png\");\n\tfloat: left;\n\tposition: relative;\n}\n\n.ui-color-picker .preview:before {\n\theight: 100%;\n\twidth: 50%;\n\tleft: 50%;\n\ttop: 0;\n\tcontent: \"\";\n\tbackground: #FFF;\n\tposition: absolute;\n\tz-index: 1;\n}\n\n.ui-color-picker .preview-color {\n\twidth: 100%;\n\theight: 100%;\n\tbackground-color: rgba(255, 0, 0, 0.5);\n\tposition: absolute;\n\tz-index: 1;\n}\n\n.ui-color-picker .switch_mode {\n\twidth: 10px;\n\theight: 20px;\n\tposition: relative;\n\tborder-radius: 5px 0 0 5px;\n\tborder: 1px solid #DDD;\n\tbackground-color: #EEE;\n\tleft: -12px;\n\ttop: -1px;\n\tz-index: 1;\n\ttransition: all 0.5s;\n}\n\n.ui-color-picker .switch_mode:hover {\n\tbackground-color: #CCC;\n\tcursor: pointer;\n}\n\n/*\n * UI Component\n */\n\n.ui-input-slider {\n\theight: 20px;\n\tfont-family: \"Segoe UI\", Arial, Helvetica, sans-serif;\n\t-moz-user-select: none;\n\tuser-select: none;\n}\n\n.ui-input-slider * {\n\tfloat: left;\n\theight: 100%;\n\tline-height: 100%;\n}\n\n/* Input Slider */\n\n.ui-input-slider &gt; input {\n\tmargin: 0;\n\tpadding: 0;\n\twidth: 50px;\n\ttext-align: center;\n\n\t-moz-box-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\tbox-sizing: border-box;\n}\n\n.ui-input-slider-info {\n\twidth: 90px;\n\tpadding: 0px 10px 0px 0px;\n\ttext-align: right;\n\ttext-transform: lowercase;\n}\n\n.ui-input-slider-left, .ui-input-slider-right {\n\twidth: 16px;\n\tcursor: pointer;\n\tbackground: url(\"https://mdn.mozillademos.org/files/5679/arrows.png\") center left no-repeat;\n}\n\n.ui-input-slider-right {\n\tbackground: url(\"https://mdn.mozillademos.org/files/5679/arrows.png\") center right no-repeat;\n}\n\n.ui-input-slider-name {\n\twidth: 90px;\n\tpadding: 0 10px 0 0;\n\ttext-align: right;\n\ttext-transform: lowercase;\n}\n\n.ui-input-slider-btn-set {\n\twidth: 25px;\n\tbackground-color: #2C9FC9;\n\tborder-radius: 5px;\n\tcolor: #FFF;\n\tfont-weight: bold;\n\tline-height: 14px;\n\ttext-align: center;\n}\n\n.ui-input-slider-btn-set:hover {\n\tbackground-color: #379B4A;\n\tcursor: pointer;\n}\n\n/*\n * COLOR PICKER TOOL\n */\n\nbody {\n\tmax-width: 1000px;\n\tmargin: 0 auto;\n\n\tfont-family: \"Segoe UI\", Arial, Helvetica, sans-serif;\n\n\tbox-shadow: 0 0 5px 0 #999;\n\n\t-moz-box-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\tbox-sizing: border-box;\n\n\t-moz-user-select: none;\n\t-webkit-user-select: none;\n\t-ms-user-select: none;\n\tuser-select: none;\n\n}\n\n/**\n * Resize Handle\n */\n.resize-handle {\n\twidth: 10px;\n\theight: 10px;\n\tbackground: url('https://mdn.mozillademos.org/files/6083/resize.png') center center no-repeat;\n\tposition: absolute;\n\tbottom: 0;\n\tright: 0;\n}\n\n[data-resize='both']:hover {\n\tcursor: nw-resize !important;\n}\n\n[data-resize='width']:hover {\n\tcursor: w-resize !important;\n}\n\n[data-resize='height']:hover {\n\tcursor: n-resize !important;\n}\n\n[data-hidden='true'] {\n\tdisplay: none;\n}\n\n[data-collapsed='true'] {\n\theight: 0 !important;\n}\n\n.block {\n\tdisplay: table;\n}\n\n\n/**\n * \tContainer\n */\n#container {\n\twidth: 100%;\n\n\t-moz-box-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\tbox-sizing: border-box;\n\n\tdisplay: table;\n}\n\n/**\n * \tPicker Zone\n */\n\n#picker {\n\tpadding: 10px;\n\twidth: 980px;\n}\n\n.ui-color-picker {\n\tpadding: 3px 5px;\n\tfloat: left;\n\tborder-color: #FFF;\n}\n\n.ui-color-picker .switch_mode {\n\tdisplay: none;\n}\n\n.ui-color-picker .preview-color:hover {\n\tcursor: move;\n}\n\n/**\n * Picker Container\n */\n\n#picker-samples {\n\twidth: 375px;\n\theight: 114px;\n\tmax-height: 218px;\n\tmargin: 0 10px 0 30px;\n\toverflow: hidden;\n\tposition: relative;\n\tfloat: left;\n\n\ttransition: all 0.2s;\n}\n\n#picker-samples .sample {\n\twidth: 40px;\n\theight: 40px;\n\tmargin: 5px;\n\tborder: 1px solid #DDD;\n\tposition: absolute;\n\tfloat: left;\n\ttransition: all 0.2s;\n}\n\n#picker-samples .sample:hover {\n\tcursor: pointer;\n\tborder-color: #BBB;\n\ttransform: scale(1.15);\n\tborder-radius: 3px;\n}\n\n#picker-samples .sample[data-active='true'] {\n\tborder-color: #999;\n}\n\n#picker-samples .sample[data-active='true']:after {\n\tcontent: \"\";\n\tposition: absolute;\n\tbackground: url('https://mdn.mozillademos.org/files/6065/arrow.png') center no-repeat;\n\twidth: 100%;\n\theight: 12px;\n\ttop: -12px;\n\tz-index: 2;\n}\n\n#picker-samples #add-icon {\n\twidth: 100%;\n\theight: 100%;\n\tposition: relative;\n\tbox-shadow: inset 0px 0px 2px 0px #DDD;\n}\n\n#picker-samples #add-icon:hover {\n\tcursor: pointer;\n\tborder-color: #DDD;\n\tbox-shadow: inset 0px 0px 5px 0px #CCC;\n}\n\n#picker-samples #add-icon:before,\n#picker-samples #add-icon:after {\n\tcontent: \"\";\n\tposition: absolute;\n\tbackground-color: #EEE;\n\tbox-shadow: 0 0 1px 0 #EEE;\n}\n\n#picker-samples #add-icon:before {\n\twidth: 70%;\n\theight: 16%;\n\ttop: 42%;\n\tleft: 15%;\n}\n\n#picker-samples #add-icon:after {\n\twidth: 16%;\n\theight: 70%;\n\ttop: 15%;\n\tleft: 42%;\n}\n\n#picker-samples #add-icon:hover:before,\n#picker-samples #add-icon:hover:after {\n\tbackground-color: #DDD;\n\tbox-shadow: 0 0 1px 0 #DDD;\n}\n\n/**\n * \tControls\n */\n\n#controls {\n\twidth: 110px;\n\tpadding: 10px;\n\tfloat: right;\n}\n\n#controls #picker-switch {\n\ttext-align: center;\n\tfloat: left;\n}\n\n#controls .icon {\n\twidth: 48px;\n\theight: 48px;\n\tmargin: 10px 0;\n\tbackground-repeat: no-repeat;\n\tbackground-position: center;\n\tborder: 1px solid #DDD;\n\tdisplay: table;\n\tfloat: left;\n}\n\n#controls .icon:hover {\n\tcursor: pointer;\n}\n\n#controls .picker-icon {\n\tbackground-image: url('https://mdn.mozillademos.org/files/6081/picker.png');\n}\n\n#controls #void-sample {\n\tmargin-right: 10px;\n\tbackground-image: url('https://mdn.mozillademos.org/files/6087/void.png');\n\tbackground-position: center left;\n}\n\n#controls #void-sample[data-active='true'] {\n\tborder-color: #CCC;\n\tbackground-position: center right;\n}\n\n#controls .switch {\n\twidth: 106px;\n\tpadding: 1px;\n\tborder: 1px solid #CCC;\n\tfont-size: 14px;\n\ttext-align: center;\n\tline-height: 24px;\n\toverflow: hidden;\n\tfloat: left;\n}\n\n#controls .switch:hover {\n\tcursor: pointer;\n}\n\n#controls .switch &gt; * {\n\twidth: 50%;\n\tpadding: 2px 0;\n\tbackground-color: #EEE;\n\tfloat: left;\n}\n\n#controls .switch [data-active='true'] {\n\tcolor: #FFF;\n\tbackground-image: url('https://mdn.mozillademos.org/files/6025/grain.png');\n\tbackground-color: #777;\n}\n\n/**\n * \tTrash Can\n */\n\n#delete {\n\twidth: 100%;\n\theight: 94px;\n\tbackground-color: #DDD;\n\tbackground-image: url('https://mdn.mozillademos.org/files/6025/grain.png');\n\tbackground-repeat: repeat;\n\n\ttext-align: center;\n\tcolor: #777;\n\n\tposition: relative;\n\tfloat: right;\n}\n\n#delete #trash-can {\n\twidth: 80%;\n\theight: 80%;\n\tborder: 2px dashed #FFF;\n\tborder-radius: 5px;\n\tbackground: url('https://mdn.mozillademos.org/files/6085/trash-can.png') no-repeat center;\n\n\tposition: absolute;\n\ttop: 10%;\n\tleft: 10%;\n\n\t-moz-box-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\tbox-sizing: border-box;\n\n\ttransition: all 0.2s;\n}\n\n#delete[drag-state='enter'] {\n\tbackground-color: #999;\n}\n\n/**\n * \tColor Theme\n */\n\n#color-theme {\n\tmargin: 0 8px 0 0;\n\tborder: 1px solid #EEE;\n\tdisplay: inline-block;\n\tfloat: right;\n}\n\n#color-theme .box {\n\twidth: 80px;\n\theight: 92px;\n\tfloat: left;\n}\n\n/**\n * Color info box\n */\n#color-info {\n\twidth: 360px;\n\tfloat: left;\n}\n\n#color-info .title {\n\twidth: 100%;\n\tpadding: 15px;\n\tfont-size: 18px;\n\ttext-align: center;\n\tbackground-image: url('https://mdn.mozillademos.org/files/6071/color-wheel.png');\n\tbackground-repeat:no-repeat;\n\tbackground-position: center left 30%;\n}\n\n#color-info .copy-container {\n\tposition: absolute;\n\ttop: -100%;\n}\n\n#color-info .property {\n\tmin-width: 280px;\n\theight: 30px;\n\tmargin: 10px 0;\n\ttext-align: center;\n\tline-height: 30px;\n}\n\n#color-info .property &gt; * {\n\tfloat: left;\n}\n\n#color-info .property .type {\n\twidth: 60px;\n\theight: 100%;\n\tpadding: 0 16px 0 0;\n\ttext-align: right;\n}\n\n#color-info .property .value {\n\twidth: 200px;\n\theight: 100%;\n\tpadding: 0 10px;\n\tfont-family: \"Segoe UI\", Arial, Helvetica, sans-serif;\n\tfont-size: 16px;\n\tcolor: #777;\n\ttext-align: center;\n\tbackground-color: #FFF;\n\tborder: none;\n}\n\n#color-info .property .value:hover {\n\tcolor: #37994A;\n}\n\n#color-info .property .value:hover + .copy {\n\tbackground-position: center right;\n}\n\n#color-info .property .copy {\n\twidth: 24px;\n\theight: 100%;\n\tpadding: 0 5px;\n\tbackground-color: #FFF;\n\tbackground-image: url('https://mdn.mozillademos.org/files/6073/copy.png');\n\tbackground-repeat: no-repeat;\n\tbackground-position: center left;\n\tborder-left: 1px solid #EEE;\n\ttext-align: right;\n\tfloat: left;\n}\n\n#color-info .property .copy:hover {\n\tbackground-position: center right;\n}\n\n\n/**\n * \tColor Palette\n */\n\n#palette {\n\twidth: 1000px;\n\tpadding: 10px 0;\n\tbackground-image: url('https://mdn.mozillademos.org/files/6025/grain.png');\n\tbackground-repeat: repeat;\n\tbackground-color: #EEE;\n\tcolor: #777;\n\n\t-moz-box-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\tbox-sizing: border-box;\n}\n\n#color-palette {\n\twidth: 640px;\n\tfont-family: Arial, Helvetica, sans-serif;\n\tcolor: #777;\n\tfloat: left;\n}\n\n#color-palette .container {\n\twidth: 100%;\n\theight: 50px;\n\tline-height: 50px;\n\toverflow: hidden;\n\tfloat: left;\n\ttransition: all 0.5s;\n}\n\n#color-palette .container &gt; * {\n\tfloat: left;\n}\n\n#color-palette .title {\n\twidth: 100px;\n\tpadding: 0 10px;\n\ttext-align: right;\n\tline-height: inherit;\n}\n\n#color-palette .palette {\n\twidth: 456px;\n\theight: 38px;\n\tmargin: 3px;\n\tpadding: 3px;\n\tdisplay: table;\n\tbackground-color: #FFF;\n}\n\n#color-palette .palette .sample {\n\twidth: 30px;\n\theight: 30px;\n\tmargin: 3px;\n\tposition: relative;\n\tborder: 1px solid #DDD;\n\tfloat: left;\n\ttransition: all 0.2s;\n}\n\n#color-palette .palette .sample:hover {\n\tcursor: pointer;\n\tborder-color: #BBB;\n\ttransform: scale(1.15);\n\tborder-radius: 3px;\n}\n\n#color-palette .controls {\n}\n\n#color-palette .controls &gt; * {\n\tfloat: left;\n}\n\n#color-palette .controls &gt; *:hover {\n\tcursor: pointer;\n}\n\n#color-palette .controls .lock {\n\twidth: 24px;\n\theight: 24px;\n\tmargin: 10px;\n\tpadding: 3px;\n\tbackground-image: url('https://mdn.mozillademos.org/files/6077/lock.png');\n\tbackground-repeat: no-repeat;\n\tbackground-position: bottom right;\n}\n\n#color-palette .controls .lock:hover {\n\t/*background-image: url('images/unlocked-hover.png');*/\n\tbackground-position: bottom left;\n}\n\n#color-palette .controls .lock[locked-state='true'] {\n\t/*background-image: url('images/locked.png');*/\n\tbackground-position: top left ;\n}\n\n#color-palette .controls .lock[locked-state='true']:hover {\n\t/*background-image: url('images/lock-hover.png');*/\n\tbackground-position: top right;\n}\n\n/**\n * Canvas\n */\n\n#canvas {\n\twidth: 100%;\n\theight: 300px;\n\tmin-height: 250px;\n\tborder-top: 1px solid #DDD;\n\tbackground-image: url('https://mdn.mozillademos.org/files/6025/grain.png');\n\tbackground-repeat: repeat;\n\tposition: relative;\n\tfloat: left;\n}\n\n#canvas[data-tutorial='drop'] {\n\ttext-align: center;\n\tfont-size: 30px;\n\tcolor: #777;\n}\n\n#canvas[data-tutorial='drop']:before {\n\tcontent: \"Drop colors here to compare\";\n\twidth: 40%;\n\tpadding: 30px 9% 70px 11%;\n\n\tbackground-image: url('https://mdn.mozillademos.org/files/6075/drop.png');\n\tbackground-repeat: no-repeat;\n\tbackground-position: left 35px top 60%;\n\n\ttext-align: right;\n\n\tborder: 3px dashed rgb(221, 221, 221);\n\tborder-radius: 15px;\n\n\tposition: absolute;\n\ttop: 50px;\n\tleft: 20%;\n}\n\n#canvas[data-tutorial='drop']:after {\n\tcontent: \"adjust, change or modify\";\n\twidth: 40%;\n\tfont-size: 24px;\n\tposition: absolute;\n\ttop: 130px;\n\tleft: 32%;\n\tz-index: 2;\n}\n\n#canvas [data-tutorial='dblclick'] {\n\tbackground-color: #999 !important;\n}\n\n#canvas [data-tutorial='dblclick']:before {\n\tcontent: \"double click to activate\";\n\twidth: 80px;\n\tcolor: #FFF;\n\tposition: absolute;\n\ttop: 10%;\n\tleft: 20%;\n\tz-index: 2;\n}\n\n#canvas .sample {\n\twidth: 100px;\n\theight: 100px;\n\tmin-width: 20px;\n\tmin-height: 20px;\n\tposition: absolute;\n\tborder: 1px solid rgba(255, 255, 255, 0.3);\n}\n\n#canvas .sample:hover {\n\tcursor: move;\n}\n\n#canvas .sample[data-active='true']:after {\n\tcontent: \"\";\n\tposition: absolute;\n\tbackground: url('https://mdn.mozillademos.org/files/6065/arrow.png') center no-repeat;\n\twidth: 100%;\n\theight: 12px;\n\ttop: -12px;\n\tz-index: 2;\n}\n\n#canvas .sample:hover &gt; * {\n\tcursor: pointer;\n\tdisplay: block !important;\n}\n\n#canvas .sample .resize-handle {\n\tdisplay: none;\n}\n\n#canvas .sample .pick {\n\twidth: 10px;\n\theight: 10px;\n\tmargin: 5px;\n\tbackground: url('https://mdn.mozillademos.org/files/6079/pick.png') center no-repeat;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tdisplay: none;\n}\n\n#canvas .sample .delete {\n\twidth: 10px;\n\theight: 10px;\n\tmargin: 5px;\n\tbackground: url('https://mdn.mozillademos.org/files/6069/close.png') center no-repeat;\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n\tdisplay: none;\n}\n\n\n/**\n * Canvas controls\n */\n\n#canvas .toggle-bg {\n\twidth: 16px;\n\theight: 16px;\n\tmargin: 5px;\n\tbackground: url(\"images/canvas-controls.png\") center left no-repeat;\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n}\n\n#canvas .toggle-bg:hover {\n\tcursor: pointer;\n}\n\n#canvas[data-bg='true'] {\n\tbackground: none;\n}\n\n#canvas[data-bg='true'] .toggle-bg {\n\tbackground: url('https://mdn.mozillademos.org/files/6067/canvas-controls.png') center right no-repeat;\n}\n\n#zindex {\n\theight: 20px;\n\tmargin: 5px;\n\tfont-size: 16px;\n\tposition: absolute;\n\topacity: 0;\n\ttop: -10000px;\n\tleft: 0;\n\tcolor: #777;\n\tfloat: left;\n\ttransition: opacity 1s;\n}\n\n#zindex input {\n\tborder: 1px solid #DDD;\n\tfont-size: 16px;\n\tcolor: #777;\n}\n\n#zindex .ui-input-slider-info {\n\twidth: 60px;\n}\n\n#zindex[data-active='true'] {\n\ttop: 0;\n\topacity: 1;\n}\n\n</pre> <h3 id=\"JavaScript_Content\">JavaScript Content</h3> <pre data-language=\"js\">'use strict';\n\nvar UIColorPicker = (function UIColorPicker() {\n\n\tfunction getElemById(id) {\n\t\treturn document.getElementById(id);\n\t}\n\n\tvar subscribers = [];\n\tvar pickers = [];\n\n\t/**\n\t * RGBA Color class\n\t *\n\t * HSV/HSB and HSL (hue, saturation, value / brightness, lightness)\n\t * @param hue\t\t\t0-360\n\t * @param saturation\t0-100\n\t * @param value \t\t0-100\n\t * @param lightness\t\t0-100\n\t */\n\n\tfunction Color(color) {\n\n\t\tif(color instanceof Color === true) {\n\t\t\tthis.copy(color);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.r = 0;\n\t\tthis.g = 0;\n\t\tthis.b = 0;\n\t\tthis.a = 1;\n\t\tthis.hue = 0;\n\t\tthis.saturation = 0;\n\t\tthis.value = 0;\n\t\tthis.lightness = 0;\n\t\tthis.format = 'HSV';\n\t}\n\n\tfunction RGBColor(r, g, b) {\n\t\tvar color = new Color();\n\t\tcolor.setRGBA(r, g, b, 1);\n\t\treturn color;\n\t}\n\n\tfunction RGBAColor(r, g, b, a) {\n\t\tvar color = new Color();\n\t\tcolor.setRGBA(r, g, b, a);\n\t\treturn color;\n\t}\n\n\tfunction HSVColor(h, s, v) {\n\t\tvar color = new Color();\n\t\tcolor.setHSV(h, s, v);\n\t\treturn color;\n\t}\n\n\tfunction HSVAColor(h, s, v, a) {\n\t\tvar color = new Color();\n\t\tcolor.setHSV(h, s, v);\n\t\tcolor.a = a;\n\t\treturn color;\n\t}\n\n\tfunction HSLColor(h, s, l) {\n\t\tvar color = new Color();\n\t\tcolor.setHSL(h, s, l);\n\t\treturn color;\n\t}\n\n\tfunction HSLAColor(h, s, l, a) {\n\t\tvar color = new Color();\n\t\tcolor.setHSL(h, s, l);\n\t\tcolor.a = a;\n\t\treturn color;\n\t}\n\n\tColor.prototype.copy = function copy(obj) {\n\t\tif(obj instanceof Color !== true) {\n\t\t\tconsole.log('Typeof parameter not Color');\n\t\t\treturn;\n\t\t}\n\n\t\tthis.r = obj.r;\n\t\tthis.g = obj.g;\n\t\tthis.b = obj.b;\n\t\tthis.a = obj.a;\n\t\tthis.hue = obj.hue;\n\t\tthis.saturation = obj.saturation;\n\t\tthis.value = obj.value;\n\t\tthis.format = '' + obj.format;\n\t\tthis.lightness = obj.lightness;\n\t};\n\n\tColor.prototype.setFormat = function setFormat(format) {\n\t\tif (format === 'HSV')\n\t\t\tthis.format = 'HSV';\n\t\tif (format === 'HSL')\n\t\t\tthis.format = 'HSL';\n\t};\n\n\t/*========== Methods to set Color Properties ==========*/\n\n\tColor.prototype.isValidRGBValue = function isValidRGBValue(value) {\n\t\treturn (typeof(value) === 'number' &amp;&amp; isNaN(value) === false &amp;&amp;\n\t\t\tvalue &gt;= 0 &amp;&amp; value &lt;= 255);\n\t};\n\n\tColor.prototype.setRGBA = function setRGBA(red, green, blue, alpha) {\n\t\tif (this.isValidRGBValue(red) === false ||\n\t\t\tthis.isValidRGBValue(green) === false ||\n\t\t\tthis.isValidRGBValue(blue) === false)\n\t\t\treturn;\n\n\t\t\tthis.r = red | 0;\n\t\t\tthis.g = green | 0;\n\t\t\tthis.b = blue | 0;\n\n\t\tif (this.isValidRGBValue(alpha) === true)\n\t\t\tthis.a = alpha | 0;\n\t};\n\n\tColor.prototype.setByName = function setByName(name, value) {\n\t\tif (name === 'r' || name === 'g' || name === 'b') {\n\t\t\tif(this.isValidRGBValue(value) === false)\n\t\t\t\treturn;\n\n\t\t\tthis[name] = value;\n\t\t\tthis.updateHSX();\n\t\t}\n\t};\n\n\tColor.prototype.setHSV = function setHSV(hue, saturation, value) {\n\t\tthis.hue = hue;\n\t\tthis.saturation = saturation;\n\t\tthis.value = value;\n\t\tthis.HSVtoRGB();\n\t};\n\n\tColor.prototype.setHSL = function setHSL(hue, saturation, lightness) {\n\t\tthis.hue = hue;\n\t\tthis.saturation = saturation;\n\t\tthis.lightness = lightness;\n\t\tthis.HSLtoRGB();\n\t};\n\n\tColor.prototype.setHue = function setHue(value) {\n\t\tif (typeof(value) !== 'number' || isNaN(value) === true ||\n\t\t\tvalue &lt; 0 || value &gt; 359)\n\t\t\treturn;\n\t\tthis.hue = value;\n\t\tthis.updateRGB();\n\t};\n\n\tColor.prototype.setSaturation = function setSaturation(value) {\n\t\tif (typeof(value) !== 'number' || isNaN(value) === true ||\n\t\t\tvalue &lt; 0 || value &gt; 100)\n\t\t\treturn;\n\t\tthis.saturation = value;\n\t\tthis.updateRGB();\n\t};\n\n\tColor.prototype.setValue = function setValue(value) {\n\t\tif (typeof(value) !== 'number' || isNaN(value) === true ||\n\t\t\tvalue &lt; 0 || value &gt; 100)\n\t\t\treturn;\n\t\tthis.value = value;\n\t\tthis.HSVtoRGB();\n\t};\n\n\tColor.prototype.setLightness = function setLightness(value) {\n\t\tif (typeof(value) !== 'number' || isNaN(value) === true ||\n\t\t\tvalue &lt; 0 || value &gt; 100)\n\t\t\treturn;\n\t\tthis.lightness = value;\n\t\tthis.HSLtoRGB();\n\t};\n\n\tColor.prototype.setHexa = function setHexa(value) {\n\t\tvar valid  = /(^#{0,1}[0-9A-F]{6}$)|(^#{0,1}[0-9A-F]{3}$)/i.test(value);\n\n\t\tif (valid !== true)\n\t\t\treturn;\n\n\t\tif (value[0] === '#')\n\t\t\tvalue = value.slice(1, value.length);\n\n\t\tif (value.length === 3)\n\t\t\tvalue = value.replace(/([0-9A-F])([0-9A-F])([0-9A-F])/i,'$1$1$2$2$3$3');\n\n\t\tthis.r = parseInt(value.substr(0, 2), 16);\n\t\tthis.g = parseInt(value.substr(2, 2), 16);\n\t\tthis.b = parseInt(value.substr(4, 2), 16);\n\n\t\tthis.alpha\t= 1;\n\t\tthis.RGBtoHSV();\n\t};\n\n\t/*========== Conversion Methods ==========*/\n\n\tColor.prototype.convertToHSL = function convertToHSL() {\n\t\tif (this.format === 'HSL')\n\t\t\treturn;\n\n\t\tthis.setFormat('HSL');\n\t\tthis.RGBtoHSL();\n\t};\n\n\tColor.prototype.convertToHSV = function convertToHSV() {\n\t\tif (this.format === 'HSV')\n\t\t\treturn;\n\n\t\tthis.setFormat('HSV');\n\t\tthis.RGBtoHSV();\n\t};\n\n\t/*========== Update Methods ==========*/\n\n\tColor.prototype.updateRGB = function updateRGB() {\n\t\tif (this.format === 'HSV') {\n\t\t\tthis.HSVtoRGB();\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.format === 'HSL') {\n\t\t\tthis.HSLtoRGB();\n\t\t\treturn;\n\t\t}\n\t};\n\n\tColor.prototype.updateHSX = function updateHSX() {\n\t\tif (this.format === 'HSV') {\n\t\t\tthis.RGBtoHSV();\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.format === 'HSL') {\n\t\t\tthis.RGBtoHSL();\n\t\t\treturn;\n\t\t}\n\t};\n\n\tColor.prototype.HSVtoRGB = function HSVtoRGB() {\n\t\tvar sat = this.saturation / 100;\n\t\tvar value = this.value / 100;\n\t\tvar C = sat * value;\n\t\tvar H = this.hue / 60;\n\t\tvar X = C * (1 - Math.abs(H % 2 - 1));\n\t\tvar m = value - C;\n\t\tvar precision = 255;\n\n\t\tC = (C + m) * precision | 0;\n\t\tX = (X + m) * precision | 0;\n\t\tm = m * precision | 0;\n\n\t\tif (H &gt;= 0 &amp;&amp; H &lt; 1) {\tthis.setRGBA(C, X, m);\treturn; }\n\t\tif (H &gt;= 1 &amp;&amp; H &lt; 2) {\tthis.setRGBA(X, C, m);\treturn; }\n\t\tif (H &gt;= 2 &amp;&amp; H &lt; 3) {\tthis.setRGBA(m, C, X);\treturn; }\n\t\tif (H &gt;= 3 &amp;&amp; H &lt; 4) {\tthis.setRGBA(m, X, C);\treturn; }\n\t\tif (H &gt;= 4 &amp;&amp; H &lt; 5) {\tthis.setRGBA(X, m, C);\treturn; }\n\t\tif (H &gt;= 5 &amp;&amp; H &lt; 6) {\tthis.setRGBA(C, m, X);\treturn; }\n\t};\n\n\tColor.prototype.HSLtoRGB = function HSLtoRGB() {\n\t\tvar sat = this.saturation / 100;\n\t\tvar light = this.lightness / 100;\n\t\tvar C = sat * (1 - Math.abs(2 * light - 1));\n\t\tvar H = this.hue / 60;\n\t\tvar X = C * (1 - Math.abs(H % 2 - 1));\n\t\tvar m = light - C/2;\n\t\tvar precision = 255;\n\n\t\tC = (C + m) * precision | 0;\n\t\tX = (X + m) * precision | 0;\n\t\tm = m * precision | 0;\n\n\t\tif (H &gt;= 0 &amp;&amp; H &lt; 1) {\tthis.setRGBA(C, X, m);\treturn; }\n\t\tif (H &gt;= 1 &amp;&amp; H &lt; 2) {\tthis.setRGBA(X, C, m);\treturn; }\n\t\tif (H &gt;= 2 &amp;&amp; H &lt; 3) {\tthis.setRGBA(m, C, X);\treturn; }\n\t\tif (H &gt;= 3 &amp;&amp; H &lt; 4) {\tthis.setRGBA(m, X, C);\treturn; }\n\t\tif (H &gt;= 4 &amp;&amp; H &lt; 5) {\tthis.setRGBA(X, m, C);\treturn; }\n\t\tif (H &gt;= 5 &amp;&amp; H &lt; 6) {\tthis.setRGBA(C, m, X);\treturn; }\n\t};\n\n\tColor.prototype.RGBtoHSV = function RGBtoHSV() {\n\t\tvar red\t\t= this.r / 255;\n\t\tvar green\t= this.g / 255;\n\t\tvar blue\t= this.b / 255;\n\n\t\tvar cmax = Math.max(red, green, blue);\n\t\tvar cmin = Math.min(red, green, blue);\n\t\tvar delta = cmax - cmin;\n\t\tvar hue = 0;\n\t\tvar saturation = 0;\n\n\t\tif (delta) {\n\t\t\tif (cmax === red ) { hue = ((green - blue) / delta); }\n\t\t\tif (cmax === green ) { hue = 2 + (blue - red) / delta; }\n\t\t\tif (cmax === blue ) { hue = 4 + (red - green) / delta; }\n\t\t\tif (cmax) saturation = delta / cmax;\n\t\t}\n\n\t\tthis.hue = 60 * hue | 0;\n\t\tif (this.hue &lt; 0) this.hue += 360;\n\t\tthis.saturation = (saturation * 100) | 0;\n\t\tthis.value = (cmax * 100) | 0;\n\t};\n\n\tColor.prototype.RGBtoHSL = function RGBtoHSL() {\n\t\tvar red\t\t= this.r / 255;\n\t\tvar green\t= this.g / 255;\n\t\tvar blue\t= this.b / 255;\n\n\t\tvar cmax = Math.max(red, green, blue);\n\t\tvar cmin = Math.min(red, green, blue);\n\t\tvar delta = cmax - cmin;\n\t\tvar hue = 0;\n\t\tvar saturation = 0;\n\t\tvar lightness = (cmax + cmin) / 2;\n\t\tvar X = (1 - Math.abs(2 * lightness - 1));\n\n\t\tif (delta) {\n\t\t\tif (cmax === red ) { hue = ((green - blue) / delta); }\n\t\t\tif (cmax === green ) { hue = 2 + (blue - red) / delta; }\n\t\t\tif (cmax === blue ) { hue = 4 + (red - green) / delta; }\n\t\t\tif (cmax) saturation = delta / X;\n\t\t}\n\n\t\tthis.hue = 60 * hue | 0;\n\t\tif (this.hue &lt; 0) this.hue += 360;\n\t\tthis.saturation = (saturation * 100) | 0;\n\t\tthis.lightness = (lightness * 100) | 0;\n\t};\n\n\t/*========== Get Methods ==========*/\n\n\tColor.prototype.getHexa = function getHexa() {\n\t\tvar r = this.r.toString(16);\n\t\tvar g = this.g.toString(16);\n\t\tvar b = this.b.toString(16);\n\t\tif (this.r &lt; 16) r = '0' + r;\n\t\tif (this.g &lt; 16) g = '0' + g;\n\t\tif (this.b &lt; 16) b = '0' + b;\n\t\tvar value = '#' + r + g + b;\n\t\treturn value.toUpperCase();\n\t};\n\n\tColor.prototype.getRGBA = function getRGBA() {\n\n\t\tvar rgb = '(' + this.r + ', ' + this.g + ', ' + this.b;\n\t\tvar a = '';\n\t\tvar v = '';\n\t\tvar x = parseFloat(this.a);\n\t\tif (x !== 1) {\n\t\t\ta = 'a';\n\t\t\tv = ', ' + x;\n\t\t}\n\n\t\tvar value = 'rgb' + a + rgb + v + ')';\n\t\treturn value;\n\t};\n\n\tColor.prototype.getHSLA = function getHSLA() {\n\t\tif (this.format === 'HSV') {\n\t\t\tvar color = new Color(this);\n\t\t\tcolor.setFormat('HSL');\n\t\t\tcolor.updateHSX();\n\t\t\treturn color.getHSLA();\n\t\t}\n\n\t\tvar a = '';\n\t\tvar v = '';\n\t\tvar hsl = '(' + this.hue + ', ' + this.saturation + '%, ' + this.lightness +'%';\n\t\tvar x = parseFloat(this.a);\n\t\tif (x !== 1) {\n\t\t\ta = 'a';\n\t\t\tv = ', ' + x;\n\t\t}\n\n\t\tvar value = 'hsl' + a + hsl + v + ')';\n\t\treturn value;\n\t};\n\n\tColor.prototype.getColor = function getColor() {\n\t\tif (this.a | 0 === 1)\n\t\t\treturn this.getHexa();\n\t\treturn this.getRGBA();\n\t};\n\n\t/*=======================================================================*/\n\t/*=======================================================================*/\n\n\t/*========== Capture Mouse Movement ==========*/\n\n\tvar setMouseTracking = function setMouseTracking(elem, callback) {\n\t\telem.addEventListener('mousedown', function(e) {\n\t\t\tcallback(e);\n\t\t\tdocument.addEventListener('mousemove', callback);\n\t\t});\n\n\t\tdocument.addEventListener('mouseup', function(e) {\n\t\t\tdocument.removeEventListener('mousemove', callback);\n\t\t});\n\t};\n\n\t/*====================*/\n\t// Color Picker Class\n\t/*====================*/\n\n\tfunction ColorPicker(node) {\n\t\tthis.color = new Color();\n\t\tthis.node = node;\n\t\tthis.subscribers = [];\n\n\t\tvar type = this.node.getAttribute('data-mode');\n\t\tvar topic = this.node.getAttribute('data-topic');\n\n\t\tthis.topic = topic;\n\t\tthis.picker_mode = (type === 'HSL') ? 'HSL' : 'HSV';\n\t\tthis.color.setFormat(this.picker_mode);\n\n\t\tthis.createPickingArea();\n\t\tthis.createHueArea();\n\n\t\tthis.newInputComponent('H', 'hue', this.inputChangeHue.bind(this));\n\t\tthis.newInputComponent('S', 'saturation', this.inputChangeSaturation.bind(this));\n\t\tthis.newInputComponent('V', 'value', this.inputChangeValue.bind(this));\n\t\tthis.newInputComponent('L', 'lightness', this.inputChangeLightness.bind(this));\n\n\t\tthis.createAlphaArea();\n\n\t\tthis.newInputComponent('R', 'red', this.inputChangeRed.bind(this));\n\t\tthis.newInputComponent('G', 'green', this.inputChangeGreen.bind(this));\n\t\tthis.newInputComponent('B', 'blue', this.inputChangeBlue.bind(this));\n\n\t\tthis.createPreviewBox();\n\t\tthis.createChangeModeButton();\n\n\t\tthis.newInputComponent('alpha', 'alpha', this.inputChangeAlpha.bind(this));\n\t\tthis.newInputComponent('hexa', 'hexa', this.inputChangeHexa.bind(this));\n\n\t\tthis.setColor(this.color);\n\t\tpickers[topic] = this;\n\t}\n\n\t/*************************************************************************/\n\t//\t\t\t\tFunction for generating the color-picker\n\t/*************************************************************************/\n\n\tColorPicker.prototype.createPickingArea = function createPickingArea() {\n\t\tvar area = document.createElement('div');\n\t\tvar picker = document.createElement('div');\n\n\t\tarea.className = 'picking-area';\n\t\tpicker.className = 'picker';\n\n\t\tthis.picking_area = area;\n\t\tthis.color_picker = picker;\n\t\tsetMouseTracking(area, this.updateColor.bind(this));\n\n\t\tarea.appendChild(picker);\n\t\tthis.node.appendChild(area);\n\t};\n\n\tColorPicker.prototype.createHueArea = function createHueArea() {\n\t\tvar area = document.createElement('div');\n\t\tvar picker = document.createElement('div');\n\n\t\tarea.className = 'hue';\n\t\tpicker.className ='slider-picker';\n\n\t\tthis.hue_area = area;\n\t\tthis.hue_picker = picker;\n\t\tsetMouseTracking(area, this.updateHueSlider.bind(this));\n\n\t\tarea.appendChild(picker);\n\t\tthis.node.appendChild(area);\n\t};\n\n\tColorPicker.prototype.createAlphaArea = function createAlphaArea() {\n\t\tvar area = document.createElement('div');\n\t\tvar mask = document.createElement('div');\n\t\tvar picker = document.createElement('div');\n\n\t\tarea.className = 'alpha';\n\t\tmask.className = 'alpha-mask';\n\t\tpicker.className = 'slider-picker';\n\n\t\tthis.alpha_area = area;\n\t\tthis.alpha_mask = mask;\n\t\tthis.alpha_picker = picker;\n\t\tsetMouseTracking(area, this.updateAlphaSlider.bind(this));\n\n\t\tarea.appendChild(mask);\n\t\tmask.appendChild(picker);\n\t\tthis.node.appendChild(area);\n\t};\n\n\tColorPicker.prototype.createPreviewBox = function createPreviewBox(e) {\n\t\tvar preview_box = document.createElement('div');\n\t\tvar preview_color = document.createElement('div');\n\n\t\tpreview_box.className = 'preview';\n\t\tpreview_color.className = 'preview-color';\n\n\t\tthis.preview_color = preview_color;\n\n\t\tpreview_box.appendChild(preview_color);\n\t\tthis.node.appendChild(preview_box);\n\t};\n\n\tColorPicker.prototype.newInputComponent = function newInputComponent(title, topic, onChangeFunc) {\n\t\tvar wrapper = document.createElement('div');\n\t\tvar input = document.createElement('input');\n\t\tvar info = document.createElement('span');\n\n\t\twrapper.className = 'input';\n\t\twrapper.setAttribute('data-topic', topic);\n\t\tinfo.textContent = title;\n\t\tinfo.className = 'name';\n\t\tinput.setAttribute('type', 'text');\n\n\t\twrapper.appendChild(info);\n\t\twrapper.appendChild(input);\n\t\tthis.node.appendChild(wrapper);\n\n\t\tinput.addEventListener('change', onChangeFunc);\n\t\tinput.addEventListener('click', function() {\n\t\t\tthis.select();\n\t\t});\n\n\t\tthis.subscribe(topic, function(value) {\n\t\t\tinput.value = value;\n\t\t});\n\t};\n\n\tColorPicker.prototype.createChangeModeButton = function createChangeModeButton() {\n\n\t\tvar button = document.createElement('div');\n\t\tbutton.className = 'switch_mode';\n\t\tbutton.addEventListener('click', function() {\n\t\t\tif (this.picker_mode === 'HSV')\n\t\t\t\tthis.setPickerMode('HSL');\n\t\t\telse\n\t\t\t\tthis.setPickerMode('HSV');\n\n\t\t}.bind(this));\n\n\t\tthis.node.appendChild(button);\n\t};\n\n\t/*************************************************************************/\n\t//\t\t\t\t\tUpdates properties of UI elements\n\t/*************************************************************************/\n\n\tColorPicker.prototype.updateColor = function updateColor(e) {\n\t\tvar x = e.pageX - this.picking_area.offsetLeft;\n\t\tvar y = e.pageY - this.picking_area.offsetTop;\n\t\tvar picker_offset = 5;\n\n\t\t// width and height should be the same\n\t\tvar size = this.picking_area.clientWidth;\n\n\t\tif (x &gt; size) x = size;\n\t\tif (y &gt; size) y = size;\n\t\tif (x &lt; 0) x = 0;\n\t\tif (y &lt; 0) y = 0;\n\n\t\tvar value = 100 - (y * 100 / size) | 0;\n\t\tvar saturation = x * 100 / size | 0;\n\n\t\tif (this.picker_mode === 'HSV')\n\t\t\tthis.color.setHSV(this.color.hue, saturation, value);\n\t\tif (this.picker_mode === 'HSL')\n\t\t\tthis.color.setHSL(this.color.hue, saturation, value);\n\n\t\tthis.color_picker.style.left = x - picker_offset + 'px';\n\t\tthis.color_picker.style.top = y - picker_offset + 'px';\n\n\t\tthis.updateAlphaGradient();\n\t\tthis.updatePreviewColor();\n\n\t\tthis.notify('value', value);\n\t\tthis.notify('lightness', value);\n\t\tthis.notify('saturation', saturation);\n\n\t\tthis.notify('red', this.color.r);\n\t\tthis.notify('green', this.color.g);\n\t\tthis.notify('blue', this.color.b);\n\t\tthis.notify('hexa', this.color.getHexa());\n\n\t\tnotify(this.topic, this.color);\n\t};\n\n\tColorPicker.prototype.updateHueSlider = function updateHueSlider(e) {\n\t\tvar x = e.pageX - this.hue_area.offsetLeft;\n\t\tvar width = this.hue_area.clientWidth;\n\n\t\tif (x &lt; 0) x = 0;\n\t\tif (x &gt; width) x = width;\n\n\t\t// TODO 360 =&gt; 359\n\t\tvar hue = ((359 * x) / width) | 0;\n\t\t// if (hue === 360) hue = 359;\n\n\t\tthis.updateSliderPosition(this.hue_picker, x);\n\t\tthis.setHue(hue);\n\t};\n\n\tColorPicker.prototype.updateAlphaSlider = function updateAlphaSlider(e) {\n\t\tvar x = e.pageX - this.alpha_area.offsetLeft;\n\t\tvar width = this.alpha_area.clientWidth;\n\n\t\tif (x &lt; 0) x = 0;\n\t\tif (x &gt; width) x = width;\n\n\t\tthis.color.a = (x / width).toFixed(2);\n\n\t\tthis.updateSliderPosition(this.alpha_picker, x);\n\t\tthis.updatePreviewColor();\n\n\t\tthis.notify('alpha', this.color.a);\n\t\tnotify(this.topic, this.color);\n\t};\n\n\tColorPicker.prototype.setHue = function setHue(value) {\n\t\tthis.color.setHue(value);\n\n\t\tthis.updatePickerBackground();\n\t\tthis.updateAlphaGradient();\n\t\tthis.updatePreviewColor();\n\n\t\tthis.notify('red', this.color.r);\n\t\tthis.notify('green', this.color.g);\n\t\tthis.notify('blue', this.color.b);\n\t\tthis.notify('hexa', this.color.getHexa());\n\t\tthis.notify('hue', this.color.hue);\n\n\t\tnotify(this.topic, this.color);\n\t};\n\n\t// Updates when one of Saturation/Value/Lightness changes\n\tColorPicker.prototype.updateSLV = function updateSLV() {\n\t\tthis.updatePickerPosition();\n\t\tthis.updateAlphaGradient();\n\t\tthis.updatePreviewColor();\n\n\t\tthis.notify('red', this.color.r);\n\t\tthis.notify('green', this.color.g);\n\t\tthis.notify('blue', this.color.b);\n\t\tthis.notify('hexa', this.color.getHexa());\n\n\t\tnotify(this.topic, this.color);\n\t};\n\n\t/*************************************************************************/\n\t//\t\t\t\tUpdate positions of various UI elements\n\t/*************************************************************************/\n\n\tColorPicker.prototype.updatePickerPosition = function updatePickerPosition() {\n\t\tvar size = this.picking_area.clientWidth;\n\t\tvar value = 0;\n\t\tvar offset = 5;\n\n\t\tif (this.picker_mode === 'HSV')\n\t\t\tvalue = this.color.value;\n\t\tif (this.picker_mode === 'HSL')\n\t\t\tvalue = this.color.lightness;\n\n\t\tvar x = (this.color.saturation * size / 100) | 0;\n\t\tvar y = size - (value * size / 100) | 0;\n\n\t\tthis.color_picker.style.left = x - offset + 'px';\n\t\tthis.color_picker.style.top = y - offset + 'px';\n\t};\n\n\tColorPicker.prototype.updateSliderPosition = function updateSliderPosition(elem, pos) {\n\t\telem.style.left = Math.max(pos - 3, -2) + 'px';\n\t};\n\n\tColorPicker.prototype.updateHuePicker = function updateHuePicker() {\n\t\tvar size = this.hue_area.clientWidth;\n\t\tvar offset = 1;\n\t\tvar pos = (this.color.hue * size / 360 ) | 0;\n\t\tthis.hue_picker.style.left = pos - offset + 'px';\n\t};\n\n\tColorPicker.prototype.updateAlphaPicker = function updateAlphaPicker() {\n\t\tvar size = this.alpha_area.clientWidth;\n\t\tvar offset = 1;\n\t\tvar pos = (this.color.a * size) | 0;\n\t\tthis.alpha_picker.style.left = pos - offset + 'px';\n\t};\n\n\t/*************************************************************************/\n\t//\t\t\t\t\t\tUpdate background colors\n\t/*************************************************************************/\n\n\tColorPicker.prototype.updatePickerBackground = function updatePickerBackground() {\n\t\tvar nc = new Color(this.color);\n\t\tnc.setHSV(nc.hue, 100, 100);\n\t\tthis.picking_area.style.backgroundColor = nc.getHexa();\n\t};\n\n\tColorPicker.prototype.updateAlphaGradient = function updateAlphaGradient() {\n\t\tthis.alpha_mask.style.backgroundColor = this.color.getHexa();\n\t};\n\n\tColorPicker.prototype.updatePreviewColor = function updatePreviewColor() {\n\t\tthis.preview_color.style.backgroundColor = this.color.getColor();\n\t};\n\n\t/*************************************************************************/\n\t//\t\t\t\t\t\tUpdate input elements\n\t/*************************************************************************/\n\n\tColorPicker.prototype.inputChangeHue = function inputChangeHue(e) {\n\t\tvar value = parseInt(e.target.value);\n\t\tthis.setHue(value);\n\t\tthis.updateHuePicker();\n\t};\n\n\tColorPicker.prototype.inputChangeSaturation = function inputChangeSaturation(e) {\n\t\tvar value = parseInt(e.target.value);\n\t\tthis.color.setSaturation(value);\n\t\te.target.value = this.color.saturation;\n\t\tthis.updateSLV();\n\t};\n\n\tColorPicker.prototype.inputChangeValue = function inputChangeValue(e) {\n\t\tvar value = parseInt(e.target.value);\n\t\tthis.color.setValue(value);\n\t\te.target.value = this.color.value;\n\t\tthis.updateSLV();\n\t};\n\n\tColorPicker.prototype.inputChangeLightness = function inputChangeLightness(e) {\n\t\tvar value = parseInt(e.target.value);\n\t\tthis.color.setLightness(value);\n\t\te.target.value = this.color.lightness;\n\t\tthis.updateSLV();\n\t};\n\n\tColorPicker.prototype.inputChangeRed = function inputChangeRed(e) {\n\t\tvar value = parseInt(e.target.value);\n\t\tthis.color.setByName('r', value);\n\t\te.target.value = this.color.r;\n\t\tthis.setColor(this.color);\n\t};\n\n\tColorPicker.prototype.inputChangeGreen = function inputChangeGreen(e) {\n\t\tvar value = parseInt(e.target.value);\n\t\tthis.color.setByName('g', value);\n\t\te.target.value = this.color.g;\n\t\tthis.setColor(this.color);\n\t};\n\n\tColorPicker.prototype.inputChangeBlue = function inputChangeBlue(e) {\n\t\tvar value = parseInt(e.target.value);\n\t\tthis.color.setByName('b', value);\n\t\te.target.value = this.color.b;\n\t\tthis.setColor(this.color);\n\t};\n\n\tColorPicker.prototype.inputChangeAlpha = function inputChangeAlpha(e) {\n\t\tvar value = parseFloat(e.target.value);\n\n\t\tif (typeof value === 'number' &amp;&amp; isNaN(value) === false &amp;&amp;\n\t\t\tvalue &gt;= 0 &amp;&amp; value &lt;= 1)\n\t\t\tthis.color.a = value.toFixed(2);\n\n\t\te.target.value = this.color.a;\n\t\tthis.updateAlphaPicker();\n\t};\n\n\tColorPicker.prototype.inputChangeHexa = function inputChangeHexa(e) {\n\t\tvar value = e.target.value;\n\t\tthis.color.setHexa(value);\n\t\tthis.setColor(this.color);\n\t};\n\n\t/*************************************************************************/\n\t//\t\t\t\t\t\t\tInternal Pub/Sub\n\t/*************************************************************************/\n\n\tColorPicker.prototype.subscribe = function subscribe(topic, callback) {\n\t\tthis.subscribers[topic] = callback;\n\t};\n\n\tColorPicker.prototype.notify = function notify(topic, value) {\n\t\tif (this.subscribers[topic])\n\t\t\tthis.subscribers[topic](value);\n\t};\n\n\t/*************************************************************************/\n\t//\t\t\t\t\t\t\tSet Picker Properties\n\t/*************************************************************************/\n\n\tColorPicker.prototype.setColor = function setColor(color) {\n\t\tif(color instanceof Color !== true) {\n\t\t\tconsole.log('Typeof parameter not Color');\n\t\t\treturn;\n\t\t}\n\n\t\tif (color.format !== this.picker_mode) {\n\t\t\tcolor.setFormat(this.picker_mode);\n\t\t\tcolor.updateHSX();\n\t\t}\n\n\t\tthis.color.copy(color);\n\t\tthis.updateHuePicker();\n\t\tthis.updatePickerPosition();\n\t\tthis.updatePickerBackground();\n\t\tthis.updateAlphaPicker();\n\t\tthis.updateAlphaGradient();\n\t\tthis.updatePreviewColor();\n\n\t\tthis.notify('red', this.color.r);\n\t\tthis.notify('green', this.color.g);\n\t\tthis.notify('blue', this.color.b);\n\n\t\tthis.notify('hue', this.color.hue);\n\t\tthis.notify('saturation', this.color.saturation);\n\t\tthis.notify('value', this.color.value);\n\t\tthis.notify('lightness', this.color.lightness);\n\n\t\tthis.notify('alpha', this.color.a);\n\t\tthis.notify('hexa', this.color.getHexa());\n\t\tnotify(this.topic, this.color);\n\t};\n\n\tColorPicker.prototype.setPickerMode = function setPickerMode(mode) {\n\t\tif (mode !== 'HSV' &amp;&amp; mode !== 'HSL')\n\t\t\treturn;\n\n\t\tthis.picker_mode = mode;\n\t\tthis.node.setAttribute('data-mode', this.picker_mode);\n\t\tthis.setColor(this.color);\n\t};\n\n\t/*************************************************************************/\n\t//\t\t\t\t\t\t\t\tUNUSED\n\t/*************************************************************************/\n\n\tvar setPickerMode = function setPickerMode(topic, mode) {\n\t\tif (pickers[topic])\n\t\t\tpickers[topic].setPickerMode(mode);\n\t};\n\n\tvar setColor = function setColor(topic, color) {\n\t\tif (pickers[topic])\n\t\t\tpickers[topic].setColor(color);\n\t};\n\n\tvar getColor = function getColor(topic) {\n\t\tif (pickers[topic])\n\t\t\treturn new Color(pickers[topic].color);\n\t};\n\n\tvar subscribe = function subscribe(topic, callback) {\n\t\tif (subscribers[topic] === undefined)\n\t\t\tsubscribers[topic] = [];\n\n\t\tsubscribers[topic].push(callback);\n\t};\n\n\tvar unsubscribe = function unsubscribe(callback) {\n\t\tsubscribers.indexOf(callback);\n\t\tsubscribers.splice(index, 1);\n\t};\n\n\tvar notify = function notify(topic, value) {\n\t\tif (subscribers[topic] === undefined || subscribers[topic].length === 0)\n\t\t\treturn;\n\n\t\tvar color = new Color(value);\n\t\tfor (var i in subscribers[topic])\n\t\t\tsubscribers[topic][i](color);\n\t};\n\n\tvar init = function init() {\n\t\tvar elem = document.querySelectorAll('.ui-color-picker');\n\t\tvar size = elem.length;\n\t\tfor (var i = 0; i &lt; size; i++)\n\t\t\tnew ColorPicker(elem[i]);\n\t};\n\n\treturn {\n\t\tinit : init,\n\t\tColor : Color,\n\t\tRGBColor : RGBColor,\n\t\tRGBAColor : RGBAColor,\n\t\tHSVColor : HSVColor,\n\t\tHSVAColor : HSVAColor,\n\t\tHSLColor : HSLColor,\n\t\tHSLAColor : HSLAColor,\n\t\tsetColor : setColor,\n\t\tgetColor : getColor,\n\t\tsubscribe : subscribe,\n\t\tunsubscribe : unsubscribe,\n\t\tsetPickerMode : setPickerMode\n\t};\n\n})();\n\n\n\n/**\n * UI-SlidersManager\n */\n\nvar InputSliderManager = (function InputSliderManager() {\n\n\tvar subscribers = {};\n\tvar sliders = [];\n\n\tvar InputComponent = function InputComponent(obj) {\n\t\tvar input = document.createElement('input');\n\t\tinput.setAttribute('type', 'text');\n\t\tinput.style.width = 50 + obj.precision * 10 + 'px';\n\n\t\tinput.addEventListener('click', function(e) {\n\t\t\tthis.select();\n\t\t});\n\n\t\tinput.addEventListener('change', function(e) {\n\t\t\tvar value = parseFloat(e.target.value);\n\n\t\t\tif (isNaN(value) === true)\n\t\t\t\tsetValue(obj.topic, obj.value);\n\t\t\telse\n\t\t\t\tsetValue(obj.topic, value);\n\t\t});\n\n\t\treturn input;\n\t};\n\n\tvar SliderComponent = function SliderComponent(obj, sign) {\n\t\tvar slider = document.createElement('div');\n\t\tvar startX = null;\n\t\tvar start_value = 0;\n\n\t\tslider.addEventListener(\"click\", function(e) {\n\t\t\tdocument.removeEventListener(\"mousemove\", sliderMotion);\n\t\t\tsetValue(obj.topic, obj.value + obj.step * sign);\n\t\t});\n\n\t\tslider.addEventListener(\"mousedown\", function(e) {\n\t\t\tstartX = e.clientX;\n\t\t\tstart_value = obj.value;\n\t\t\tdocument.body.style.cursor = \"e-resize\";\n\n\t\t\tdocument.addEventListener(\"mouseup\", slideEnd);\n\t\t\tdocument.addEventListener(\"mousemove\", sliderMotion);\n\t\t});\n\n\t\tvar slideEnd = function slideEnd(e) {\n\t\t\tdocument.removeEventListener(\"mousemove\", sliderMotion);\n\t\t\tdocument.body.style.cursor = \"auto\";\n\t\t\tslider.style.cursor = \"pointer\";\n\t\t};\n\n\t\tvar sliderMotion = function sliderMotion(e) {\n\t\t\tslider.style.cursor = \"e-resize\";\n\t\t\tvar delta = (e.clientX - startX) / obj.sensivity | 0;\n\t\t\tvar value = delta * obj.step + start_value;\n\t\t\tsetValue(obj.topic, value);\n\t\t};\n\n\t\treturn slider;\n\t};\n\n\tvar InputSlider = function(node) {\n\t\tvar min\t\t= parseFloat(node.getAttribute('data-min'));\n\t\tvar max\t\t= parseFloat(node.getAttribute('data-max'));\n\t\tvar step\t= parseFloat(node.getAttribute('data-step'));\n\t\tvar value\t= parseFloat(node.getAttribute('data-value'));\n\t\tvar topic\t= node.getAttribute('data-topic');\n\t\tvar unit\t= node.getAttribute('data-unit');\n\t\tvar name \t= node.getAttribute('data-info');\n\t\tvar sensivity = node.getAttribute('data-sensivity') | 0;\n\t\tvar precision = node.getAttribute('data-precision') | 0;\n\n\t\tthis.min = isNaN(min) ? 0 : min;\n\t\tthis.max = isNaN(max) ? 100 : max;\n\t\tthis.precision = precision &gt;= 0 ? precision : 0;\n\t\tthis.step = step &lt; 0 || isNaN(step) ? 1 : step.toFixed(precision);\n\t\tthis.topic = topic;\n\t\tthis.node = node;\n\t\tthis.unit = unit === null ? '' : unit;\n\t\tthis.sensivity = sensivity &gt; 0 ? sensivity : 5;\n\t\tvalue = isNaN(value) ? this.min : value;\n\n\t\tvar input = new InputComponent(this);\n\t\tvar slider_left  = new SliderComponent(this, -1);\n\t\tvar slider_right = new SliderComponent(this,  1);\n\n\t\tslider_left.className = 'ui-input-slider-left';\n\t\tslider_right.className = 'ui-input-slider-right';\n\n\t\tif (name) {\n\t\t\tvar info = document.createElement('span');\n\t\t\tinfo.className = 'ui-input-slider-info';\n\t\t\tinfo.textContent = name;\n\t\t\tnode.appendChild(info);\n\t\t}\n\n\t\tnode.appendChild(slider_left);\n\t\tnode.appendChild(input);\n\t\tnode.appendChild(slider_right);\n\n\t\tthis.input = input;\n\t\tsliders[topic] = this;\n\t\tsetValue(topic, value);\n\t};\n\n\tInputSlider.prototype.setInputValue = function setInputValue() {\n\t\tthis.input.value = this.value.toFixed(this.precision) + this.unit;\n\t};\n\n\tvar setValue = function setValue(topic, value, send_notify) {\n\t\tvar slider = sliders[topic];\n\t\tif (slider === undefined)\n\t\t\treturn;\n\n\t\tvalue = parseFloat(value.toFixed(slider.precision));\n\n\t\tif (value &gt; slider.max) value = slider.max;\n\t\tif (value &lt; slider.min)\tvalue = slider.min;\n\n\t\tslider.value = value;\n\t\tslider.node.setAttribute('data-value', value);\n\n\t\tslider.setInputValue();\n\n\t\tif (send_notify === false)\n\t\t\treturn;\n\n\t\tnotify.call(slider);\n\t};\n\n\tvar setMax = function setMax(topic, value) {\n\t\tvar slider = sliders[topic];\n\t\tif (slider === undefined)\n\t\t\treturn;\n\n\t\tslider.max = value;\n\t\tsetValue(topic, slider.value);\n\t};\n\n\tvar setMin = function setMin(topic, value) {\n\t\tvar slider = sliders[topic];\n\t\tif (slider === undefined)\n\t\t\treturn;\n\n\t\tslider.min = value;\n\t\tsetValue(topic, slider.value);\n\t};\n\n\tvar setUnit = function setUnit(topic, unit) {\n\t\tvar slider = sliders[topic];\n\t\tif (slider === undefined)\n\t\t\treturn;\n\n\t\tslider.unit = unit;\n\t\tsetValue(topic, slider.value);\n\t};\n\n\tvar setStep = function setStep(topic, value) {\n\t\tvar slider = sliders[topic];\n\t\tif (slider === undefined)\n\t\t\treturn;\n\n\t\tslider.step = parseFloat(value);\n\t\tsetValue(topic, slider.value);\n\t};\n\n\tvar setPrecision = function setPrecision(topic, value) {\n\t\tvar slider = sliders[topic];\n\t\tif (slider === undefined)\n\t\t\treturn;\n\n\t\tvalue = value | 0;\n\t\tslider.precision = value;\n\n\t\tvar step = parseFloat(slider.step.toFixed(value));\n\t\tif (step === 0)\n\t\t\tslider.step = 1 / Math.pow(10, value);\n\n\t\tsetValue(topic, slider.value);\n\t};\n\n\tvar setSensivity = function setSensivity(topic, value) {\n\t\tvar slider = sliders[topic];\n\t\tif (slider === undefined)\n\t\t\treturn;\n\n\t\tvalue = value | 0;\n\n\t\tslider.sensivity = value &gt; 0 ? value : 5;\n\t};\n\n\tvar getNode =  function getNode(topic) {\n\t\treturn sliders[topic].node;\n\t};\n\n\tvar getPrecision =  function getPrecision(topic) {\n\t\treturn sliders[topic].precision;\n\t};\n\n\tvar getStep =  function getStep(topic) {\n\t\treturn sliders[topic].step;\n\t};\n\n\tvar subscribe = function subscribe(topic, callback) {\n\t\tif (subscribers[topic] === undefined)\n\t\t\tsubscribers[topic] = [];\n\t\tsubscribers[topic].push(callback);\n\t};\n\n\tvar unsubscribe = function unsubscribe(topic, callback) {\n\t\tsubscribers[topic].indexOf(callback);\n\t\tsubscribers[topic].splice(index, 1);\n\t};\n\n\tvar notify = function notify() {\n\t\tif (subscribers[this.topic] === undefined)\n\t\t\treturn;\n\t\tfor (var i = 0; i &lt; subscribers[this.topic].length; i++)\n\t\t\tsubscribers[this.topic][i](this.value);\n\t};\n\n\tvar createSlider = function createSlider(topic, label) {\n\t\tvar slider = document.createElement('div');\n\t\tslider.className = 'ui-input-slider';\n\t\tslider.setAttribute('data-topic', topic);\n\n\t\tif (label !== undefined)\n\t\t\tslider.setAttribute('data-info', label);\n\n\t\tnew InputSlider(slider);\n\t\treturn slider;\n\t};\n\n\tvar init = function init() {\n\t\tvar elem = document.querySelectorAll('.ui-input-slider');\n\t\tvar size = elem.length;\n\t\tfor (var i = 0; i &lt; size; i++)\n\t\t\tnew InputSlider(elem[i]);\n\t};\n\n\treturn {\n\t\tinit : init,\n\t\tsetMax : setMax,\n\t\tsetMin : setMin,\n\t\tsetUnit : setUnit,\n\t\tsetStep : setStep,\n\t\tgetNode : getNode,\n\t\tgetStep : getStep,\n\t\tsetValue : setValue,\n\t\tsubscribe : subscribe,\n\t\tunsubscribe : unsubscribe,\n\t\tsetPrecision : setPrecision,\n\t\tsetSensivity : setSensivity,\n\t\tgetPrecision : getPrecision,\n\t\tcreateSlider : createSlider,\n\t};\n\n})();\n\n\n'use strict';\n\nwindow.addEventListener(\"load\", function() {\n\tColorPickerTool.init();\n});\n\nvar ColorPickerTool = (function ColorPickerTool() {\n\n\t/*========== Get DOM Element By ID ==========*/\n\n\tfunction getElemById(id) {\n\t\treturn document.getElementById(id);\n\t}\n\n\tfunction allowDropEvent(e) {\n\t\te.preventDefault();\n\t}\n\n\t/*========== Make an element resizable relative to it's parent ==========*/\n\n\tvar UIComponent = (function UIComponent() {\n\n\t\tfunction makeResizable(elem, axis) {\n\t\t\tvar valueX = 0;\n\t\t\tvar valueY = 0;\n\t\t\tvar action = 0;\n\n\t\t\tvar resizeStart = function resizeStart(e) {\n\t\t\t\te.stopPropagation();\n\t\t\t\te.preventDefault();\n\t\t\t\tif (e.button !== 0)\n\t\t\t\t\treturn;\n\n\t\t\t\tvalueX = e.clientX - elem.clientWidth;\n\t\t\t\tvalueY = e.clientY - elem.clientHeight;\n\n\t\t\t\tdocument.body.setAttribute('data-resize', axis);\n\t\t\t\tdocument.addEventListener('mousemove', mouseMove);\n\t\t\t\tdocument.addEventListener('mouseup', resizeEnd);\n\t\t\t};\n\n\t\t\tvar mouseMove = function mouseMove(e) {\n\t\t\t\tif (action &gt;= 0)\n\t\t\t\t\telem.style.width = e.clientX - valueX + 'px';\n\t\t\t\tif (action &lt;= 0)\n\t\t\t\t\telem.style.height = e.clientY - valueY + 'px';\n\t\t\t};\n\n\t\t\tvar resizeEnd = function resizeEnd(e) {\n\t\t\t\tif (e.button !== 0)\n\t\t\t\t\treturn;\n\n\t\t\t\tdocument.body.removeAttribute('data-resize', axis);\n\t\t\t\tdocument.removeEventListener('mousemove', mouseMove);\n\t\t\t\tdocument.removeEventListener('mouseup', resizeEnd);\n\t\t\t};\n\n\t\t\tvar handle = document.createElement('div');\n\t\t\thandle.className = 'resize-handle';\n\n\t\t\tif (axis === 'width') action = 1;\n\t\t\telse if (axis === 'height') action = -1;\n\t\t\telse axis = 'both';\n\n\t\t\thandle.className = 'resize-handle';\n\t\t\thandle.setAttribute('data-resize', axis);\n\t\t\thandle.addEventListener('mousedown', resizeStart);\n\t\t\telem.appendChild(handle);\n\t\t};\n\n\t\t/*========== Make an element draggable relative to it's parent ==========*/\n\n\t\tvar makeDraggable = function makeDraggable(elem, endFunction) {\n\n\t\t\tvar offsetTop;\n\t\t\tvar offsetLeft;\n\n\t\t\telem.setAttribute('data-draggable', 'true');\n\n\t\t\tvar dragStart = function dragStart(e) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\n\t\t\t\tif (e.target.getAttribute('data-draggable') !== 'true' ||\n\t\t\t\t\te.target !== elem || e.button !== 0)\n\t\t\t\t\treturn;\n\n\t\t\t\toffsetLeft = e.clientX - elem.offsetLeft;\n\t\t\t\toffsetTop = e.clientY - elem.offsetTop;\n\n\t\t\t\tdocument.addEventListener('mousemove', mouseDrag);\n\t\t\t\tdocument.addEventListener('mouseup', dragEnd);\n\t\t\t};\n\n\t\t\tvar dragEnd = function dragEnd(e) {\n\t\t\t\tif (e.button !== 0)\n\t\t\t\t\treturn;\n\n\t\t\t\tdocument.removeEventListener('mousemove', mouseDrag);\n\t\t\t\tdocument.removeEventListener('mouseup', dragEnd);\n\t\t\t};\n\n\t\t\tvar mouseDrag = function mouseDrag(e) {\n\t\t\t\telem.style.left = e.clientX - offsetLeft + 'px';\n\t\t\t\telem.style.top = e.clientY - offsetTop + 'px';\n\t\t\t};\n\n\t\t\telem.addEventListener('mousedown', dragStart, false);\n\t\t};\n\n\t\treturn {\n\t\t\tmakeResizable : makeResizable,\n\t\t\tmakeDraggable : makeDraggable\n\t\t};\n\n\t})();\n\n\t/*========== Color Class ==========*/\n\n\tvar Color = UIColorPicker.Color;\n\tvar HSLColor = UIColorPicker.HSLColor;\n\n\t/**\n\t * ColorPalette\n\t */\n\tvar ColorPalette = (function ColorPalette() {\n\n\t\tvar samples = [];\n\t\tvar color_palette;\n\t\tvar complementary;\n\n\t\tvar hideNode = function(node) {\n\t\t\tnode.setAttribute('data-hidden', 'true');\n\t\t};\n\n\t\tvar ColorSample = function ColorSample(id) {\n\t\t\tvar node = document.createElement('div');\n\t\t\tnode.className = 'sample';\n\n\t\t\tthis.uid = samples.length;\n\t\t\tthis.node = node;\n\t\t\tthis.color = new Color();\n\n\t\t\tnode.setAttribute('sample-id', this.uid);\n\t\t\tnode.setAttribute('draggable', 'true');\n\t\t\tnode.addEventListener('dragstart', this.dragStart.bind(this));\n\t\t\tnode.addEventListener('click', this.pickColor.bind(this));\n\n\t\t\tsamples.push(this);\n\t\t};\n\n\t\tColorSample.prototype.updateBgColor = function updateBgColor() {\n\t\t\tthis.node.style.backgroundColor = this.color.getColor();\n\t\t};\n\n\t\tColorSample.prototype.updateColor = function updateColor(color) {\n\t\t\tthis.color.copy(color);\n\t\t\tthis.updateBgColor();\n\t\t};\n\n\t\tColorSample.prototype.updateHue = function updateHue(color, degree, steps) {\n\t\t\tthis.color.copy(color);\n\t\t\tvar hue = (steps * degree + this.color.hue) % 360;\n\t\t\tif (hue &lt; 0) hue += 360;\n\t\t\tthis.color.setHue(hue);\n\t\t\tthis.updateBgColor();\n\t\t};\n\n\t\tColorSample.prototype.updateSaturation = function updateSaturation(color, value, steps) {\n\t\t\tvar saturation = color.saturation + value * steps;\n\t\t\tif (saturation &lt;= 0) {\n\t\t\t\tthis.node.setAttribute('data-hidden', 'true');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.node.removeAttribute('data-hidden');\n\t\t\tthis.color.copy(color);\n\t\t\tthis.color.setSaturation(saturation);\n\t\t\tthis.updateBgColor();\n\t\t};\n\n\t\tColorSample.prototype.updateLightness = function updateLightness(color, value, steps) {\n\t\t\tvar lightness = color.lightness + value * steps;\n\t\t\tif (lightness &lt;= 0) {\n\t\t\t\tthis.node.setAttribute('data-hidden', 'true');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.node.removeAttribute('data-hidden');\n\t\t\tthis.color.copy(color);\n\t\t\tthis.color.setLightness(lightness);\n\t\t\tthis.updateBgColor();\n\t\t};\n\n\t\tColorSample.prototype.updateBrightness = function updateBrightness(color, value, steps) {\n\t\t\tvar brightness = color.value + value * steps;\n\t\t\tif (brightness &lt;= 0) {\n\t\t\t\tthis.node.setAttribute('data-hidden', 'true');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.node.removeAttribute('data-hidden');\n\t\t\tthis.color.copy(color);\n\t\t\tthis.color.setValue(brightness);\n\t\t\tthis.updateBgColor();\n\t\t};\n\n\t\tColorSample.prototype.updateAlpha = function updateAlpha(color, value, steps) {\n\t\t\tvar alpha = parseFloat(color.a) + value * steps;\n\t\t\tif (alpha &lt;= 0) {\n\t\t\t\tthis.node.setAttribute('data-hidden', 'true');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.node.removeAttribute('data-hidden');\n\t\t\tthis.color.copy(color);\n\t\t\tthis.color.a = parseFloat(alpha.toFixed(2));\n\t\t\tthis.updateBgColor();\n\t\t};\n\n\t\tColorSample.prototype.pickColor = function pickColor() {\n\t\t\tUIColorPicker.setColor('picker', this.color);\n\t\t};\n\n\t\tColorSample.prototype.dragStart = function dragStart(e) {\n\t\t\te.dataTransfer.setData('sampleID', this.uid);\n\t\t\te.dataTransfer.setData('location', 'palette-samples');\n\t\t};\n\n\t\tvar Palette = function Palette(text, size) {\n\t\t\tthis.samples = [];\n\t\t\tthis.locked = false;\n\n\t\t\tvar palette = document.createElement('div');\n\t\t\tvar title = document.createElement('div');\n\t\t\tvar controls = document.createElement('div');\n\t\t\tvar container = document.createElement('div');\n\t\t\tvar lock = document.createElement('div');\n\n\t\t\tcontainer.className = 'container';\n\t\t\ttitle.className = 'title';\n\t\t\tpalette.className = 'palette';\n\t\t\tcontrols.className = 'controls';\n\t\t\tlock.className = 'lock';\n\t\t\ttitle.textContent = text;\n\n\t\t\tcontrols.appendChild(lock);\n\t\t\tcontainer.appendChild(title);\n\t\t\tcontainer.appendChild(controls);\n\t\t\tcontainer.appendChild(palette);\n\n\t\t\tlock.addEventListener('click', function () {\n\t\t\t\tthis.locked = !this.locked;\n\t\t\t\tlock.setAttribute('locked-state', this.locked);\n\t\t\t}.bind(this));\n\n\t\t\tfor(var i = 0; i &lt; size; i++) {\n\t\t\t\tvar sample = new ColorSample();\n\t\t\t\tthis.samples.push(sample);\n\t\t\t\tpalette.appendChild(sample.node);\n\t\t\t}\n\n\t\t\tthis.container = container;\n\t\t\tthis.title = title;\n\t\t};\n\n\t\tvar createHuePalette = function createHuePalette() {\n\t\t\tvar palette = new Palette('Hue', 12);\n\n\t\t\tUIColorPicker.subscribe('picker', function(color) {\n\t\t\t\tif (palette.locked === true)\n\t\t\t\t\treturn;\n\n\t\t\t\tfor(var i = 0; i &lt; 12; i++) {\n\t\t\t\t\tpalette.samples[i].updateHue(color, 30, i);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcolor_palette.appendChild(palette.container);\n\t\t};\n\n\t\tvar createSaturationPalette = function createSaturationPalette() {\n\t\t\tvar palette = new Palette('Saturation', 11);\n\n\t\t\tUIColorPicker.subscribe('picker', function(color) {\n\t\t\t\tif (palette.locked === true)\n\t\t\t\t\treturn;\n\n\t\t\t\tfor(var i = 0; i &lt; 11; i++) {\n\t\t\t\t\tpalette.samples[i].updateSaturation(color, -10, i);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcolor_palette.appendChild(palette.container);\n\t\t};\n\n\t\t/* Brightness or Lightness - depends on the picker mode */\n\t\tvar createVLPalette = function createSaturationPalette() {\n\t\t\tvar palette = new Palette('Lightness', 11);\n\n\t\t\tUIColorPicker.subscribe('picker', function(color) {\n\t\t\t\tif (palette.locked === true)\n\t\t\t\t\treturn;\n\n\t\t\t\tif(color.format === 'HSL') {\n\t\t\t\t\tpalette.title.textContent = 'Lightness';\n\t\t\t\t\tfor(var i = 0; i &lt; 11; i++)\n\t\t\t\t\t\tpalette.samples[i].updateLightness(color, -10, i);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpalette.title.textContent = 'Value';\n\t\t\t\t\tfor(var i = 0; i &lt; 11; i++)\n\t\t\t\t\t\tpalette.samples[i].updateBrightness(color, -10, i);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcolor_palette.appendChild(palette.container);\n\t\t};\n\n\t\tvar isBlankPalette = function isBlankPalette(container, value) {\n\t\t\tif (value === 0) {\n\t\t\t\tcontainer.setAttribute('data-collapsed', 'true');\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tcontainer.removeAttribute('data-collapsed');\n\t\t\treturn false;\n\t\t};\n\n\t\tvar createAlphaPalette = function createAlphaPalette() {\n\t\t\tvar palette = new Palette('Alpha', 10);\n\n\t\t\tUIColorPicker.subscribe('picker', function(color) {\n\t\t\t\tif (palette.locked === true)\n\t\t\t\t\treturn;\n\n\t\t\t\tfor(var i = 0; i &lt; 10; i++) {\n\t\t\t\t\tpalette.samples[i].updateAlpha(color, -0.1, i);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcolor_palette.appendChild(palette.container);\n\t\t};\n\n\t\tvar getSampleColor = function getSampleColor(id) {\n\t\t\tif (samples[id] !== undefined &amp;&amp; samples[id]!== null)\n\t\t\t\treturn new Color(samples[id].color);\n\t\t};\n\n\t\tvar init = function init() {\n\t\t\tcolor_palette = getElemById('color-palette');\n\n\t\t\tcreateHuePalette();\n\t\t\tcreateSaturationPalette();\n\t\t\tcreateVLPalette();\n\t\t\tcreateAlphaPalette();\n\n\t\t};\n\n\t\treturn {\n\t\t\tinit : init,\n\t\t\tgetSampleColor : getSampleColor\n\t\t};\n\n\t})();\n\n\t/**\n\t * ColorInfo\n\t */\n\tvar ColorInfo = (function ColorInfo() {\n\n\t\tvar info_box;\n\t\tvar select;\n\t\tvar RGBA;\n\t\tvar HEXA;\n\t\tvar HSLA;\n\n\t\tvar updateInfo = function updateInfo(color) {\n\t\t\tif (color.a | 0 === 1) {\n\t\t\t\tRGBA.info.textContent = 'RGB';\n\t\t\t\tHSLA.info.textContent = 'HSL';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tRGBA.info.textContent = 'RGBA';\n\t\t\t\tHSLA.info.textContent = 'HSLA';\n\t\t\t}\n\n\t\t\tRGBA.value.value = color.getRGBA();\n\t\t\tHSLA.value.value = color.getHSLA();\n\t\t\tHEXA.value.value = color.getHexa();\n\t\t};\n\n\t\tvar InfoProperty = function InfoProperty(info) {\n\n\t\t\tvar node = document.createElement('div');\n\t\t\tvar title = document.createElement('div');\n\t\t\tvar value = document.createElement('input');\n\t\t\tvar copy = document.createElement('div');\n\n\t\t\tnode.className = 'property';\n\t\t\ttitle.className = 'type';\n\t\t\tvalue.className = 'value';\n\t\t\tcopy.className = 'copy';\n\n\t\t\ttitle.textContent = info;\n\t\t\tvalue.setAttribute('type', 'text');\n\n\t\t\tcopy.addEventListener('click', function() {\n\t\t\t\tvalue.select();\n\t\t\t});\n\n\t\t\tnode.appendChild(title);\n\t\t\tnode.appendChild(value);\n\t\t\tnode.appendChild(copy);\n\n\t\t\tthis.node = node;\n\t\t\tthis.value = value;\n\t\t\tthis.info = title;\n\n\t\t\tinfo_box.appendChild(node);\n\t\t};\n\n\t\tvar init = function init() {\n\n\t\t\tinfo_box = getElemById('color-info');\n\n\t\t\tRGBA = new InfoProperty('RGBA');\n\t\t\tHSLA = new InfoProperty('HSLA');\n\t\t\tHEXA = new InfoProperty('HEXA');\n\n\t\t\tUIColorPicker.subscribe('picker', updateInfo);\n\n\t\t};\n\n\t\treturn {\n\t\t\tinit: init\n\t\t};\n\n\t})();\n\n\t/**\n\t * ColorPicker Samples\n\t */\n\tvar ColorPickerSamples = (function ColorPickerSamples() {\n\n\t\tvar samples = [];\n\t\tvar nr_samples = 0;\n\t\tvar active = null;\n\t\tvar container = null;\n\t\tvar\tsamples_per_line = 10;\n\t\tvar trash_can = null;\n\t\tvar base_color = new HSLColor(0, 50, 100);\n\t\tvar add_btn;\n\t\tvar add_btn_pos;\n\n\t\tvar ColorSample = function ColorSample() {\n\t\t\tvar node = document.createElement('div');\n\t\t\tnode.className = 'sample';\n\n\t\t\tthis.uid = samples.length;\n\t\t\tthis.index = nr_samples++;\n\t\t\tthis.node = node;\n\t\t\tthis.color = new Color(base_color);\n\n\t\t\tnode.setAttribute('sample-id', this.uid);\n\t\t\tnode.setAttribute('draggable', 'true');\n\n\t\t\tnode.addEventListener('dragstart', this.dragStart.bind(this));\n\t\t\tnode.addEventListener('dragover' , allowDropEvent);\n\t\t\tnode.addEventListener('drop'     , this.dragDrop.bind(this));\n\n\t\t\tthis.updatePosition(this.index);\n\t\t\tthis.updateBgColor();\n\t\t\tsamples.push(this);\n\t\t};\n\n\t\tColorSample.prototype.updateBgColor = function updateBgColor() {\n\t\t\tthis.node.style.backgroundColor = this.color.getColor();\n\t\t};\n\n\t\tColorSample.prototype.updatePosition = function updatePosition(index) {\n\t\t\tthis.index = index;\n\t\t\tthis.posY = 5 + ((index / samples_per_line) | 0) * 52;\n\t\t\tthis.posX = 5 + ((index % samples_per_line) | 0) * 52;\n\t\t\tthis.node.style.top  = this.posY + 'px';\n\t\t\tthis.node.style.left = this.posX + 'px';\n\t\t};\n\n\t\tColorSample.prototype.updateColor = function updateColor(color) {\n\t\t\tthis.color.copy(color);\n\t\t\tthis.updateBgColor();\n\t\t};\n\n\t\tColorSample.prototype.activate = function activate() {\n\t\t\tUIColorPicker.setColor('picker', this.color);\n\t\t\tthis.node.setAttribute('data-active', 'true');\n\t\t};\n\n\t\tColorSample.prototype.deactivate = function deactivate() {\n\t\t\tthis.node.removeAttribute('data-active');\n\t\t};\n\n\t\tColorSample.prototype.dragStart = function dragStart(e) {\n\t\t\te.dataTransfer.setData('sampleID', this.uid);\n\t\t\te.dataTransfer.setData('location', 'picker-samples');\n\t\t};\n\n\t\tColorSample.prototype.dragDrop = function dragDrop(e) {\n\t\t\te.stopPropagation();\n\t\t\tthis.color = Tool.getSampleColorFrom(e);\n\t\t\tthis.updateBgColor();\n\t\t};\n\n\t\tColorSample.prototype.deleteSample = function deleteSample() {\n\t\t\tcontainer.removeChild(this.node);\n\t\t\tsamples[this.uid] = null;\n\t\t\tnr_samples--;\n\t\t};\n\n\t\tvar updateUI = function updateUI() {\n\t\t\tupdateContainerProp();\n\n\t\t\tvar index = 0;\n\t\t\tvar nr = samples.length;\n\t\t\tfor (var i=0; i &lt; nr; i++)\n\t\t\t\tif (samples[i] !== null) {\n\t\t\t\t\tsamples[i].updatePosition(index);\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\n\t\t\tAddSampleButton.updatePosition(index);\n\t\t};\n\n\t\tvar deleteSample = function deleteSample(e) {\n\t\t\ttrash_can.parentElement.setAttribute('drag-state', 'none');\n\n\t\t\tvar location = e.dataTransfer.getData('location');\n\t\t\tif (location !== 'picker-samples')\n\t\t\t\treturn;\n\n\t\t\tvar sampleID = e.dataTransfer.getData('sampleID');\n\t\t\tsamples[sampleID].deleteSample();\n\t\t\tconsole.log(samples);\n\n\t\t\tupdateUI();\n\t\t};\n\n\t\tvar createDropSample = function createDropSample() {\n\t\t\tvar sample = document.createElement('div');\n\t\t\tsample.id = 'drop-effect-sample';\n\t\t\tsample.className = 'sample';\n\t\t\tcontainer.appendChild(sample);\n\t\t};\n\n\t\tvar setActivateSample = function setActivateSample(e) {\n\t\t\tif (e.target.className !== 'sample')\n\t\t\t\treturn;\n\n\t\t\tunsetActiveSample(active);\n\t\t\tTool.unsetVoidSample();\n\t\t\tCanvasSamples.unsetActiveSample();\n\t\t\tactive = samples[e.target.getAttribute('sample-id')];\n\t\t\tactive.activate();\n\t\t};\n\n\t\tvar unsetActiveSample = function unsetActiveSample() {\n\t\t\tif (active)\n\t\t\t\tactive.deactivate();\n\t\t\tactive = null;\n\t\t};\n\n\t\tvar getSampleColor = function getSampleColor(id) {\n\t\t\tif (samples[id] !== undefined &amp;&amp; samples[id]!== null)\n\t\t\t\treturn new Color(samples[id].color);\n\t\t};\n\n\t\tvar updateContainerProp = function updateContainerProp() {\n\t\t\tsamples_per_line = ((container.clientWidth - 5) / 52) | 0;\n\t\t\tvar height = 52 * (1 + (nr_samples / samples_per_line) | 0);\n\t\t\tcontainer.style.height = height + 10 + 'px';\n\t\t};\n\n\t\tvar AddSampleButton = (function AddSampleButton() {\n\t\t\tvar node;\n\t\t\tvar _index = 0;\n\t\t\tvar _posX;\n\t\t\tvar _posY;\n\n\t\t\tvar updatePosition = function updatePosition(index) {\n\t\t\t\t_index = index;\n\t\t\t\t_posY = 5 + ((index / samples_per_line) | 0) * 52;\n\t\t\t\t_posX = 5 + ((index % samples_per_line) | 0) * 52;\n\n\t\t\t\tnode.style.top  = _posY + 'px';\n\t\t\t\tnode.style.left = _posX + 'px';\n\t\t\t};\n\n\t\t\tvar addButtonClick = function addButtonClick() {\n\t\t\t\tvar sample = new ColorSample();\n\t\t\t\tcontainer.appendChild(sample.node);\n\t\t\t\tupdatePosition(_index + 1);\n\t\t\t\tupdateUI();\n\t\t\t};\n\n\t\t\tvar init = function init() {\n\t\t\t\tnode = document.createElement('div');\n\t\t\t\tvar icon = document.createElement('div');\n\n\t\t\t\tnode.className = 'sample';\n\t\t\t\ticon.id = 'add-icon';\n\t\t\t\tnode.appendChild(icon);\n\t\t\t\tnode.addEventListener('click', addButtonClick);\n\n\t\t\t\tupdatePosition(0);\n\t\t\t\tcontainer.appendChild(node);\n\t\t\t};\n\n\t\t\treturn {\n\t\t\t\tinit : init,\n\t\t\t\tupdatePosition : updatePosition\n\t\t\t};\n\t\t})();\n\n\t\tvar init = function init() {\n\t\t\tcontainer = getElemById('picker-samples');\n\t\t\ttrash_can = getElemById('trash-can');\n\n\t\t\tAddSampleButton.init();\n\n\t\t\tfor (var i=0; i&lt;16; i++) {\n\t\t\t\tvar sample = new ColorSample();\n\t\t\t\tcontainer.appendChild(sample.node);\n\t\t\t}\n\n\t\t\tAddSampleButton.updatePosition(samples.length);\n\t\t\tupdateUI();\n\n\t\t\tactive = samples[0];\n\t\t\tactive.activate();\n\n\t\t\tcontainer.addEventListener('click', setActivateSample);\n\n\t\t\ttrash_can.addEventListener('dragover', allowDropEvent);\n\t\t\ttrash_can.addEventListener('dragenter', function() {\n\t\t\t\tthis.parentElement.setAttribute('drag-state', 'enter');\n\t\t\t});\n\t\t\ttrash_can.addEventListener('dragleave', function(e) {\n\t\t\t\tthis.parentElement.setAttribute('drag-state', 'none');\n\t\t\t});\n\t\t\ttrash_can.addEventListener('drop', deleteSample);\n\n\t\t\tUIColorPicker.subscribe('picker', function(color) {\n\t\t\t\tif (active)\n\t\t\t\t\tactive.updateColor(color);\n\t\t\t});\n\n\t\t};\n\n\t\treturn {\n\t\t\tinit : init,\n\t\t\tgetSampleColor : getSampleColor,\n\t\t\tunsetActiveSample : unsetActiveSample\n\t\t};\n\n\t})();\n\n\t/**\n\t * Canvas Samples\n\t */\n\tvar CanvasSamples = (function CanvasSamples() {\n\n\t\tvar active = null;\n\t\tvar canvas = null;\n\t\tvar samples = [];\n\t\tvar zindex = null;\n\t\tvar tutorial = true;\n\n\t\tvar CanvasSample = function CanvasSample(color, posX, posY) {\n\n\t\t\tvar node = document.createElement('div');\n\t\t\tvar pick = document.createElement('div');\n\t\t\tvar delete_btn = document.createElement('div');\n\t\t\tnode.className = 'sample';\n\t\t\tpick.className = 'pick';\n\t\t\tdelete_btn.className = 'delete';\n\n\t\t\tthis.uid = samples.length;\n\t\t\tthis.node = node;\n\t\t\tthis.color = color;\n\t\t\tthis.updateBgColor();\n\t\t\tthis.zIndex = 1;\n\n\t\t\tnode.style.top = posY - 50 + 'px';\n\t\t\tnode.style.left = posX - 50 + 'px';\n\t\t\tnode.setAttribute('sample-id', this.uid);\n\n\t\t\tnode.appendChild(pick);\n\t\t\tnode.appendChild(delete_btn);\n\n\t\t\tvar activate = function activate() {\n\t\t\t\tsetActiveSample(this);\n\t\t\t}.bind(this);\n\n\t\t\tnode.addEventListener('dblclick', activate);\n\t\t\tpick.addEventListener('click', activate);\n\t\t\tdelete_btn.addEventListener('click', this.deleteSample.bind(this));\n\n\t\t\tUIComponent.makeDraggable(node);\n\t\t\tUIComponent.makeResizable(node);\n\n\t\t\tsamples.push(this);\n\t\t\tcanvas.appendChild(node);\n\t\t\treturn this;\n\t\t};\n\n\t\tCanvasSample.prototype.updateBgColor = function updateBgColor() {\n\t\t\tthis.node.style.backgroundColor = this.color.getColor();\n\t\t};\n\n\t\tCanvasSample.prototype.updateColor = function updateColor(color) {\n\t\t\tthis.color.copy(color);\n\t\t\tthis.updateBgColor();\n\t\t};\n\n\t\tCanvasSample.prototype.updateZIndex = function updateZIndex(value) {\n\t\t\tthis.zIndex = value;\n\t\t\tthis.node.style.zIndex = value;\n\t\t};\n\n\t\tCanvasSample.prototype.activate = function activate() {\n\t\t\tthis.node.setAttribute('data-active', 'true');\n\t\t\tzindex.setAttribute('data-active', 'true');\n\n\t\t\tUIColorPicker.setColor('picker', this.color);\n\t\t\tInputSliderManager.setValue('z-index', this.zIndex);\n\t\t};\n\n\t\tCanvasSample.prototype.deactivate = function deactivate() {\n\t\t\tthis.node.removeAttribute('data-active');\n\t\t\tzindex.removeAttribute('data-active');\n\t\t};\n\n\t\tCanvasSample.prototype.deleteSample = function deleteSample() {\n\t\t\tif (active === this)\n\t\t\t\tunsetActiveSample();\n\t\t\tcanvas.removeChild(this.node);\n\t\t\tsamples[this.uid] = null;\n\t\t};\n\n\t\tCanvasSample.prototype.updatePosition = function updatePosition(posX, posY) {\n\t\t\tthis.node.style.top = posY - this.startY + 'px';\n\t\t\tthis.node.style.left = posX - this.startX + 'px';\n\t\t};\n\n\t\tvar canvasDropEvent = function canvasDropEvent(e) {\n\t\t\tvar color = Tool.getSampleColorFrom(e);\n\n\t\t\tif (color) {\n\t\t\t\tvar offsetX = e.pageX - canvas.offsetLeft;\n\t\t\t\tvar offsetY = e.pageY - canvas.offsetTop;\n\t\t\t\tvar sample = new CanvasSample(color, offsetX, offsetY);\n\t\t\t\tif (tutorial) {\n\t\t\t\t\ttutorial = false;\n\t\t\t\t\tcanvas.removeAttribute('data-tutorial');\n\t\t\t\t\tvar info = new CanvasSample(new Color(), 100, 100);\n\t\t\t\t\tinfo.node.setAttribute('data-tutorial', 'dblclick');\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t\tvar setActiveSample = function setActiveSample(sample) {\n\t\t\tColorPickerSamples.unsetActiveSample();\n\t\t\tTool.unsetVoidSample();\n\t\t\tunsetActiveSample();\n\t\t\tactive = sample;\n\t\t\tactive.activate();\n\t\t};\n\n\t\tvar unsetActiveSample = function unsetActiveSample() {\n\t\t\tif (active)\n\t\t\t\tactive.deactivate();\n\t\t\tactive = null;\n\t\t};\n\n\t\tvar createToggleBgButton = function createToggleBgButton() {\n\t\t\tvar button = document.createElement('div');\n\t\t\tvar state = false;\n\t\t\tbutton.className = 'toggle-bg';\n\t\t\tcanvas.appendChild(button);\n\n\t\t\tbutton.addEventListener('click', function() {\n\t\t\t\tconsole.log(state);\n\t\t\t\tstate = !state;\n\t\t\t\tcanvas.setAttribute('data-bg', state);\n\t\t\t});\n\t\t};\n\n\t\tvar init = function init() {\n\t\t\tcanvas = getElemById('canvas');\n\t\t\tzindex = getElemById('zindex');\n\n\t\t\tcanvas.addEventListener('dragover', allowDropEvent);\n\t\t\tcanvas.addEventListener('drop', canvasDropEvent);\n\n\t\t\tcreateToggleBgButton();\n\n\t\t\tUIColorPicker.subscribe('picker', function(color) {\n\t\t\t\tif (active)\tactive.updateColor(color);\n\t\t\t});\n\n\t\t\tInputSliderManager.subscribe('z-index', function (value) {\n\t\t\t\tif (active)\tactive.updateZIndex(value);\n\t\t\t});\n\n\t\t\tUIComponent.makeResizable(canvas, 'height');\n\t\t};\n\n\t\treturn {\n\t\t\tinit : init,\n\t\t\tunsetActiveSample : unsetActiveSample\n\t\t};\n\n\t})();\n\n\tvar StateButton = function StateButton(node, state) {\n\t\tthis.state = false;\n\t\tthis.callback = null;\n\n\t\tnode.addEventListener('click', function() {\n\t\t\tthis.state = !this.state;\n\t\t\tif (typeof this.callback === \"function\")\n\t\t\t\tthis.callback(this.state);\n\t\t}.bind(this));\n\t};\n\n\tStateButton.prototype.set = function set() {\n\t\tthis.state = true;\n\t\tif (typeof this.callback === \"function\")\n\t\t\tthis.callback(this.state);\n\t};\n\n\tStateButton.prototype.unset = function unset() {\n\t\tthis.state = false;\n\t\tif (typeof this.callback === \"function\")\n\t\t\tthis.callback(this.state);\n\t};\n\n\tStateButton.prototype.subscribe = function subscribe(func) {\n\t\tthis.callback = func;\n\t};\n\n\n\t/**\n\t * Tool\n\t */\n\tvar Tool = (function Tool() {\n\n\t\tvar samples = [];\n\t\tvar controls = null;\n\t\tvar void_sw;\n\n\t\tvar createPickerModeSwitch = function createPickerModeSwitch() {\n\t\t\tvar parent = getElemById('controls');\n\t\t\tvar icon = document.createElement('div');\n\t\t\tvar button = document.createElement('div');\n\t\t\tvar hsv = document.createElement('div');\n\t\t\tvar hsl = document.createElement('div');\n\t\t\tvar active = null;\n\n\t\t\ticon.className = 'icon picker-icon';\n\t\t\tbutton.className = 'switch';\n\t\t\tbutton.appendChild(hsv);\n\t\t\tbutton.appendChild(hsl);\n\n\t\t\thsv.textContent = 'HSV';\n\t\t\thsl.textContent = 'HSL';\n\n\t\t\tactive = hsl;\n\t\t\tactive.setAttribute('data-active', 'true');\n\n\t\t\tfunction switchPickingModeTo(elem) {\n\t\t\t\tactive.removeAttribute('data-active');\n\t\t\t\tactive = elem;\n\t\t\t\tactive.setAttribute('data-active', 'true');\n\t\t\t\tUIColorPicker.setPickerMode('picker', active.textContent);\n\t\t\t};\n\n\t\t\tvar picker_sw = new StateButton(icon);\n\t\t\tpicker_sw.subscribe(function() {\n\t\t\t\tif (active === hsv)\n\t\t\t\t\tswitchPickingModeTo(hsl);\n\t\t\t\telse\n\t\t\t\t\tswitchPickingModeTo(hsv);\n\t\t\t});\n\n\t\t\thsv.addEventListener('click', function() {\n\t\t\t\tswitchPickingModeTo(hsv);\n\t\t\t});\n\t\t\thsl.addEventListener('click', function() {\n\t\t\t\tswitchPickingModeTo(hsl);\n\t\t\t});\n\n\t\t\tparent.appendChild(icon);\n\t\t\tparent.appendChild(button);\n\t\t};\n\n\t\tvar setPickerDragAndDrop = function setPickerDragAndDrop() {\n\t\t\tvar preview = document.querySelector('#picker .preview-color');\n\t\t\tvar picking_area = document.querySelector('#picker .picking-area');\n\n\t\t\tpreview.setAttribute('draggable', 'true');\n\t\t\tpreview.addEventListener('drop', drop);\n\t\t\tpreview.addEventListener('dragstart', dragStart);\n\t\t\tpreview.addEventListener('dragover', allowDropEvent);\n\n\t\t\tpicking_area.addEventListener('drop', drop);\n\t\t\tpicking_area.addEventListener('dragover', allowDropEvent);\n\n\t\t\tfunction drop(e) {\n\t\t\t\tvar color = getSampleColorFrom(e);\n\t\t\t\tUIColorPicker.setColor('picker', color);\n\t\t\t};\n\n\t\t\tfunction dragStart(e) {\n\t\t\t\te.dataTransfer.setData('sampleID', 'picker');\n\t\t\t\te.dataTransfer.setData('location', 'picker');\n\t\t\t};\n\t\t};\n\n\t\tvar getSampleColorFrom = function getSampleColorFrom(e) {\n\t\t\tvar sampleID = e.dataTransfer.getData('sampleID');\n\t\t\tvar location = e.dataTransfer.getData('location');\n\n\t\t\tif (location === 'picker')\n\t\t\t\treturn UIColorPicker.getColor(sampleID);\n\t\t\tif (location === 'picker-samples')\n\t\t\t\treturn ColorPickerSamples.getSampleColor(sampleID);\n\t\t\tif (location === 'palette-samples')\n\t\t\t\treturn ColorPalette.getSampleColor(sampleID);\n\t\t};\n\n\t\tvar setVoidSwitch = function setVoidSwitch() {\n\t\t\tvar void_sample = getElemById('void-sample');\n\t\t\tvoid_sw = new StateButton(void_sample);\n\t\t\tvoid_sw.subscribe( function (state) {\n\t\t\t\tvoid_sample.setAttribute('data-active', state);\n\t\t\t\tif (state === true) {\n\t\t\t\t\tColorPickerSamples.unsetActiveSample();\n\t\t\t\t\tCanvasSamples.unsetActiveSample();\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tvar unsetVoidSample = function unsetVoidSample() {\n\t\t\tvoid_sw.unset();\n\t\t};\n\n\t\tvar init = function init() {\n\t\t\tcontrols = getElemById('controls');\n\n\t\t\tvar color = new Color();\n\t\t\tcolor.setHSL(0, 51, 51);\n\t\t\tUIColorPicker.setColor('picker', color);\n\n\t\t\tsetPickerDragAndDrop();\n\t\t\tcreatePickerModeSwitch();\n\t\t\tsetVoidSwitch();\n\t\t};\n\n\t\treturn {\n\t\t\tinit : init,\n\t\t\tunsetVoidSample : unsetVoidSample,\n\t\t\tgetSampleColorFrom : getSampleColorFrom\n\t\t};\n\n\t})();\n\n\tvar init = function init() {\n\t\tUIColorPicker.init();\n\t\tInputSliderManager.init();\n\t\tColorInfo.init();\n\t\tColorPalette.init();\n\t\tColorPickerSamples.init();\n\t\tCanvasSamples.init();\n\t\tTool.init();\n\t};\n\n\treturn {\n\t\tinit : init\n\t};\n\n})();\n\n</pre> </div>  <p>This tool makes it easy to create, adjust, and experiment with custom colors for the web. It also makes it easy to convert between various color formats supported by CSS, including: HEXA colors, RGB (Red/Green/Blue) and HSL (Hue/Staturation/Lightness). Control over the alpha channel is also supported on RGB (rgba) and HSL (hsla) formats.</p> <p>Each color is presented in all 3 standard web CSS formats as you adjust it; in addition, based on the currently-selected color, a palette for HSL and HSV, as well as alpha, is generated. The \"eyedropper\" style color picker box can be toggled between HSL or HSV format.</p> <p><iframe class=\"live-sample-frame sample-code-frame\" height=\"900\" src=\"https://mdn.mozillademos.org/en-US/docs/Web/CSS/CSS_Colors/Color_picker_tool%24samples/ColorPicker_Tool?revision=1001473\" frameborder=\"0\" width=\"100%\" id=\"frame_ColorPicker_Tool\"></iframe></p> <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Colors/Color_picker_tool$edit\" class=\"_attribution-link\">Edit this page on MDN</a>\n  </p>\n</div>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2016 Mozilla Contributors<br>Licensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.<br>\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Colors/Color_picker_tool\" class=\"_attribution-link\">https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Colors/Color_picker_tool</a>\n  </p>\n</div>\n","uri":"<h1>&lt;uri&gt;</h1>  <p>The <code>&lt;url&gt;</code> <a href=\"https://developer.mozilla.org/en/CSS\" title=\"CSS\">CSS</a> data type denotes a pointer to a resource. It has no proper syntax and can only be expressed through the <code>url()</code> functional notation.</p> <div class=\"note\">\n<strong>URI or URL?</strong><br> <br> There is a difference between a <a href=\"http://en.wikipedia.org/wiki/Uniform_Resource_Identifier\" class=\"external\" title=\"http://en.wikipedia.org/wiki/Uniform_Resource_Identifier\">URI</a> and a <a href=\"http://en.wikipedia.org/wiki/Uniform_Resource_Locator\" class=\"external\" title=\"http://en.wikipedia.org/wiki/Uniform_Resource_Locator\">URL</a>. A URL describes the location of the resource, the URI describes an id of the resource . A URI may be a location, a URL, or a name, a <a href=\"http://en.wikipedia.org/wiki/Uniform_Resource_Name\" class=\"external\" title=\"http://en.wikipedia.org/wiki/Uniform_Resource_Name\">URN</a>, of a resource.<br> <br> In CSS Level 1, the <code>url()</code> functional notation was introduced to describe... URL, i.e. locations (a <code>&lt;url&gt;</code> CSS data type, though it wasn't explicitly defined that way).<br> <br> In CSS Level 2, the same functional notation was extended to describe any URI, being a URL or URN. This led to the confusing fact that <code>url()</code> was used to create a <code>&lt;uri&gt;</code> CSS data type. Not only was this confusing, but URN are almost never used in the CSS usual case.<br> <br> To fix this, CSS Level 3 came back to the initial definition, this time explicitly defined. The functional notation <code>url() </code>denotes a <code>&lt;url&gt;</code> CSS data type and no more the more generic <code>&lt;uri&gt;</code> CSS data type.<br> <br> Remark that these semantic details doesn't change much for a web author, or the implementation details of the data type.</div> <p>Many <a href=\"https://developer.mozilla.org/en/CSS_Reference\" title=\"en/CSS_Reference\">CSS properties</a> take a URL as value, such as <a href=\"background-image\" title=\"The CSS background-image property sets one or several background images for an element. The images are drawn on stacking context layers on top of each other. The first layer specified is drawn as if it is closest to the user.\"><code>background-image</code></a>, <a href=\"cursor\" title=\"The cursor CSS property specifies the mouse cursor displayed when the mouse pointer is over an element.\"><code>cursor</code></a>, <a href=\"@font-face\" title=\"The @font-face CSS at-rule allows authors to specify online fonts to display text on their web pages. By allowing authors to provide their own fonts, @font-face eliminates the need to depend on the limited number of fonts users have installed on their computers. The @font-face at-rule may be used not only at the top level of a CSS, but also inside any CSS conditional-group at-rule.\"><code>@font-face</code></a>, <a href=\"list-style\" title=\"The list-style property is a shorthand property for setting list-style-type, list-style-image and list-style-position.\"><code>list-style</code></a> etc. </p> <h2 id=\"The_url()_functional_notation\">The url() functional notation</h2> <p>The URL may be unquoted, or quoted by single or double quotes. Relative URLs are allowed and are relative to the URL of the stylesheet (not to the URL of the web page).</p> <h2 id=\"Syntax\">Syntax</h2> <pre> &lt;a_css_property&gt;:  url(\"http://mysite.example.com/mycursor.png\")\n\n &lt;a_css_property&gt;:  url(http://mysite.example.com/mycursor.png)\n</pre> <div class=\"note\"> <p><strong>Note:</strong> Control characters above <span id=\"summary_alias_container\"><span id=\"short_desc_nonedit_display\">0x7e are no longer allowed in unquoted url() notation starting in Firefox 15. See</span></span> <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=752230\" title=\"FIXED: control characters above 0x7e should not be allowed in unquoted url()\">bug 752230</a> for more details.</p> </div> <h2 id=\"Examples\">Examples</h2> <pre>.topbanner { background: url(\"topbanner.png\") #00D no-repeat fixed; }\n</pre> <pre>ul { list-style: square url(http://www.example.com/redball.png) }\n</pre> <h2 name=\"Specifications\" id=\"Specifications\">Specifications</h2> <table class=\"standard-table\"> <thead> <tr> <th scope=\"col\">Specification</th> <th scope=\"col\">Status</th> <th scope=\"col\">Comment</th> </tr> </thead> <tbody> <tr> <td><a href=\"https://drafts.csswg.org/css-values-3/#urls\" class=\"external\" lang=\"en\" hreflang=\"en\">CSS Values and Units Module Level 3<br><small lang=\"en-US\">The definition of '&lt;url&gt;' in that specification.</small></a></td> <td><span class=\"spec-CR\">Candidate Recommendation</span></td> <td>No significant change from CSS Level 2 (Revision 1)</td> </tr> <tr> <td><a href=\"http://www.w3.org/TR/CSS2/syndata.html#uri\" class=\"external\" lang=\"en\" hreflang=\"en\">CSS Level 2 (Revision 1)<br><small lang=\"en-US\">The definition of '&lt;uri&gt;' in that specification.</small></a></td> <td><span class=\"spec-REC\">Recommendation</span></td> <td>No significant change from CSS Level 1</td> </tr> <tr> <td><a href=\"http://www.w3.org/TR/CSS1/#url\" class=\"external\" lang=\"en\" hreflang=\"en\">CSS Level 1<br><small lang=\"en-US\">The definition of '&lt;url&gt;' in that specification.</small></a></td> <td><span class=\"spec-REC\">Recommendation</span></td> <td> </td> </tr> </tbody> </table> <h2 name=\"Browser_Compatibility\" id=\"Browser_Compatibility\">Browser compatibility</h2>  <div id=\"compat-desktop\"> <table class=\"compat-table\"> <tbody> <tr> <th>Feature</th> <th>Chrome</th> <th>Firefox (Gecko)</th> <th>Internet Explorer</th> <th>Opera</th> <th>Safari (WebKit)</th> </tr> <tr> <td>Basic support</td> <td>1.0</td> <td>1.0 (1.0)</td> <td>3.0</td> <td>3.5</td> <td>1.0 (85)</td> </tr> </tbody> </table> </div> <div id=\"compat-mobile\"> <table class=\"compat-table\"> <tbody> <tr> <th>Feature</th> <th>Android</th> <th>Firefox Mobile (Gecko)</th> <th>IE Phone</th> <th>Opera Mobile</th> <th>Safari Mobile</th> </tr> <tr> <td>Basic support</td> <td>1.0</td> <td>1.0 (3.5)</td> <td>yes</td> <td>yes</td> <td>1.0</td> </tr> </tbody> </table> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/uri$edit\" class=\"_attribution-link\">Edit this page on MDN</a>\n  </p>\n</div>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2016 Mozilla Contributors<br>Licensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.<br>\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/uri\" class=\"_attribution-link\">https://developer.mozilla.org/en-US/docs/Web/CSS/uri</a>\n  </p>\n</div>\n","css_lists_and_counters/consistent_list_indentation":"<h1>CSS Lists and Counters: Consistent list indentation</h1> <p><span class=\"seoSummary\">One of the most common style changes made to lists is a change in the indentation distance—that is, how far the list items are pushed over to the right.</span> This often leads to frustration, because what works in one browser often doesn't have the same effect in another. For example, if you declare that lists have no left margin, they move over in Internet Explorer, but sit stubbornly in place in Gecko-based browsers.<span class=\"seoSummary\">This article will help you understand the problems that can occur and how to avoid them.</span></p> <p>In order to understand why this is the case, and more importantly how to avoid the problem altogether, it's necessary to examine the details of list construction.</p> <h2 id=\"Making_a_List\">Making a List</h2> <p>First, we consider a single, pure list item. This list item has no marker (otherwise known as a \"bullet\") and is not yet part of a list itself. It hangs alone in the void, simple and unadorned, as shown in Figure 1.</p> <p><img src=\"https://developer.mozilla.org/@api/deki/files/619/=Consistent-list-indentation-figure1.gif\" alt=\"Figure 1\" class=\"internal\"></p> <p>That dotted red border represents outer edges of the content-area of the list item. Remember that, at this point, the list item has no padding or borders. If we add two more list items, we get a result like that shown in Figure 2.</p> <p><img src=\"https://developer.mozilla.org/@api/deki/files/620/=Consistent-list-indentation-figure2.gif\" alt=\"Figure 2\" class=\"internal\"></p> <p>Now we wrap these in a parent element; in this case, we'll wrap them in an unordered list (i.e., <code>&lt;ul&gt;</code>). According to the CSS box model, the list items' boxes must be displayed within the parent element's content area. Since that parent has no padding or margins yet, we get the situation shown in Figure 3.</p> <p><img src=\"https://developer.mozilla.org/@api/deki/files/621/=Consistent-list-indentation-figure3.gif\" alt=\"Figure 3\" class=\"internal\"></p> <p>Here, the dotted blue border shows us the edges of the <code>&lt;ul&gt;</code> element's content area. Since we have no padding for the <code>&lt;ul&gt;</code> element, its content wraps snugly around the three list items.</p> <p>Now we add the list item markers. Since this is an unordered list, we'll add traditional filled-circle \"bullets,\" as shown in Figure 4.</p> <p><img src=\"https://developer.mozilla.org/@api/deki/files/622/=Consistent-list-indentation-figure4.gif\" alt=\"Figure 4\" class=\"internal\"></p> <p>Visually, the markers are <em>outside</em> the content area of the <code>&lt;ul&gt;</code>, but that's not the important part here. What's key is that the markers are placed outside the \"principal box\" of the <code>&lt;li&gt;</code> elements, not the <code>&lt;ul&gt;</code>. They're sort of like appendages to the list items, hanging outside the content-area of the <code>&lt;li&gt;</code> but still attached to the <code>&lt;li&gt;</code>.</p> <p>This is why, in every browser except Internet Explorer for Windows, markers are placed outside any border set for an <code>&lt;li&gt;</code> element, assuming the value of <code>list-style-position</code> is <code>outside</code>. If it's changed to <code>inside</code>, then the markers are brought inside the <code>&lt;li&gt;</code>'s content, as though they're an inline box placed at the very beginning of the <code>&lt;li&gt;</code>.</p> <h2 id=\"Indenting_It_Twice\">Indenting It Twice</h2> <p>So how will all this appear in a document? At the moment, we have a situation analogous to these styles:</p> <pre data-language=\"css\">ul, li {margin-left: 0; padding-left: 0;}</pre> <p>If we dropped this list into a document as-is, there would be no apparent indentation and the markers would be in danger of falling off the left edge of the browser window.</p> <p>In order to avoid this and get some indentation, there are really only three options available to browser implementors.</p> <ol> <li>Give each <code>&lt;li&gt;</code> element a left margin.</li> <li>Give the <code>&lt;ul&gt;</code> element a left margin.</li> <li>Give the <code>&lt;ul&gt;</code> element some left padding.</li> </ol> <p>As it turns out, nobody seems to have used the first option. The second option was taken by Internet Explorer for Windows and Macintosh, and Opera. The third was adopted by Gecko, and by extension all the browsers that embed it.</p> <p>Let's look at the two approaches for a moment. In Internet Explorer and Opera, the lists are indented by setting a left margin of 40 pixels on the <code>&lt;ul&gt;</code> element. If we apply a background color to the <code>&lt;ul&gt;</code> element and leave the list item and <code>&lt;ul&gt;</code> borders in place, we get the result shown in Figure 5.</p> <p><img src=\"https://developer.mozilla.org/@api/deki/files/623/=Consistent-list-indentation-figure5.gif\" alt=\"Figure 5\" class=\"internal\"></p> <p>Gecko, on the other hand, sets a left <em>padding</em> of 40 pixels for the <code>&lt;ul&gt;</code> element, so given the exact same styles as were used to produce Figure 5, loading the example into a Gecko-based browser gives us Figure 6.</p> <p><img src=\"https://developer.mozilla.org/@api/deki/files/624/=Consistent-list-indentation-figure6.gif\" alt=\"Figure 6\" class=\"internal\"></p> <p>As we can see, the markers remain attached to the <code>&lt;li&gt;</code> elements, no matter where they are. The difference is entirely in how the <code>&lt;ul&gt;</code> is styled. We can only see the difference if we try to set a background or border on the <code>&lt;ul&gt;</code> element.</p> <h2 id=\"Finding_Consistency\">Finding Consistency</h2> <p>Boil it all down, and what we're left with is this: if you want consistent rendering of lists between Gecko, Internet Explorer, and Opera, you need to set <strong>both</strong> the left margin and left padding of the <code>&lt;ul&gt;</code> element. We can ignore <code>&lt;li&gt;</code> altogether for these purposes. If you want to reproduce the default display in Netscape 6.x, you write:</p> <pre data-language=\"css\">ul {margin-left: 0; padding-left: 40px;}</pre> <p>If you're more interested in following the Internet Explorer/Opera model, then:</p> <pre data-language=\"css\">ul {margin-left: 40px; padding-left: 0;}</pre> <p>Of course, you can fill in your own preferred values. Set both to <code>1.25em</code>, if you like -- there's no reason why you have to stick with pixel-based indentation. If you want to reset lists to have no indentation, then you still have to zero out both padding and margin:</p> <pre data-language=\"css\">ul {margin-left: 0; padding-left: 0;}</pre> <p>Remember, though, that in so doing, you'll have the bullets hanging outside the list and its parent element. If the parent is the <code>body</code>, there's a strong chance your bullets will be completely outside the browser window, and thus will not be visible.</p> <h2 id=\"Conclusion\">Conclusion</h2> <p>In the end, we can see that none of the browsers mentioned in this article is right or wrong about how they lay out lists. They use different default styles, and that's where the problems creep in. By making sure you style both the left padding and left margin of lists, you can find much greater cross-browser consistency in your list indentation.</p> <h2 id=\"Recommendations\">Recommendations</h2> <ul> <li>When altering the indentation of lists, make sure to set both the padding and margin.</li> </ul> <div class=\"originaldocinfo\"> <h2 id=\"Original_Document_Information\">Original Document Information</h2> <ul> <li>Author(s): Eric A. Meyer, Netscape Communications</li> <li>Last Updated Date: Published 30 Aug 2002</li> <li>Copyright Information: Copyright © 2001-2003 Netscape. All rights reserved.</li> <li>Note: This reprinted article was originally part of the DevEdge site.</li> </ul> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Lists_and_Counters/Consistent_list_indentation$edit\" class=\"_attribution-link\">Edit this page on MDN</a>\n  </p>\n</div>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2016 Mozilla Contributors<br>Licensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.<br>\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Lists_and_Counters/Consistent_list_indentation\" class=\"_attribution-link\">https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Lists_and_Counters/Consistent_list_indentation</a>\n  </p>\n</div>\n","css_lists_and_counters/using_css_counters":"<h1>CSS Lists and Counters: Using CSS counters</h1> <p><span class=\"seoSummary\">CSS counters are, in essence, variables maintained by CSS whose values may be incremented by CSS rules to track how many times they're used. This lets you adjust the appearance of content based on its placement in the document.</span> CSS counters are an implementation of <a href=\"http://www.w3.org/TR/CSS21/generate.html#counters\" class=\"external\">Automatic counters and numbering</a> in CSS 2.1.</p> <p>The value of a counter is manipulated through the use of <a title=\"The counter-reset CSS property is used to reset CSS Counters to a given value.\" href=\"../counter-reset\"><code>counter-reset</code></a>. <a title=\"The counter-increment CSS property is used to increase the value of CSS Counters by a given value. The counter's value can be reset using the counter-reset CSS property.\" href=\"../counter-increment\"><code>counter-increment</code></a> can be displayed on a page using the <code>counter()</code> or <code>counters()</code> function of the <a title=\"The content CSS property is used with the ::before and ::after pseudo-elements to generate content in an element. Objects inserted using the content property are anonymous replaced elements.\" href=\"../content\"><code>content</code></a> property.</p> <h2 id=\"Using_counters\">Using counters</h2> <p>To use a CSS counter, it must first be reset to a value (0 by default). To add the value of a counter to an element, use the <code>counter()</code> function. The following CSS adds to the beginning of each h3 element \"Section &lt;the value of the counter&gt;:\".</p> <pre data-language=\"css\">body {\n  counter-reset: section;                    /* Set the section counter to 0 */\n}\n\nh3::before {\n  counter-increment: section;                /* Increment the section counter*/\n  content: \"Section \" counter(section) \": \"; /* Display the counter */\n}\n</pre> <p>Example:</p> <pre data-language=\"html\">&lt;h3&gt;Introduction&lt;/h3&gt;\n&lt;h3&gt;Body&lt;/h3&gt;\n&lt;h3&gt;Conclusion&lt;/h3&gt;</pre> <p><iframe width=\"200\" frameborder=\"0\" class=\"live-sample-frame sample-code-frame\" src=\"https://mdn.mozillademos.org/en-US/docs/Web/CSS/CSS_Lists_and_Counters/Using_CSS_counters%24samples/Using_counters?revision=1014449\" height=\"150\" id=\"frame_Using_counters\"></iframe></p> <h2 id=\"Nesting_counters\">Nesting counters</h2> <p>A CSS counter can be especially useful to make outlined lists because a new instance of a CSS counter is automatically created in child elements. Using the <code>counters()</code> function, a string can be inserted between different levels of nested counters. For example this CSS:</p> <pre data-language=\"css\">ol {\n  counter-reset: section;                /* Creates a new instance of the\n                                            section counter with each ol\n                                            element */\n  list-style-type: none;\n}\n\nli::before {\n  counter-increment: section;            /* Increments only this instance\n                                            of the section counter */\n  content: counters(section,\".\") \" \";    /* Adds the value of all instances\n                                            of the section counter separated\n                                            by a \".\". */\n                                         /* if you need to support &lt; IE8 then\n                                            make sure there is no space after \n                                            the ',' */\n}\n</pre> <p>Combined with the following HTML:</p> <pre data-language=\"html\">&lt;ol&gt;\n  &lt;li&gt;item&lt;/li&gt;          &lt;!-- 1     --&gt;\n  &lt;li&gt;item               &lt;!-- 2     --&gt;\n    &lt;ol&gt;\n      &lt;li&gt;item&lt;/li&gt;      &lt;!-- 2.1   --&gt;\n      &lt;li&gt;item&lt;/li&gt;      &lt;!-- 2.2   --&gt;\n      &lt;li&gt;item           &lt;!-- 2.3   --&gt;\n        &lt;ol&gt;\n          &lt;li&gt;item&lt;/li&gt;  &lt;!-- 2.3.1 --&gt;\n          &lt;li&gt;item&lt;/li&gt;  &lt;!-- 2.3.2 --&gt;\n        &lt;/ol&gt;\n        &lt;ol&gt;\n          &lt;li&gt;item&lt;/li&gt;  &lt;!-- 2.3.1 --&gt;\n          &lt;li&gt;item&lt;/li&gt;  &lt;!-- 2.3.2 --&gt;\n          &lt;li&gt;item&lt;/li&gt;  &lt;!-- 2.3.3 --&gt;\n        &lt;/ol&gt;\n      &lt;/li&gt;\n      &lt;li&gt;item&lt;/li&gt;      &lt;!-- 2.4   --&gt;\n    &lt;/ol&gt;\n  &lt;/li&gt;\n  &lt;li&gt;item&lt;/li&gt;          &lt;!-- 3     --&gt;\n  &lt;li&gt;item&lt;/li&gt;          &lt;!-- 4     --&gt;\n&lt;/ol&gt;\n&lt;ol&gt;\n  &lt;li&gt;item&lt;/li&gt;          &lt;!-- 1     --&gt;\n  &lt;li&gt;item&lt;/li&gt;          &lt;!-- 2     --&gt;\n&lt;/ol&gt;</pre> <p>Yields this result:</p> <p><iframe width=\"250\" frameborder=\"0\" class=\"live-sample-frame sample-code-frame\" src=\"https://mdn.mozillademos.org/en-US/docs/Web/CSS/CSS_Lists_and_Counters/Using_CSS_counters%24samples/Nesting_counters?revision=1014449\" height=\"350\" id=\"frame_Nesting_counters\"></iframe></p> <h2 id=\"Specifications\">Specifications</h2> <table class=\"standard-table\"> <thead> <tr> <th scope=\"col\">Specification</th> <th scope=\"col\">Status</th> <th scope=\"col\">Comment</th> </tr> </thead> <tbody> <tr> <td><a lang=\"en\" hreflang=\"en\" href=\"https://drafts.csswg.org/css-lists-3/#auto-numbering\" class=\"external\">CSS Lists and Counters Module Level 3<br><small lang=\"en-US\">The definition of 'CSS Counters' in that specification.</small></a></td> <td><span class=\"spec-WD\">Working Draft</span></td> <td>No change</td> </tr> <tr> <td><a lang=\"en\" hreflang=\"en\" href=\"http://www.w3.org/TR/CSS2/generate.html#counters\" class=\"external\">CSS Level 2 (Revision 1)<br><small lang=\"en-US\">The definition of 'CSS Counters' in that specification.</small></a></td> <td><span class=\"spec-REC\">Recommendation</span></td> <td>Initial definition</td> </tr> </tbody> </table> <h2 id=\"See_also\">See also</h2> <ul> <li><a title=\"The counter-reset CSS property is used to reset CSS Counters to a given value.\" href=\"../counter-reset\"><code>counter-reset</code></a></li> <li><a title=\"The counter-increment CSS property is used to increase the value of CSS Counters by a given value. The counter's value can be reset using the counter-reset CSS property.\" href=\"../counter-increment\"><code>counter-increment</code></a></li> </ul> <p><em>There is an additional example available at <a href=\"http://www.mezzoblue.com/archives/2006/11/01/counter_intu/\" rel=\"freelink\" class=\"external\">http://www.mezzoblue.com/archives/20.../counter_intu/</a>. This blog entry was posted on November 01, 2006, but appears to be accurate.</em></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Lists_and_Counters/Using_CSS_counters$edit\" class=\"_attribution-link\">Edit this page on MDN</a>\n  </p>\n</div>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2016 Mozilla Contributors<br>Licensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.<br>\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Lists_and_Counters/Using_CSS_counters\" class=\"_attribution-link\">https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Lists_and_Counters/Using_CSS_counters</a>\n  </p>\n</div>\n","css_writing_modes":"<h1>CSS Writing Modes</h1> <p><strong>CSS Writing Modes</strong> is a CSS module that defines various international writing modes, such as left-to-right (e.g. used by Latin and Indic scripts), right-to-left (e.g. used by Hebrew or Arabic scripts), bidirectional (used when mixing left-to-right and right-to-left scripts) and vertical (e.g. used by some Asian scripts).</p> <h2 id=\"CSS_properties\">CSS properties</h2> <div class=\"index\"> <ul> <li><a title=\"Set the direction CSS property to match the direction of the text: rtl for languages written from right-to-left (like Hebrew or Arabic) text and ltr for other scripts. This is typically done as part of the document (e.g., using the dir attribute in HTML) rather than through direct use of CSS.\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/direction\"><code>direction</code></a></li> <li><a title=\"The documentation about this has not yet been written; please consider contributing!\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/glyph-orientation-horizontal\"><code>glyph-orientation-horizontal</code></a></li> <li><a title=\"The text-combine-upright CSS property specifies the combination of multiple characters into the space of a single character. If the combined text is wider than 1em, the user agent must fit the contents within 1em. The resulting composition is treated as a single upright glyph for the purposes of layout and decoration. This property only has an effect in vertical writing modes.\" href=\"text-combine-upright\"><code>text-combine-upright</code></a></li> <li><a title=\"The text-orientation CSS property defines the orientation of the text in a line. This property only has an effect in vertical mode, that is when writing-mode is not horizontal-tb. It is useful to control the display of writing in languages using vertical script, but also to deal with vertical table headers.\" href=\"text-orientation\"><code>text-orientation</code></a></li> <li><a title=\"The unicode-bidi CSS property together with the direction property relates to the handling of bidirectional text in a document. For example, if a block of text contains both left-to-right and right-to-left text then the user-agent uses a complex Unicode algorithm to decide how to display the text. This property overrides this algorithm and allows the developer to control the text embedding.\" href=\"unicode-bidi\"><code>unicode-bidi</code></a></li> <li><a title=\"The writing-mode property defines whether lines of text are laid out horizontally or vertically and the direction in which blocks progress.\" href=\"writing-mode\"><code>writing-mode</code></a></li> </ul> </div> <h2 id=\"Guides\">Guides</h2> <p><em>None.</em></p> <h2 id=\"Specifications\">Specifications</h2> <table class=\"standard-table\"> <thead> <tr> <th scope=\"col\">Specification</th> <th scope=\"col\">Status</th> <th scope=\"col\">Comment</th> </tr> </thead> <tbody> <tr> <td><a lang=\"en\" title=\"The 'CSS Writing Modes Module Level 3' specification\" class=\"external\" href=\"https://drafts.csswg.org/css-writing-modes-3/\" hreflang=\"en\">CSS Writing Modes Module Level 3</a></td> <td><span class=\"spec-CR\">Candidate Recommendation</span></td> <td> </td> </tr> <tr> <td><a lang=\"en\" title=\"The 'CSS Level 2 (Revision 1)' specification\" class=\"external\" href=\"http://www.w3.org/TR/CSS2/text.html\" hreflang=\"en\">CSS Level 2 (Revision 1)</a></td> <td><span class=\"spec-REC\">Recommendation</span></td> <td> </td> </tr> <tr> <td><a lang=\"en\" title=\"The 'CSS Level 1' specification\" class=\"external\" href=\"http://www.w3.org/TR/CSS1/\" hreflang=\"en\">CSS Level 1</a></td> <td><span class=\"spec-REC\">Recommendation</span></td> <td>Initial definition</td> </tr> </tbody> </table> <h2 id=\"Browser_compatibility\">Browser compatibility</h2>  <div id=\"compat-desktop\"> <table class=\"compat-table\"> <tbody> <tr> <th>Feature</th> <th>Chrome</th> <th>Firefox (Gecko)</th> <th>Internet Explorer</th> <th>Opera</th> <th>Safari (WebKit)</th> </tr> <tr> <td>Basic support</td> <td>1.0</td> <td>1.0 (1.7 or earlier)</td> <td>3</td> <td>3.5</td> <td>1.0 (85)</td> </tr> </tbody> </table> </div> <div id=\"compat-mobile\"> <table class=\"compat-table\"> <tbody> <tr> <th>Feature</th> <th>Android</th> <th>Firefox Mobile (Gecko)</th> <th>IE Phone</th> <th>Opera Mobile</th> <th>Safari Mobile</th> </tr> <tr> <td>Basic support</td> <td><span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span></td> <td><span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span></td> <td><span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span></td> <td><span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span></td> <td>1.0 (85)</td> </tr> </tbody> </table> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Writing_Modes$edit\" class=\"_attribution-link\">Edit this page on MDN</a>\n  </p>\n</div>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2016 Mozilla Contributors<br>Licensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.<br>\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Writing_Modes\" class=\"_attribution-link\">https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Writing_Modes</a>\n  </p>\n</div>\n","css_user_interface":"<h1>CSS User Interface</h1> <p><strong>CSS User Interface</strong> is a CSS module that allows to define the rendering and functionality of user interface related features.</p> <h2 id=\"Reference\">Reference</h2> <h3 id=\"Preferences\">Preferences</h3> <div class=\"index\"> <ul> <li><a title=\"The box-sizing property is used to alter the default CSS box model used to calculate widths and heights of elements. It is possible to use this property to emulate the behavior of browsers that do not correctly support the CSS box model specification.\" href=\"box-sizing\"><code>box-sizing</code></a></li> <li><a title=\"The cursor CSS property specifies the mouse cursor displayed when the mouse pointer is over an element.\" href=\"cursor\"><code>cursor</code></a></li> <li><a title=\"The CSS outline property is a shorthand property for setting one or more of the individual outline properties outline-style, outline-width and outline-color in a single declaration. In most cases the use of this shortcut is preferable and more convenient.\" href=\"outline\"><code>outline</code></a></li> <li><a title=\"The outline-width CSS property is used to set the width of the outline of an element. An outline is a line that is drawn around elements, outside the border edge, to make the element stand out:\" href=\"outline-width\"><code>outline-width</code></a></li> <li><a title=\"The outline-style CSS property is used to set the style of the outline of an element. An outline is a line that is drawn around elements, outside the border edge, to make the element stand out.\" href=\"outline-style\"><code>outline-style</code></a></li> <li><a title=\"The outline-color CSS property sets the color of the outline of an element. An outline is a line that is drawn around elements, outside the border edge, to make the element stand out.\" href=\"outline-color\"><code>outline-color</code></a></li> <li><a title=\"The outline-offset CSS property is used to set space between an outline and the edge or border of an element. An outline is a line that is drawn around elements, outside the border edge.\" href=\"outline-offset\"><code>outline-offset</code></a></li> <li><a title=\"The resize CSS property lets you control the resizability of an element.\" href=\"resize\"><code>resize</code></a></li> <li><a title=\"The text-overflow CSS property determines how overflowed content that is not displayed is signaled to users. It can be clipped, display an ellipsis ('…', U+2026 Horizontal Ellipsis), or display a custom string.\" href=\"text-overflow\"><code>text-overflow</code></a></li> <li><a title=\"The documentation about this has not yet been written; please consider contributing!\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/nav-down\"><code>nav-down</code></a></li> <li><a title=\"The documentation about this has not yet been written; please consider contributing!\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/nav-left\"><code>nav-left</code></a></li> <li><a title=\"The documentation about this has not yet been written; please consider contributing!\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/nav-right\"><code>nav-right</code></a></li> <li><a title=\"The documentation about this has not yet been written; please consider contributing!\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/nav-up\"><code>nav-up</code></a></li> </ul> </div> <h2 id=\"Guides\">Guides</h2> <dl> <dt><a href=\"css_user_interface/using_url_values_for_the_cursor_property\">Using URL values for the <code>cursor</code> property</a></dt> <dd>Explains and shows how URL can be used with the <a title=\"The cursor CSS property specifies the mouse cursor displayed when the mouse pointer is over an element.\" href=\"cursor\"><code>cursor</code></a> property to produce custom cursors.</dd> </dl> <h2 id=\"Specifications\">Specifications</h2> <table class=\"standard-table\"> <thead> <tr> <th scope=\"col\">Specification</th> <th scope=\"col\">Status</th> <th scope=\"col\">Comment</th> </tr> </thead> <tbody> <tr> <td><a lang=\"en\" title=\"The 'CSS Basic User Interface Module Level 3' specification\" class=\"external\" href=\"https://drafts.csswg.org/css-ui-3/\" hreflang=\"en\">CSS Basic User Interface Module Level 3</a></td> <td><span class=\"spec-CR\">Candidate Recommendation</span></td> <td> </td> </tr> <tr> <td><a lang=\"en\" title=\"The 'CSS Level 2 (Revision 1)' specification\" class=\"external\" href=\"http://www.w3.org/TR/CSS2/ui.html\" hreflang=\"en\">CSS Level 2 (Revision 1)</a></td> <td><span class=\"spec-REC\">Recommendation</span></td> <td>Initial definition</td> </tr> </tbody> </table> <h2 id=\"Browser_compatibility\">Browser compatibility</h2>  <div id=\"compat-desktop\"> <table class=\"compat-table\"> <tbody> <tr> <th>Feature</th> <th>Chrome</th> <th>Firefox (Gecko)</th> <th>Internet Explorer</th> <th>Opera</th> <th>Safari (WebKit)</th> </tr> <tr> <td>Basic support</td> <td>1.0</td> <td>1.5 (1.8)</td> <td>8.0</td> <td>7.0</td> <td>1.2 (125)</td> </tr> </tbody> </table> </div> <div id=\"compat-mobile\"> <table class=\"compat-table\"> <tbody> <tr> <th>Feature</th> <th>Android</th> <th>Firefox Mobile (Gecko)</th> <th>IE Phone</th> <th>Opera Mobile</th> <th>Safari Mobile</th> </tr> <tr> <td>Basic support</td> <td>1.0</td> <td>1.0 (1.8)</td> <td>8.0</td> <td>6.0</td> <td>3.1</td> </tr> </tbody> </table> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_User_Interface$edit\" class=\"_attribution-link\">Edit this page on MDN</a>\n  </p>\n</div>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2016 Mozilla Contributors<br>Licensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.<br>\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_User_Interface\" class=\"_attribution-link\">https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_User_Interface</a>\n  </p>\n</div>\n","css_reference":"<h1>CSS Reference</h1><p><span class=\"seoSummary\">This <em>CSS Reference</em> shows the basic syntax of a CSS rule; lists all standard <a href=\"https://developer.mozilla.org/en-US/docs/CSS\">CSS</a> properties, <a href=\"pseudo-classes\">pseudo-classes</a> and <a href=\"pseudo-elements\">pseudo-elements</a>, <a href=\"at-rule\">@-rules</a>, <a href=\"length\">units</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors\">selectors</a>, all together in <a href=\"#Keyword_index\">alphabetical order</a>, as well as just the <a href=\"#Selectors\">selectors by type</a>; and allows you to quickly access detailed information for each of them. It not only lists the CSS 1 and CSS 2.1 properties, but also is a CSS3 reference that links to any <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS3\">CSS3</a> property and concept standardized, or already stabilized. Also included is a brief <a href=\"#DOM_CSS\">DOM-CSS / CSSOM reference</a>.</span></p> <p>Note that CSS rule-definitions are entirely (ASCII) <a href=\"https://www.w3.org/TR/css-syntax-3/#intro\">text-based</a>, whereas DOM-CSS / CSSOM, the rule-management system, is <a href=\"https://www.w3.org/TR/cssom/#introduction\">object-based</a>.</p> <p>See also <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/Reference/Mozilla_Extensions\">Mozilla CSS Extensions</a> for Gecko-specific properties prefixed with <code>-moz</code>; and <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Reference/Webkit_Extensions\">WebKit CSS Extensions</a> for WebKit-specific properties. See <a href=\"http://peter.sh/experiments/vendor-prefixed-css-property-overview/\">Vendor-prefixed CSS Property Overview</a> by Peter Beverloo for all prefixed properties.</p> <h2 id=\"Basic_rule_syntax\">Basic rule syntax</h2> <p>Be warned that any syntax error in a rule definition will invalidate the entire rule.</p> <h3 id=\"Style_rules\">Style rules</h3> <pre class=\"syntaxbox\"><strong><var>selectorlist</var> { <var>property</var>: <var>value</var>;</strong> <var>[more property:value; pairs]</var> <strong>}</strong>\n\n...where <var>selectorlist</var> is: <var>selector[:pseudo-class] [::pseudo-element] [, more selectorlists]</var>\n\nSee <a href=\"#Selectors\"><em>selector</em></a>, <a href=\"#pelm\"><em>pseudo-element</em></a>, <a href=\"#pcls\"><em>pseudo-class</em></a> lists below.\n</pre> <h4 id=\"Examples\">Examples</h4> <pre data-language=\"css\">strong { color: red;}                                \ndiv.menu-bar li:hover &gt; ul { display: block; }\n</pre> <p>More about examples: <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_started/Selectors#Information_Selectors\">#1</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_started/Selectors#Action_Using_selectors_based_on_relationships_and_pseudo-classes\">#2</a></p> <h3 id=\"rules\">@rules</h3> <p>As these have so many different structure-formats, see the desired <a href=\"at-rule\">At-rule</a> for syntax.</p> <h2 id=\"Keyword_index\">Keyword index</h2> <div><div class=\"index\"> <span>A</span><ul>\n<li><a href=\":active\"><code>:active { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\"@counter-style/additive-symbols\"><code>additive-symbols (@counter-style)</code></a></li>\n<li><a href=\"::after\"><code>::after (:after)</code></a></li>\n<li><a href=\"align-content\"><code>align-content</code></a></li>\n<li><a href=\"align-items\"><code>align-items</code></a></li>\n<li><a href=\"align-self\"><code>align-self</code></a></li>\n<li><a href=\"all\"><code>all</code></a></li>\n<li><a href=\"angle\"><code>&lt;angle&gt;</code></a></li>\n<li><a href=\"animation\"><code>animation</code></a></li>\n<li><a href=\"animation-delay\"><code>animation-delay</code></a></li>\n<li><a href=\"animation-direction\"><code>animation-direction</code></a></li>\n<li><a href=\"animation-duration\"><code>animation-duration</code></a></li>\n<li><a href=\"animation-fill-mode\"><code>animation-fill-mode</code></a></li>\n<li><a href=\"animation-iteration-count\"><code>animation-iteration-count</code></a></li>\n<li><a href=\"animation-name\"><code>animation-name</code></a></li>\n<li><a href=\"animation-play-state\"><code>animation-play-state</code></a></li>\n<li><a href=\"animation-timing-function\"><code>animation-timing-function</code></a></li>\n<li><a href=\"@font-feature-values/@annotation\"><code>@annotation (@font-feature-values)</code></a></li>\n<li><a href=\"font-variant-alternates#annotation()\"><code>annotation()</code></a></li>\n<li><a href=\"attr\"><code>attr()</code></a></li>\n</ul>\n<span>B</span><ul>\n<li><a href=\"::backdrop\"><code>::backdrop</code></a></li>\n<li><a href=\"backface-visibility\"><code>backface-visibility</code></a></li>\n<li><a href=\"background\"><code>background</code></a></li>\n<li><a href=\"background-attachment\"><code>background-attachment</code></a></li>\n<li><a href=\"background-blend-mode\"><code>background-blend-mode</code></a></li>\n<li><a href=\"background-clip\"><code>background-clip</code></a></li>\n<li><a href=\"background-color\"><code>background-color</code></a></li>\n<li><a href=\"background-image\"><code>background-image</code></a></li>\n<li><a href=\"background-origin\"><code>background-origin</code></a></li>\n<li><a href=\"background-position\"><code>background-position</code></a></li>\n<li><a href=\"background-repeat\"><code>background-repeat</code></a></li>\n<li><a href=\"background-size\"><code>background-size</code></a></li>\n<li><a href=\"basic-shape\"><code>&lt;basic-shape&gt;</code></a></li>\n<li><a href=\"::before\"><code>::before (:before)</code></a></li>\n<li><a href=\"blend-mode\"><code>&lt;blend-mode&gt;</code></a></li>\n<li><a href=\"block-size\"><code>block-size</code></a></li>\n<li><a href=\"filter#blur()\"><code>blur()</code></a></li>\n<li><a href=\"border\"><code>border</code></a></li>\n<li><a href=\"border-block-end\"><code>border-block-end</code></a></li>\n<li><a href=\"border-block-end-color\"><code>border-block-end-color</code></a></li>\n<li><a href=\"border-block-end-style\"><code>border-block-end-style</code></a></li>\n<li><a href=\"border-block-end-width\"><code>border-block-end-width</code></a></li>\n<li><a href=\"border-block-start\"><code>border-block-start</code></a></li>\n<li><a href=\"border-block-start-color\"><code>border-block-start-color</code></a></li>\n<li><a href=\"border-block-start-style\"><code>border-block-start-style</code></a></li>\n<li><a href=\"border-block-start-width\"><code>border-block-start-width</code></a></li>\n<li><a href=\"border-bottom\"><code>border-bottom</code></a></li>\n<li><a href=\"border-bottom-color\"><code>border-bottom-color</code></a></li>\n<li><a href=\"border-bottom-left-radius\"><code>border-bottom-left-radius</code></a></li>\n<li><a href=\"border-bottom-right-radius\"><code>border-bottom-right-radius</code></a></li>\n<li><a href=\"border-bottom-style\"><code>border-bottom-style</code></a></li>\n<li><a href=\"border-bottom-width\"><code>border-bottom-width</code></a></li>\n<li><a href=\"border-collapse\"><code>border-collapse</code></a></li>\n<li><a href=\"border-color\"><code>border-color</code></a></li>\n<li><a href=\"border-image\"><code>border-image</code></a></li>\n<li><a href=\"border-image-outset\"><code>border-image-outset</code></a></li>\n<li><a href=\"border-image-repeat\"><code>border-image-repeat</code></a></li>\n<li><a href=\"border-image-slice\"><code>border-image-slice</code></a></li>\n<li><a href=\"border-image-source\"><code>border-image-source</code></a></li>\n<li><a href=\"border-image-width\"><code>border-image-width</code></a></li>\n<li><a href=\"border-inline-end\"><code>border-inline-end</code></a></li>\n<li><a href=\"border-inline-end-color\"><code>border-inline-end-color</code></a></li>\n<li><a href=\"border-inline-end-style\"><code>border-inline-end-style</code></a></li>\n<li><a href=\"border-inline-end-width\"><code>border-inline-end-width</code></a></li>\n<li><a href=\"border-inline-start\"><code>border-inline-start</code></a></li>\n<li><a href=\"border-inline-start-color\"><code>border-inline-start-color</code></a></li>\n<li><a href=\"border-inline-start-style\"><code>border-inline-start-style</code></a></li>\n<li><a href=\"border-inline-start-width\"><code>border-inline-start-width</code></a></li>\n<li><a href=\"border-left\"><code>border-left</code></a></li>\n<li><a href=\"border-left-color\"><code>border-left-color</code></a></li>\n<li><a href=\"border-left-style\"><code>border-left-style</code></a></li>\n<li><a href=\"border-left-width\"><code>border-left-width</code></a></li>\n<li><a href=\"border-radius\"><code>border-radius</code></a></li>\n<li><a href=\"border-right\"><code>border-right</code></a></li>\n<li><a href=\"border-right-color\"><code>border-right-color</code></a></li>\n<li><a href=\"border-right-style\"><code>border-right-style</code></a></li>\n<li><a href=\"border-right-width\"><code>border-right-width</code></a></li>\n<li><a href=\"border-spacing\"><code>border-spacing</code></a></li>\n<li><a href=\"border-style\"><code>border-style</code></a></li>\n<li><a href=\"border-top\"><code>border-top</code></a></li>\n<li><a href=\"border-top-color\"><code>border-top-color</code></a></li>\n<li><a href=\"border-top-left-radius\"><code>border-top-left-radius</code></a></li>\n<li><a href=\"border-top-right-radius\"><code>border-top-right-radius</code></a></li>\n<li><a href=\"border-top-style\"><code>border-top-style</code></a></li>\n<li><a href=\"border-top-width\"><code>border-top-width</code></a></li>\n<li><a href=\"border-width\"><code>border-width</code></a></li>\n<li><a href=\"bottom\"><code>bottom</code></a></li>\n<li><a href=\"box-decoration-break\"><code>box-decoration-break</code></a></li>\n<li><a href=\"box-shadow\"><code>box-shadow</code></a></li>\n<li><a href=\"box-sizing\"><code>box-sizing</code></a></li>\n<li><a href=\"break-after\"><code>break-after</code></a></li>\n<li><a href=\"break-before\"><code>break-before</code></a></li>\n<li><a href=\"break-inside\"><code>break-inside</code></a></li>\n<li><a href=\"filter#brightness()\"><code>brightness()</code></a></li>\n</ul>\n<span>C</span><ul>\n<li><a href=\"calc\"><code>calc()</code></a></li>\n<li><a href=\"caption-side\"><code>caption-side</code></a></li>\n<li><a href=\"length#ch\"><code>ch</code></a></li>\n<li><a href=\"@font-feature-values/@character-variant\"><code>@character-variant (@font-feature-values)</code></a></li>\n<li><a href=\"@font-face/font-variant#character-variant()\"><code>character-variant()</code></a></li>\n<li><a href=\"@charset\"><code>@charset</code></a></li>\n<li><a href=\":checked\"><code>:checked { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\"circle\"><code>circle()</code></a></li>\n<li><a href=\"clear\"><code>clear</code></a></li>\n<li><a href=\"clip\"><code>clip</code></a></li>\n<li><a href=\"clip-path\"><code>clip-path</code></a></li>\n<li><a href=\"length#cm\"><code>cm</code></a></li>\n<li><a href=\"color_value\"><code>&lt;color&gt;</code></a></li>\n<li><a href=\"color\"><code>color</code></a></li>\n<li><a href=\"column-count\"><code>column-count</code></a></li>\n<li><a href=\"column-fill\"><code>column-fill</code></a></li>\n<li><a href=\"column-gap\"><code>column-gap</code></a></li>\n<li><a href=\"column-rule\"><code>column-rule</code></a></li>\n<li><a href=\"column-rule-color\"><code>column-rule-color</code></a></li>\n<li><a href=\"column-rule-style\"><code>column-rule-style</code></a></li>\n<li><a href=\"column-rule-width\"><code>column-rule-width</code></a></li>\n<li><a href=\"column-span\"><code>column-span</code></a></li>\n<li><a href=\"column-width\"><code>column-width</code></a></li>\n<li><a href=\"columns\"><code>columns</code></a></li>\n<li><a href=\"content\"><code>content</code></a></li>\n<li><a href=\"filter#contrast()\"><code>contrast()</code></a></li>\n<li><a href=\"counter\"><code>&lt;counter&gt;</code></a></li>\n<li><a href=\"counter-increment\"><code>counter-increment</code></a></li>\n<li><a href=\"counter-reset\"><code>counter-reset</code></a></li>\n<li><a href=\"@counter-style\"><code>@counter-style</code></a></li>\n<li><a href=\"cross-fade\"><code>cross-fade()</code></a></li>\n<li><a href=\"cubic-bezier\"><code>cubic-bezier()</code></a></li>\n<li><a href=\"cursor\"><code>cursor</code></a></li>\n<li><a href=\"custom-ident\"><code>&lt;custom-ident&gt;</code></a></li>\n</ul>\n<span>D</span><ul>\n<li><a href=\":default\"><code>:default { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\"angle#deg\"><code>deg</code></a></li>\n<li><a href=\":dir\"><code>:dir( ltr | rtl ) { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\"direction\"><code>direction</code></a></li>\n<li><a href=\":disabled\"><code>:disabled { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\"display\"><code>display</code></a></li>\n<li><a href=\"resolution#dpcm\"><code>dpcm</code></a></li>\n<li><a href=\"resolution#dpi\"><code>dpi</code></a></li>\n<li><a href=\"resolution#dppx\"><code>dppx</code></a></li>\n<li><a href=\"filter#drop-shadow()\"><code>drop-shadow()</code></a></li>\n</ul>\n<span>E</span><ul>\n<li><a href=\"element\"><code>element()</code></a></li>\n<li><a href=\"ellipse\"><code>ellipse()</code></a></li>\n<li><a href=\"length#em\"><code>em</code></a></li>\n<li><a href=\"empty-cells\"><code>empty-cells</code></a></li>\n<li><a href=\":empty\"><code>:empty { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\":enabled\"><code>:enabled { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\"length#ex\"><code>ex</code></a></li>\n</ul>\n<span>F</span><ul>\n<li><a href=\"@counter-style/fallback\"><code>fallback (@counter-style)</code></a></li>\n<li><a href=\"filter\"><code>filter</code></a></li>\n<li><a href=\":first-child\"><code>:first-child { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\"::first-letter\"><code>::first-letter (:first-letter)</code></a></li>\n<li><a href=\"::first-line\"><code>::first-line (:first-line)</code></a></li>\n<li><a href=\":first-of-type\"><code>:first-of-type { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\":first\"><code>:first { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\"flex\"><code>flex</code></a></li>\n<li><a href=\"flex-basis\"><code>flex-basis</code></a></li>\n<li><a href=\"flex-direction\"><code>flex-direction</code></a></li>\n<li><a href=\"flex-flow\"><code>flex-flow</code></a></li>\n<li><a href=\"flex-grow\"><code>flex-grow</code></a></li>\n<li><a href=\"flex-shrink\"><code>flex-shrink</code></a></li>\n<li><a href=\"flex-wrap\"><code>flex-wrap</code></a></li>\n<li><a href=\"float\"><code>float</code></a></li>\n<li><a href=\":focus\"><code>:focus { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\"font\"><code>font</code></a></li>\n<li><a href=\"@font-face\"><code>@font-face</code></a></li>\n<li><a href=\"font-family\"><code>font-family</code></a></li>\n<li><a href=\"@font-face/font-family\"><code>font-family (@font-face)</code></a></li>\n<li><a href=\"font-feature-settings\"><code>font-feature-settings</code></a></li>\n<li><a href=\"@font-face/font-feature-settings\"><code>font-feature-settings (@font-face)</code></a></li>\n<li><a href=\"@font-feature-values\"><code>@font-feature-values</code></a></li>\n<li><a href=\"font-kerning\"><code>font-kerning</code></a></li>\n<li><a href=\"font-language-override\"><code>font-language-override</code></a></li>\n<li><a href=\"font-size\"><code>font-size</code></a></li>\n<li><a href=\"font-size-adjust\"><code>font-size-adjust</code></a></li>\n<li><a href=\"font-stretch\"><code>font-stretch</code></a></li>\n<li><a href=\"@font-face/font-stretch\"><code>font-stretch (@font-face)</code></a></li>\n<li><a href=\"font-style\"><code>font-style</code></a></li>\n<li><a href=\"@font-face/font-style\"><code>font-style (@font-face)</code></a></li>\n<li><a href=\"font-synthesis\"><code>font-synthesis</code></a></li>\n<li><a href=\"font-variant\"><code>font-variant</code></a></li>\n<li><a href=\"@font-face/font-variant\"><code>font-variant (@font-face)</code></a></li>\n<li><a href=\"font-variant-alternates\"><code>font-variant-alternates</code></a></li>\n<li><a href=\"font-variant-caps\"><code>font-variant-caps</code></a></li>\n<li><a href=\"font-variant-east-asian\"><code>font-variant-east-asian</code></a></li>\n<li><a href=\"font-variant-ligatures\"><code>font-variant-ligatures</code></a></li>\n<li><a href=\"font-variant-numeric\"><code>font-variant-numeric</code></a></li>\n<li><a href=\"font-variant-position\"><code>font-variant-position</code></a></li>\n<li><a href=\"font-weight\"><code>font-weight</code></a></li>\n<li><a href=\"@font-face/font-weight\"><code>font-weight (@font-face)</code></a></li>\n<li><a href=\"@font-face/src#format()\"><code>format()</code></a></li>\n<li><a href=\"@font-face/format()\"><code>format() (@font-face)</code></a></li>\n<li><a href=\"frequency\"><code>&lt;frequency&gt;</code></a></li>\n<li><a href=\":fullscreen\"><code>:fullscreen { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n</ul>\n<span>G</span><ul>\n<li><a href=\"angle#grad\"><code>grad</code></a></li>\n<li><a href=\"gradient\"><code>&lt;gradient&gt;</code></a></li>\n<li><a href=\"filter#grayscale()\"><code>grayscale()</code></a></li>\n<li><a href=\"grid\"><code>grid</code></a></li>\n<li><a href=\"grid-area\"><code>grid-area</code></a></li>\n<li><a href=\"grid-auto-columns\"><code>grid-auto-columns</code></a></li>\n<li><a href=\"grid-auto-flow\"><code>grid-auto-flow</code></a></li>\n<li><a href=\"grid-auto-rows\"><code>grid-auto-rows</code></a></li>\n<li><a href=\"grid-column\"><code>grid-column</code></a></li>\n<li><a href=\"grid-column-end\"><code>grid-column-end</code></a></li>\n<li><a href=\"grid-column-gap\"><code>grid-column-gap</code></a></li>\n<li><a href=\"grid-column-start\"><code>grid-column-start</code></a></li>\n<li><a href=\"grid-gap\"><code>grid-gap</code></a></li>\n<li><a href=\"grid-row\"><code>grid-row</code></a></li>\n<li><a href=\"grid-row-end\"><code>grid-row-end</code></a></li>\n<li><a href=\"grid-row-gap\"><code>grid-row-gap</code></a></li>\n<li><a href=\"grid-row-start\"><code>grid-row-start</code></a></li>\n<li><a href=\"grid-template\"><code>grid-template</code></a></li>\n<li><a href=\"grid-template-areas\"><code>grid-template-areas</code></a></li>\n<li><a href=\"grid-template-columns\"><code>grid-template-columns</code></a></li>\n<li><a href=\"grid-template-rows\"><code>grid-template-rows</code></a></li>\n</ul>\n<span>H</span><ul>\n<li><a href=\"height\"><code>height</code></a></li>\n<li><a href=\"@viewport/height\"><code>height (@viewport)</code></a></li>\n<li><a href=\":hover\"><code>:hover { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\"color_value#hsl()\"><code>hsl()</code></a></li>\n<li><a href=\"color_value#hsla()\"><code>hsla()</code></a></li>\n<li><a href=\"filter#hue-rotate()\"><code>hue-rotate()</code></a></li>\n<li><a href=\"hyphens\"><code>hyphens</code></a></li>\n<li><a href=\"frequency#hz\"><code>hz</code></a></li>\n</ul>\n<span>I</span><ul>\n<li><a href=\"image\"><code>&lt;image&gt;</code></a></li>\n<li><a href=\"image#The_image()_functional_notation\"><code>image()</code></a></li>\n<li><a href=\"image-orientation\"><code>image-orientation</code></a></li>\n<li><a href=\"image-rendering\"><code>image-rendering</code></a></li>\n<li><a href=\"image-resolution\"><code>image-resolution</code></a></li>\n<li><a href=\"image-set\"><code>image-set()</code></a></li>\n<li><a href=\"ime-mode\"><code>ime-mode</code></a></li>\n<li><a href=\"@import\"><code>@import</code></a></li>\n<li><a href=\"length#in\"><code>in</code></a></li>\n<li><a href=\":in-range\"><code>:in-range { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\":indeterminate\"><code>:indeterminate { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\"inherit\"><code>inherit</code></a></li>\n<li><a href=\"initial\"><code>initial</code></a></li>\n<li><a href=\"inline-size\"><code>inline-size</code></a></li>\n<li><a href=\"inset\"><code>inset()</code></a></li>\n<li><a href=\"integer\"><code>&lt;integer&gt;</code></a></li>\n<li><a href=\":invalid\"><code>:invalid { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\"filter#invert()\"><code>invert()</code></a></li>\n<li><a href=\"isolation\"><code>isolation</code></a></li>\n</ul>\n<span>J</span><ul><li><a href=\"justify-content\"><code>justify-content</code></a></li></ul>\n<span>K</span><ul>\n<li><a href=\"@keyframes\"><code>@keyframes</code></a></li>\n<li><a href=\"frequency#khz\"><code>khz</code></a></li>\n</ul>\n<span>L</span><ul>\n<li><a href=\":lang\"><code>:lang( &lt;language-code&gt; ) { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\":last-child\"><code>:last-child { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\":last-of-type\"><code>:last-of-type { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\"left\"><code>left</code></a></li>\n<li><a href=\":left\"><code>:left { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\"length\"><code>&lt;length&gt;</code></a></li>\n<li><a href=\"letter-spacing\"><code>letter-spacing</code></a></li>\n<li><a href=\"line-break\"><code>line-break</code></a></li>\n<li><a href=\"line-height\"><code>line-height</code></a></li>\n<li><a href=\"linear-gradient\"><code>linear-gradient()</code></a></li>\n<li><a href=\":link\"><code>:link { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\"list-style\"><code>list-style</code></a></li>\n<li><a href=\"list-style-image\"><code>list-style-image</code></a></li>\n<li><a href=\"list-style-position\"><code>list-style-position</code></a></li>\n<li><a href=\"list-style-type\"><code>list-style-type</code></a></li>\n<li><a href=\"@font-face/src#local()\"><code>local()</code></a></li>\n</ul>\n<span>M</span><ul>\n<li><a href=\"margin\"><code>margin</code></a></li>\n<li><a href=\"margin-block-end\"><code>margin-block-end</code></a></li>\n<li><a href=\"margin-block-start\"><code>margin-block-start</code></a></li>\n<li><a href=\"margin-bottom\"><code>margin-bottom</code></a></li>\n<li><a href=\"margin-inline-end\"><code>margin-inline-end</code></a></li>\n<li><a href=\"margin-inline-start\"><code>margin-inline-start</code></a></li>\n<li><a href=\"margin-left\"><code>margin-left</code></a></li>\n<li><a href=\"margin-right\"><code>margin-right</code></a></li>\n<li><a href=\"margin-top\"><code>margin-top</code></a></li>\n<li><a href=\"mask\"><code>mask</code></a></li>\n<li><a href=\"mask-clip\"><code>mask-clip</code></a></li>\n<li><a href=\"mask-composite\"><code>mask-composite</code></a></li>\n<li><a href=\"mask-image\"><code>mask-image</code></a></li>\n<li><a href=\"mask-mode\"><code>mask-mode</code></a></li>\n<li><a href=\"mask-origin\"><code>mask-origin</code></a></li>\n<li><a href=\"mask-position\"><code>mask-position</code></a></li>\n<li><a href=\"mask-repeat\"><code>mask-repeat</code></a></li>\n<li><a href=\"mask-size\"><code>mask-size</code></a></li>\n<li><a href=\"mask-type\"><code>mask-type</code></a></li>\n<li><a href=\"transform-function#matrix()\"><code>matrix()</code></a></li>\n<li><a href=\"transform-function#matrix3d()\"><code>matrix3d()</code></a></li>\n<li><a href=\"max-block-size\"><code>max-block-size</code></a></li>\n<li><a href=\"max-height\"><code>max-height</code></a></li>\n<li><a href=\"@viewport/max-height\"><code>max-height (@viewport)</code></a></li>\n<li><a href=\"max-inline-size\"><code>max-inline-size</code></a></li>\n<li><a href=\"max-width\"><code>max-width</code></a></li>\n<li><a href=\"@viewport/max-width\"><code>max-width (@viewport)</code></a></li>\n<li><a href=\"@viewport/max-zoom\"><code>max-zoom (@viewport)</code></a></li>\n<li><a href=\"@media\"><code>@media</code></a></li>\n<li><a href=\"min-block-size\"><code>min-block-size</code></a></li>\n<li><a href=\"min-height\"><code>min-height</code></a></li>\n<li><a href=\"@viewport/min-height\"><code>min-height (@viewport)</code></a></li>\n<li><a href=\"min-inline-size\"><code>min-inline-size</code></a></li>\n<li><a href=\"min-width\"><code>min-width</code></a></li>\n<li><a href=\"@viewport/min-width\"><code>min-width (@viewport)</code></a></li>\n<li><a href=\"@viewport/min-zoom\"><code>min-zoom (@viewport)</code></a></li>\n<li><a href=\"minmax\"><code>minmax()</code></a></li>\n<li><a href=\"mix-blend-mode\"><code>mix-blend-mode</code></a></li>\n<li><a href=\"length#mm\"><code>mm</code></a></li>\n<li><a href=\"time#ms\"><code>ms</code></a></li>\n</ul>\n<span>N</span><ul>\n<li><a href=\"@namespace\"><code>@namespace</code></a></li>\n<li><a href=\"@counter-style/negative\"><code>negative (@counter-style)</code></a></li>\n<li><a href=\":not\"><code>:not( &lt;selector&gt;# ) { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\":nth-child\"><code>:nth-child( &lt;an-plus-b&gt; [ of &lt;selector&gt;# ]? ) { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\":nth-last-child\"><code>:nth-last-child( &lt;an-plus-b&gt; [ of &lt;selector&gt;# ]? ) { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\":nth-last-of-type\"><code>:nth-last-of-type( &lt;an-plus-b&gt; ) { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\":nth-of-type\"><code>:nth-of-type( &lt;an-plus-b&gt; ) { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\"number\"><code>&lt;number&gt;</code></a></li>\n</ul>\n<span>O</span><ul>\n<li><a href=\"object-fit\"><code>object-fit</code></a></li>\n<li><a href=\"object-position\"><code>object-position</code></a></li>\n<li><a href=\"offset-block-end\"><code>offset-block-end</code></a></li>\n<li><a href=\"offset-block-start\"><code>offset-block-start</code></a></li>\n<li><a href=\"offset-inline-end\"><code>offset-inline-end</code></a></li>\n<li><a href=\"offset-inline-start\"><code>offset-inline-start</code></a></li>\n<li><a href=\":only-child\"><code>:only-child { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\":only-of-type\"><code>:only-of-type { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\"opacity\"><code>opacity</code></a></li>\n<li><a href=\"filter#opacity()\"><code>opacity()</code></a></li>\n<li><a href=\":optional\"><code>:optional { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\"order\"><code>order</code></a></li>\n<li><a href=\"@viewport/orientation\"><code>orientation (@viewport)</code></a></li>\n<li><a href=\"@font-feature-values/@ornaments\"><code>@ornaments (@font-feature-values)</code></a></li>\n<li><a href=\"@font-face/font-variant#ornaments()\"><code>ornaments()</code></a></li>\n<li><a href=\"orphans\"><code>orphans</code></a></li>\n<li><a href=\":out-of-range\"><code>:out-of-range { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\"outline\"><code>outline</code></a></li>\n<li><a href=\"outline-color\"><code>outline-color</code></a></li>\n<li><a href=\"outline-offset\"><code>outline-offset</code></a></li>\n<li><a href=\"outline-style\"><code>outline-style</code></a></li>\n<li><a href=\"outline-width\"><code>outline-width</code></a></li>\n<li><a href=\"overflow\"><code>overflow</code></a></li>\n<li><a href=\"overflow-wrap\"><code>overflow-wrap</code></a></li>\n<li><a href=\"overflow-x\"><code>overflow-x</code></a></li>\n<li><a href=\"overflow-y\"><code>overflow-y</code></a></li>\n</ul>\n<span>P</span><ul>\n<li><a href=\"@counter-style/pad\"><code>pad (@counter-style)</code></a></li>\n<li><a href=\"padding\"><code>padding</code></a></li>\n<li><a href=\"padding-block-end\"><code>padding-block-end</code></a></li>\n<li><a href=\"padding-block-start\"><code>padding-block-start</code></a></li>\n<li><a href=\"padding-bottom\"><code>padding-bottom</code></a></li>\n<li><a href=\"padding-inline-end\"><code>padding-inline-end</code></a></li>\n<li><a href=\"padding-inline-start\"><code>padding-inline-start</code></a></li>\n<li><a href=\"padding-left\"><code>padding-left</code></a></li>\n<li><a href=\"padding-right\"><code>padding-right</code></a></li>\n<li><a href=\"padding-top\"><code>padding-top</code></a></li>\n<li><a href=\"@page\"><code>@page</code></a></li>\n<li><a href=\"page-break-after\"><code>page-break-after</code></a></li>\n<li><a href=\"page-break-before\"><code>page-break-before</code></a></li>\n<li><a href=\"page-break-inside\"><code>page-break-inside</code></a></li>\n<li><a href=\"length#pc\"><code>pc</code></a></li>\n<li><a href=\"percentage\"><code>&lt;percentage&gt;</code></a></li>\n<li><a href=\"perspective\"><code>perspective</code></a></li>\n<li><a href=\"transform-function#perspective()\"><code>perspective()</code></a></li>\n<li><a href=\"perspective-origin\"><code>perspective-origin</code></a></li>\n<li><a href=\"pointer-events\"><code>pointer-events</code></a></li>\n<li><a href=\"polygon\"><code>polygon()</code></a></li>\n<li><a href=\"position_value\"><code>&lt;position&gt;</code></a></li>\n<li><a href=\"position\"><code>position</code></a></li>\n<li><a href=\"@counter-style/prefix\"><code>prefix (@counter-style)</code></a></li>\n<li><a href=\"length#pt\"><code>pt</code></a></li>\n<li><a href=\"length#px\"><code>px</code></a></li>\n</ul>\n<span>Q</span><ul>\n<li><a href=\"length#q\"><code>q</code></a></li>\n<li><a href=\"quotes\"><code>quotes</code></a></li>\n</ul>\n<span>R</span><ul>\n<li><a href=\"angle#rad\"><code>rad</code></a></li>\n<li><a href=\"radial-gradient\"><code>radial-gradient()</code></a></li>\n<li><a href=\"@counter-style/range\"><code>range (@counter-style)</code></a></li>\n<li><a href=\"ratio\"><code>&lt;ratio&gt;</code></a></li>\n<li><a href=\":read-only\"><code>:read-only { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\":read-write\"><code>:read-write { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\"rect\"><code>rect()</code></a></li>\n<li><a href=\"length#rem\"><code>rem</code></a></li>\n<li><a href=\"repeating-linear-gradient\"><code>repeating-linear-gradient()</code></a></li>\n<li><a href=\"repeating-radial-gradient\"><code>repeating-radial-gradient()</code></a></li>\n<li><a href=\":required\"><code>:required { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\"resize\"><code>resize</code></a></li>\n<li><a href=\"resolution\"><code>&lt;resolution&gt;</code></a></li>\n<li><a href=\"revert\"><code>revert</code></a></li>\n<li><a href=\"color_value#rgb()\"><code>rgb()</code></a></li>\n<li><a href=\"color_value#rgba()\"><code>rgba()</code></a></li>\n<li><a href=\"right\"><code>right</code></a></li>\n<li><a href=\":right\"><code>:right { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\":root\"><code>:root { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\"transform-function#rotate()\"><code>rotate()</code></a></li>\n<li><a href=\"transform-function#rotate3d()\"><code>rotate3d()</code></a></li>\n<li><a href=\"transform-function#rotateX()\"><code>rotateX()</code></a></li>\n<li><a href=\"transform-function#rotateY()\"><code>rotateY()</code></a></li>\n<li><a href=\"transform-function#rotateZ()\"><code>rotateZ()</code></a></li>\n<li><a href=\"ruby-align\"><code>ruby-align</code></a></li>\n<li><a href=\"ruby-merge\"><code>ruby-merge</code></a></li>\n<li><a href=\"ruby-position\"><code>ruby-position</code></a></li>\n</ul>\n<span>S</span><ul>\n<li><a href=\"time#s\"><code>s</code></a></li>\n<li><a href=\"filter#saturate()\"><code>saturate()</code></a></li>\n<li><a href=\"transform-function#scale()\"><code>scale()</code></a></li>\n<li><a href=\"transform-function#scale3d()\"><code>scale3d()</code></a></li>\n<li><a href=\"transform-function#scaleX()\"><code>scaleX()</code></a></li>\n<li><a href=\"transform-function#scaleY()\"><code>scaleY()</code></a></li>\n<li><a href=\"transform-function#scaleZ()\"><code>scaleZ()</code></a></li>\n<li><a href=\":scope\"><code>:scope { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\"scroll-behavior\"><code>scroll-behavior</code></a></li>\n<li><a href=\"scroll-snap-coordinate\"><code>scroll-snap-coordinate</code></a></li>\n<li><a href=\"scroll-snap-destination\"><code>scroll-snap-destination</code></a></li>\n<li><a href=\"scroll-snap-type\"><code>scroll-snap-type</code></a></li>\n<li><a href=\"::selection\"><code>::selection</code></a></li>\n<li><a href=\"filter#sepia()\"><code>sepia()</code></a></li>\n<li><a href=\"shape\"><code>&lt;shape&gt;</code></a></li>\n<li><a href=\"shape-image-threshold\"><code>shape-image-threshold</code></a></li>\n<li><a href=\"shape-margin\"><code>shape-margin</code></a></li>\n<li><a href=\"shape-outside\"><code>shape-outside</code></a></li>\n<li><a href=\"transform-function#skew()\"><code>skew()</code></a></li>\n<li><a href=\"transform-function#skewX()\"><code>skewX()</code></a></li>\n<li><a href=\"transform-function#skewY()\"><code>skewY()</code></a></li>\n<li><a href=\"@counter-style/speak-as\"><code>speak-as (@counter-style)</code></a></li>\n<li><a href=\"@font-face/src\"><code>src (@font-face)</code></a></li>\n<li><a href=\"steps\"><code>steps()</code></a></li>\n<li><a href=\"string\"><code>&lt;string&gt;</code></a></li>\n<li><a href=\"@font-feature-values/@styleset\"><code>@styleset (@font-feature-values)</code></a></li>\n<li><a href=\"@font-face/font-variant#styleset()\"><code>styleset()</code></a></li>\n<li><a href=\"@font-feature-values/@stylistic\"><code>@stylistic (@font-feature-values)</code></a></li>\n<li><a href=\"@font-face/font-variant#stylistic()\"><code>stylistic()</code></a></li>\n<li><a href=\"@counter-style/suffix\"><code>suffix (@counter-style)</code></a></li>\n<li><a href=\"@supports\"><code>@supports</code></a></li>\n<li><a href=\"@font-feature-values/@swash\"><code>@swash (@font-feature-values)</code></a></li>\n<li><a href=\"@font-face/font-variant#swash()\"><code>swash()</code></a></li>\n<li><a href=\"@counter-style/symbols\"><code>symbols (@counter-style)</code></a></li>\n<li><a href=\"@counter-style/symbols\"><code>symbols()</code></a></li>\n<li><a href=\"@counter-style/system\"><code>system (@counter-style)</code></a></li>\n</ul>\n<span>T</span><ul>\n<li><a href=\"tab-size\"><code>tab-size</code></a></li>\n<li><a href=\"table-layout\"><code>table-layout</code></a></li>\n<li><a href=\":target\"><code>:target { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\"text-align\"><code>text-align</code></a></li>\n<li><a href=\"text-align-last\"><code>text-align-last</code></a></li>\n<li><a href=\"text-combine-upright\"><code>text-combine-upright</code></a></li>\n<li><a href=\"text-decoration\"><code>text-decoration</code></a></li>\n<li><a href=\"text-decoration-color\"><code>text-decoration-color</code></a></li>\n<li><a href=\"text-decoration-line\"><code>text-decoration-line</code></a></li>\n<li><a href=\"text-decoration-style\"><code>text-decoration-style</code></a></li>\n<li><a href=\"text-emphasis\"><code>text-emphasis</code></a></li>\n<li><a href=\"text-emphasis-color\"><code>text-emphasis-color</code></a></li>\n<li><a href=\"text-emphasis-position\"><code>text-emphasis-position</code></a></li>\n<li><a href=\"text-emphasis-style\"><code>text-emphasis-style</code></a></li>\n<li><a href=\"text-indent\"><code>text-indent</code></a></li>\n<li><a href=\"text-orientation\"><code>text-orientation</code></a></li>\n<li><a href=\"text-overflow\"><code>text-overflow</code></a></li>\n<li><a href=\"text-rendering\"><code>text-rendering</code></a></li>\n<li><a href=\"text-shadow\"><code>text-shadow</code></a></li>\n<li><a href=\"text-transform\"><code>text-transform</code></a></li>\n<li><a href=\"text-underline-position\"><code>text-underline-position</code></a></li>\n<li><a href=\"time\"><code>&lt;time&gt;</code></a></li>\n<li><a href=\"timing-function\"><code>&lt;timing-function&gt;</code></a></li>\n<li><a href=\"top\"><code>top</code></a></li>\n<li><a href=\"touch-action\"><code>touch-action</code></a></li>\n<li><a href=\"transform\"><code>transform</code></a></li>\n<li><a href=\"transform-box\"><code>transform-box</code></a></li>\n<li><a href=\"transform-function\"><code>&lt;transform-function&gt;</code></a></li>\n<li><a href=\"transform-origin\"><code>transform-origin</code></a></li>\n<li><a href=\"transform-style\"><code>transform-style</code></a></li>\n<li><a href=\"transition\"><code>transition</code></a></li>\n<li><a href=\"transition-delay\"><code>transition-delay</code></a></li>\n<li><a href=\"transition-duration\"><code>transition-duration</code></a></li>\n<li><a href=\"transition-property\"><code>transition-property</code></a></li>\n<li><a href=\"transition-timing-function\"><code>transition-timing-function</code></a></li>\n<li><a href=\"transform-function#translate()\"><code>translate()</code></a></li>\n<li><a href=\"transform-function#translate3d()\"><code>translate3d()</code></a></li>\n<li><a href=\"transform-function#translateX()\"><code>translateX()</code></a></li>\n<li><a href=\"transform-function#translateY()\"><code>translateY()</code></a></li>\n<li><a href=\"transform-function#translateZ()\"><code>translateZ()</code></a></li>\n<li><a href=\"angle#turn\"><code>turn</code></a></li>\n</ul>\n<span>U</span><ul>\n<li><a href=\"unicode-bidi\"><code>unicode-bidi</code></a></li>\n<li><a href=\"@font-face/unicode-range\"><code>unicode-range (@font-face)</code></a></li>\n<li><a href=\":unresolved\"><code>:unresolved { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\"unset\"><code>unset</code></a></li>\n<li><a href=\"url\"><code>&lt;url&gt;</code></a></li>\n<li><a href=\"url#The_url()_functional_notation\"><code>url()</code></a></li>\n<li><a href=\"user-ident\"><code>&lt;user-ident&gt;</code></a></li>\n<li><a href=\"@viewport/user-zoom\"><code>user-zoom (@viewport)</code></a></li>\n</ul>\n<span>V</span><ul>\n<li><a href=\":valid\"><code>:valid { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\"var()\"><code>var()</code></a></li>\n<li><a href=\"vertical-align\"><code>vertical-align</code></a></li>\n<li><a href=\"length#vh\"><code>vh</code></a></li>\n<li><a href=\"@viewport\"><code>@viewport</code></a></li>\n<li><a href=\"visibility\"><code>visibility</code></a></li>\n<li><a href=\":visited\"><code>:visited { &lt;var&gt;style properties&lt;/var&gt; }</code></a></li>\n<li><a href=\"length#vmax\"><code>vmax</code></a></li>\n<li><a href=\"length#vmin\"><code>vmin</code></a></li>\n<li><a href=\"length#vw\"><code>vw</code></a></li>\n</ul>\n<span>W</span><ul>\n<li><a href=\"white-space\"><code>white-space</code></a></li>\n<li><a href=\"widows\"><code>widows</code></a></li>\n<li><a href=\"width\"><code>width</code></a></li>\n<li><a href=\"@viewport/width\"><code>width (@viewport)</code></a></li>\n<li><a href=\"will-change\"><code>will-change</code></a></li>\n<li><a href=\"word-break\"><code>word-break</code></a></li>\n<li><a href=\"word-spacing\"><code>word-spacing</code></a></li>\n<li><a href=\"word-wrap\"><code>word-wrap</code></a></li>\n<li><a href=\"writing-mode\"><code>writing-mode</code></a></li>\n</ul>\n<span>Z</span><ul>\n<li><a href=\"z-index\"><code>z-index</code></a></li>\n<li><a href=\"@viewport/zoom\"><code>zoom (@viewport)</code></a></li>\n</ul>\n<span>Others</span><ul><li><a href=\"--*\"><code>--*</code></a></li></ul> </div></div> <div class=\"column-container\"> <div class=\"column-half\"> <h2 id=\"Selectors\">Selectors</h2> <ul> <li>Basic Selectors <ul> <li>\n<a href=\"type_selectors\">Type selectors</a><code> elementname</code>\n</li> <li>\n<a href=\"class_selectors\">Class selectors</a> <code>.classname</code>\n</li> <li>\n<a href=\"id_selectors\">ID selectors</a> <code>#idname</code>\n</li> <li>\n<a href=\"universal_selectors\">Universal selectors</a><code> * ns|* *|*</code>\n</li> <li>\n<a href=\"attribute_selectors\">Attribute selectors</a><code> [attr=value]</code>\n</li> </ul> </li> <li>Combinators <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_started/Selectors#Information_Selectors_based_on_relationships\">(more info)</a> <ul> <li>\n<a href=\"adjacent_sibling_selectors\">Adjacent sibling selectors</a> <code>A + B</code>\n</li> <li>\n<a href=\"general_sibling_selectors\">General sibling selectors</a> <code>A ~ B</code>\n</li> <li>\n<a href=\"child_selectors\">Child selectors</a> <code>A &gt; B</code>\n</li> <li>\n<a href=\"descendant_selectors\">Descendant selectors</a> <code>A B</code>\n</li> </ul> </li> <li id=\"pelm\">Pseudo-elements <a href=\"pseudo-elements\">(more info)</a> <ul> <li><a title=\"The CSS ::after pseudo-element matches a virtual last child of the selected element. It is typically used to add cosmetic content to an element by using the content CSS property. This element is inline by default.\" href=\"::after\"><code>::after</code></a></li> <li><a title=\"::before creates a pseudo-element that is the first child of the element matched. It is often used to add cosmetic content to an element by using the content property. This element is inline by default.\" href=\"::before\"><code>::before</code></a></li> <li><a title=\"The ::first-letter CSS pseudo-element selects the first letter of the first line of a block, if it is not preceded by any other content (such as images or inline tables) on its line.\" href=\"::first-letter\"><code>::first-letter</code></a></li> <li><a title=\"The ::first-line CSS pseudo-element applies styles only to the first line of an element. The amount of the text on the first line depends of numerous factors, like the width of the element, width of the document, and the font size of the text. As all pseudo-elements, ::first-line does not match any real HTML element.\" href=\"::first-line\"><code>::first-line</code></a></li> <li><a title=\"The ::selection CSS pseudo-element applies rules to the portion of a document that has been highlighted (e.g. selected with the mouse or another pointing device) by the user.\" href=\"::selection\"><code>::selection</code></a></li> <li><a title=\"Each element in the top layer's stack has a ::backdrop pseudo-element. This pseudo-element is a box rendered immediately below the element (and above the element below the element in the stack, if any), within the same top layer.\" href=\"::backdrop\"><code>::backdrop</code></a></li> <li>\n<a title=\"The ::placeholder CSS pseudo-element represents the placeholder text of a form element. This allows web developers and theme designers to customize the appearance of placeholder text.\" href=\"::placeholder\"><code>::placeholder</code></a> \n</li> <li>\n<a title=\"The ::marker CSS pseudo-element represents the marker box of a list item (e.g. the bullet point or item number).\" href=\"::marker\"><code>::marker</code></a> \n</li> <li>\n<a title=\"Editorial review completed.\" href=\"::spelling-error\"><code>::spelling-error</code></a> \n</li> <li>\n<a title=\"Editorial review completed.\" href=\"::grammar-error\"><code>::grammar-error</code></a> \n</li> </ul> </li> <li id=\"pcls\">Standard pseudo-classes <a href=\"pseudo-classes\">(more info)</a> <div class=\"index\"> <ul> <li><a title=\"The :active CSS pseudo-class matches when an element is being activated by the user. It allows the page to give a feedback that the activation has been detected by the browser. When interacting with a mouse, this is typically the time between the user presses the mouse button and releases it. The :active pseudo-class is also typically matched when using the keyboard tab key. It is frequently used on &lt;a&gt; and &lt;button&gt; HTML elements, but may not be limited to just those.\" href=\":active\"><code>:active</code></a></li> <li><a title=\"The :any() pseudo-class lets you quickly construct sets of similar selectors by establishing groups from which any of the included items will match. This is an alternative to having to repeat the entire selector for the one item that varies.\" href=\":any\"><code>:any</code></a></li> <li><a title='The :checked CSS pseudo-class selector represents any radio (&lt;input type=\"radio\"&gt;), checkbox (&lt;input type=\"checkbox\"&gt;) or option (&lt;option&gt; in a &lt;select&gt;) element that is checked or toggled to an on state. The user can change this state by clicking on the element, or selecting a different value, in which case the :checked pseudo-class no longer applies to this element, but will to the relevant one.' href=\":checked\"><code>:checked</code></a></li> <li><a title=\"The :default CSS pseudo-class represents any user interface element that is the default among a group of similar elements.\" href=\":default\"><code>:default</code></a></li> <li><a title=\"The documentation about this has not yet been written; please consider contributing!\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/:dir\"><code>:dir()</code></a></li> <li><a title=\"The :disabled CSS pseudo-class represents any disabled element. An element is disabled if it can't be activated (e.g. selected, clicked on or accept text input) or accept focus. The element also has an enabled state, in which it can be activated or accept focus.\" href=\":disabled\"><code>:disabled</code></a></li> <li><a title=\"The :empty pseudo-class represents any element that has no children at all. Only element nodes and text (including whitespace) are considered. Comments or processing instructions do not affect whether an element is considered empty or not.\" href=\":empty\"><code>:empty</code></a></li> <li><a title=\"The :enabled CSS pseudo-class represents any enabled element. An element is enabled if it can be activated (e.g. selected, clicked on or accept text input) or accept focus. The element also has an disabled state, in which it can't be activated or accept focus.\" href=\":enabled\"><code>:enabled</code></a></li> <li><a title=\"The :first @page CSS pseudo-class describes the styling of the first page when printing a document.\" href=\":first\"><code>:first</code></a></li> <li><a title=\"The :first-child CSS pseudo-class represents any element that is the first child element of its parent.\" href=\":first-child\"><code>:first-child</code></a></li> <li><a title=\"The :first-of-type CSS pseudo-class represents the first sibling of its type in the list of children of its parent element.\" href=\":first-of-type\"><code>:first-of-type</code></a></li> <li><a title=\"The :fullscreen CSS pseudo-class applies to any element that's currently being displayed in full-screen mode. It selects not only to the top level element, but to the whole stack of elements that appears.\" href=\":fullscreen\"><code>:fullscreen</code></a></li> <li><a title=\"The :focus CSS pseudo-class is applied when an element has received focus, either from the user selecting it with the use of a keyboard or by activating with the mouse (e.g. a form input).\" href=\":focus\"><code>:focus</code></a></li> <li><a title=\"The :hover CSS pseudo-class matches when the user designates an element with a pointing device, but does not necessarily activate it. This style may be overridden by any other link-related pseudo-classes, that is :link, :visited, and :active, appearing in subsequent rules. In order to style appropriately links, you need to put the :hover rule after the :link and :visited rules but before the :active one, as defined by the LVHA-order: :link — :visited — :hover — :active.\" href=\":hover\"><code>:hover</code></a></li> <li><a title=\"The :indeterminate CSS pseudo-class represents:\" href=\":indeterminate\"><code>:indeterminate</code></a></li> <li><a title=\"The :in-range CSS pseudo-class matches when an element has its value attribute inside the specified range limitations for this element. It allows the page to give a feedback that the value currently defined using the element is inside the range limits.\" href=\":in-range\"><code>:in-range</code></a></li> <li><a title=\"The :invalid CSS pseudo-class represents any &lt;input&gt; or &lt;form&gt; element whose content fails to validate according to the input's type setting. This allows you to easily have invalid fields adopt an appearance that helps the user identify and correct errors.\" href=\":invalid\"><code>:invalid</code></a></li> <li><a title=\"The documentation about this has not yet been written; please consider contributing!\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/:lang\"><code>:lang()</code></a></li> <li><a title=\"The :last-child CSS pseudo-class represents any element that is the last child element of its parent.\" href=\":last-child\"><code>:last-child</code></a></li> <li><a title=\"The :last-of-type CSS pseudo-class represents the last sibling with the given element name in the list of children of its parent element.\" href=\":last-of-type\"><code>:last-of-type</code></a></li> <li><a title=\"The :left CSS page pseudo-class matches any left page when printing a page. It allows to describe the styling of left-side pages.\" href=\":left\"><code>:left</code></a></li> <li><a title=\"The :link CSS pseudo-class lets you select links inside elements. This will select any link which has not yet been visited, even those already styled using selector with other link-related pseudo-classes like :hover, :active or :visited. In order to appropriately style links, you need to put the :link rule before the other ones, as defined by the LVHA-order: :link — :visited — :hover — :active. The :focus pseudo-class is usually placed right before or right after :hover, depending on the expected effect.\" href=\":link\"><code>:link</code></a></li> <li><a title=\"The documentation about this has not yet been written; please consider contributing!\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/:not\"><code>:not()</code></a></li> <li><a title=\"The documentation about this has not yet been written; please consider contributing!\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-child\"><code>:nth-child()</code></a></li> <li><a title=\"The documentation about this has not yet been written; please consider contributing!\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-last-child\"><code>:nth-last-child()</code></a></li> <li><a title=\"The documentation about this has not yet been written; please consider contributing!\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-last-of-type\"><code>:nth-last-of-type()</code></a></li> <li><a title=\"The documentation about this has not yet been written; please consider contributing!\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-of-type\"><code>:nth-of-type()</code></a></li> <li><a title=\"The :only-child CSS pseudo-class represents any element which is the only child of its parent. This is the same as :first-child:last-child or :nth-child(1):nth-last-child(1), but with a lower specificity.\" href=\":only-child\"><code>:only-child</code></a></li> <li><a title=\"The :only-of-type CSS pseudo-class represents any element that has no siblings of the given type.\" href=\":only-of-type\"><code>:only-of-type</code></a></li> <li><a title=\"The :optional CSS pseudo-class represents any &lt;input&gt; element that does not have the required attribute set on it. This allows forms to easily indicate optional fields, and to style them accordingly.\" href=\":optional\"><code>:optional</code></a></li> <li><a title=\"The :out-of-range CSS pseudo-class matches when an element has its value attribute outside the specified range limitations for this element. It allows the page to give a feedback that the value currently defined using the element is outside the range limits. A value can be outside of a range if it is either smaller or larger than maximum and minimum set values.\" href=\":out-of-range\"><code>:out-of-range</code></a></li> <li><a title=\"The :read-only CSS pseudo-class matches when an element is not writable by the user.\" href=\":read-only\"><code>:read-only</code></a></li> <li><a title=\"The :read-write CSS pseudo-class matches when an element is editable by user like text input elements.\" href=\":read-write\"><code>:read-write</code></a></li> <li><a title=\"The :required CSS pseudo-class represents any &lt;input&gt; element that has the required attribute set on it. This allows forms to easily indicate which fields must have valid data before the form can be submitted.\" href=\":required\"><code>:required</code></a></li> <li><a title=\"The :right CSS page pseudo-class matches any right page when printing a page. It allows to describe the styling of right-side page.\" href=\":right\"><code>:right</code></a></li> <li><a title=\"The :root CSS  pseudo-class matches the root element of a tree representing the document. Applied to HTML, :root represents the &lt;html&gt; element and is identical to the selector html, except that its specificity is higher.\" href=\":root\"><code>:root</code></a></li> <li><a title=\"The :scope CSS  pseudo-class matches the elements that are a reference point for selectors to match against. In HTML, a new reference point can be defined using the scoped attribute of the &lt;style&gt;. If no such attribute is used on an HTML page, the reference point is the &lt;html&gt; element.\" href=\":scope\"><code>:scope</code></a></li> <li><a title=\"The :target pseudo-class represents the unique element, if any, with an id matching the fragment identifier of the URI of the document.\" href=\":target\"><code>:target</code></a></li> <li><a title=\"The :valid CSS pseudo-class represents any &lt;input&gt; or &lt;form&gt; element whose content validates correctly according to the input's type setting. This allows to easily make valid fields adopt an appearance that helps the user confirm that their data is formatted properly.\" href=\":valid\"><code>:valid</code></a></li> <li><a title=\"The :visited CSS pseudo-class lets you select only links that have been visited. This style may be overridden by any other link-related pseudo-classes, that is :link, :hover, and :active, appearing in subsequent rules. In order to style appropriately links, you need to put the :visited rule after the :link rule but before the other ones, defined in the LVHA-order: :link — :visited — :hover — :active.\" href=\":visited\"><code>:visited</code></a></li> </ul> </div> </li> </ul> <p>A complete <a href=\"https://www.w3.org/TR/selectors/#selectors\">list of selectors</a> in the Selectors Level 3 specification.</p> <h2 id=\"CSS3_Tutorials\">CSS3 Tutorials</h2> <p>These small how-to pages describe new technologies appeared in CSS3, or in CSS2.1 but with low support until recently:</p> <ul> <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Media_queries\">Using CSS media queries</a></li> <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Counters\">Using CSS counters</a></li> <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Using_CSS_gradients\">Using CSS gradients</a></li> <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Using_CSS_transforms\">Using CSS transforms</a></li> <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Using_CSS_animations\">Using CSS animations</a></li> <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Using_CSS_transitions\">Using CSS transitions</a></li> <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Using_multiple_backgrounds\">Using CSS multiple backgrounds</a></li> <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Flexible_boxes\">Using CSS flexible boxes</a></li> <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Using_multi-column_layouts\">Using CSS multi-column layouts</a></li> </ul> <h2 id=\"Concepts\">Concepts</h2> <ul> <li><a href=\"syntax\">CSS syntax</a></li> <li><a href=\"at-rule\">At-rule</a></li> <li><a href=\"comments\">Comments</a></li> <li><a href=\"specificity\">Specificity</a></li> <li><a href=\"initial_value\">Initial value</a></li> <li><a href=\"inheritance\">Inheritance</a></li> <li><a href=\"specified_value\">Specified value</a></li> <li><a href=\"computed_value\">Computed value</a></li> <li><a href=\"used_value\">Used value</a></li> <li><a href=\"actual_value\">Actual value</a></li> <li><a href=\"resolved_value\">Resolved value</a></li> <li><a href=\"box_model\">Box model</a></li> <li><a href=\"replaced_element\">Replaced element</a></li> <li><a href=\"value_definition_syntax\">Value definition syntax</a></li> <li><a href=\"shorthand_properties\">Shorthand properties</a></li> <li><a href=\"css_box_model/mastering_margin_collapsing\">Mastering margin collapsing</a></li> <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Visual_formatting_model\">Visual formatting model</a></li> <li><a href=\"layout_mode\">Layout mode</a></li> </ul> <h2 id=\"DOM-CSS_CSSOM\">DOM-CSS / CSSOM</h2> <p>Major object types:</p> <ul> <li>document . <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/styleSheets\">styleSheets</a>\n</li> <li>styleSheets[x] . <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/CSSRuleList\">cssRules</a>\n</li> <li>cssRules[x] . <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/CSSRule/cssText\">cssText</a> (selector &amp; style)</li> <li>cssRules[x] . <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleRule/selectorText\">selectorText</a>\n</li> <li>elem . <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style\">style</a>\n</li> <li>elem . style . <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/cssText\">cssText</a> (just style)</li> <li>elem . <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/className\">className</a>\n</li> <li>elem . <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/classList\">classList</a>\n</li> </ul> <p>Important methods:</p> <ul> <li><a title=\"CSSStyleSheet.insertRule() method inserts a new style rule into the current style sheet. (with some restrictions)\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleSheet/insertRule\"><code>CSSStyleSheet.insertRule</code></a></li> <li><a title=\"The CSSStyleSheet.deleteRule() method removes a style rule from the current style sheet object.\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleSheet/deleteRule\"><code>CSSStyleSheet.deleteRule</code></a></li> </ul> </div> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Reference$edit\" class=\"_attribution-link\">Edit this page on MDN</a>\n  </p>\n</div>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2016 Mozilla Contributors<br>Licensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.<br>\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Reference\" class=\"_attribution-link\">https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Reference</a>\n  </p>\n</div>\n"}