{"css_user_interface/using_url_values_for_the_cursor_property":"<h1>CSS User Interface: Using URL values for the cursor property</h1><p><a title=\"Gecko\" href=\"https://developer.mozilla.org/en-US/docs/Gecko\">Gecko</a> 1.8 (<a title=\"Firefox_1.5_for_developers\" href=\"https://developer.mozilla.org/en-US/docs/Firefox_1.5_for_developers\">Firefox 1.5</a>, SeaMonkey 1.0) supports URL values for the CSS <a title=\"The cursor CSS property specifies the mouse cursor displayed when the mouse pointer is over an element.\" href=\"../cursor\"><code>cursor</code></a> property on Windows and Linux. Mac support was added in Gecko 2 (Firefox 4). This allows specifying arbitrary images as mouse cursors — any image format supported by Gecko can be used.</p> <h3 id=\"Syntax\">Syntax</h3> <p>The basic (CSS 2.1) syntax for this property is:</p> <pre>cursor:  [&lt;url&gt;,]* keyword</pre> <p>This means that zero or more URLs may be specified (comma-separated), which <strong>must</strong> be followed by one of the keywords defined in the CSS specification, such as<code> auto </code>or<code> pointer</code>.</p> <p>For example, the following value would be allowed:</p> <pre class=\"plain\">cursor:  url(foo.cur), url(http://www.example.com/bar.gif), auto;</pre> <p>This will first try loading <em>foo.cur</em>. If that file does not exist or is not valid for some other reason, <em>bar.gif</em> is tried, and if that can't be used either,<code> auto </code>will be used.</p> <p>Support for the CSS 3 syntax for cursor values got added in Gecko 1.8 (Firefox 1.5):</p> <pre>cursor:  [&lt;uri&gt; [&lt;x&gt; &lt;y&gt;]?,]* keyword</pre> <p>It allows specifying the coordinates of the cursor's hotspot, which will be clamped to the boundaries of the cursor image. If none are specified, the coordinates of the hotspot are read from the file itself (for CUR and XBM files) or are set to the top left corner of the image. An example of the CSS3 syntax is:</p> <pre>.foo  {\n    cursor:  auto;\n    cursor:  url(cursor1.png) 4 12, auto;\n}\n\n.bar  {\n    cursor:  pointer;\n    cursor:  url(cursor2.png) 2 2, pointer;\n} \n\n/* fallsback onto 'auto' and 'pointer' in IE, but must be set separately */\n</pre> <p>The first number is the x-coordinate, and the second number is the y-coordinate. The example will set the hotspot to be the pixel at (4,12) from the top left (0,0).</p> <h3 id=\"Limitations\">Limitations</h3> <p>All image formats supported by Gecko can be used. This means that you can use PNG, GIF, JPG, BMP, CUR, etc. images. ANI is not supported. An animated PNG or GIF will not create an animated cursor.</p> <div class=\"note\"> <p><strong>Note:</strong> Starting with Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1), Gecko also supports the SVG image format for cursors. However, the SVG image must contain a length-valued (not percentage-valued) height and width on its root <code>SVG</code> node. JavaScript, CSS animation, and declarative SMIL inside an SVG image are ignored; you can't use SVG to create an animated cursor, for example.</p> </div> <p>In Gecko (Firefox) the limit of the cursor size is 128×128px. Larger cursor images are ignored. However, you should limit yourself to the size 32×32 for maximum compatibility with operating systems and platforms.</p> <p>(Due to a bug in Gecko 1.9.2-1.9.2.6, Firefox 3.6-3.6.6 on Windows limits to 32x32px. This is fixed in later versions.)</p> <p>Translucent cursors are not supported on Windows releases earlier than XP. This is a limitation of the operating system. Transparency works on all platforms.</p> <p>URL values as cursors are supported in Windows, OS/2, and Linux (when using GTK+ 2.4 or better) releases of Mozilla. Mac OS X support was added with Gecko 2 (Firefox 4).</p> <h3 id=\"Compatibility_with_other_browsers\">Compatibility with other browsers</h3> <p>Microsoft Internet Explorer 6.0 also supports URI values for the<code> cursor </code>property. However:</p> <ul> <li>IE only supports CUR and ANI as formats.</li> <li>IE doesn't support the CSS 3 syntax with x- and y-coordinates. The cursor image, and the rest of the property, are ignored.</li> </ul> <table class=\"standard-table\"> <tbody> <tr> <th>Browser</th> <th>Lowest version</th> <th>formats (e.g.)</th> <th>x-y-coordinates</th> </tr> <tr> <td>Internet Explorer</td> <td><strong>6.0</strong></td> <td><code>.cur | .ani</code></td> <td>---</td> </tr> <tr> <td>Firefox (Gecko), Windows and Linux</td> <td>\n<strong>1.5</strong> (1.8)</td> <td><code>.cur | .png | .gif | .jpg</code></td> <td>1.5 (1.8)</td> </tr> <tr> <td>Firefox (Gecko)</td> <td>\n<strong>4.0</strong> (2.0)</td> <td><code>.cur | .png | .gif | .jpg | .svg</code></td> <td>(Gecko 2.0)</td> </tr> <tr> <td>Opera</td> <td>---</td> <td>---</td> <td>---</td> </tr> <tr> <td rowspan=\"2\">Safari (Webkit)</td> <td>\n<strong>3.0</strong> (522-523)</td> <td><code>.cur | .png | .gif | .jpg</code></td> <td rowspan=\"2\">3.0 (522-523)</td> </tr> <tr> <td colspan=\"2\">Since OS X 10.5 supports Safari (Mac)<code> .cur </code>files</td> </tr> </tbody> </table> <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_User_Interface/Using_URL_values_for_the_cursor_property$edit\" class=\"_attribution-link\">Edit this page on MDN</a>\n  </p>\n</div>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2016 Mozilla Contributors<br>Licensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.<br>\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_User_Interface/Using_URL_values_for_the_cursor_property\" class=\"_attribution-link\">https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_User_Interface/Using_URL_values_for_the_cursor_property</a>\n  </p>\n</div>\n","css_images":"<h1>CSS Images</h1> <p><strong>CSS Images</strong> is a module of CSS that defines what types of images can be used (the <a title=\"The &lt;image&gt; CSS data type represents a 2D image. There are two kinds of images in CSS: plain static images, often referenced using a URL, and dynamically-generated images like gradients or representations of parts of the tree.\" href=\"image\"><code>&lt;image&gt;</code></a> type, containing URLs, gradients and other types of images), how to resize them and how they, and other replaced content, interact with the different layout models.</p> <h2 id=\"Reference\">Reference</h2> <h3 id=\"Properties\">Properties</h3> <div class=\"index\"> <ul> <li><a title=\"The image-orientation CSS property describes how to correct the default orientation of an image.\" href=\"image-orientation\"><code>image-orientation</code></a></li> <li><a title=\"The image-rendering CSS property provides a hint to the browser about the algorithm it should use to scale images. It applies to the element itself as well as any images supplied in other properties for the element. It has no effect on non-scaled images.\" href=\"image-rendering\"><code>image-rendering</code></a></li> <li><a title=\"The object-fit CSS property specifies how the contents of a replaced element should be fitted to the box established by its used height and width.\" href=\"object-fit\"><code>object-fit</code></a></li> <li><a title=\"The object-position property determines the alignment of the replaced element inside its box.\" href=\"object-position\"><code>object-position</code></a></li> </ul> </div> <h3 id=\"Functions\">Functions</h3> <div class=\"index\"> <ul> <li><a title=\"The documentation about this has not yet been written; please consider contributing!\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/linear-gradient\"><code>linear-gradient()</code></a></li> <li><a title=\"The documentation about this has not yet been written; please consider contributing!\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/radial-gradient\"><code>radial-gradient()</code></a></li> <li><a title=\"The documentation about this has not yet been written; please consider contributing!\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/repeating-linear-gradient\"><code>repeating-linear-gradient()</code></a></li> <li><a title=\"The documentation about this has not yet been written; please consider contributing!\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/repeating-radial-gradient\"><code>repeating-radial-gradient()</code></a></li> <li><a title=\"The documentation about this has not yet been written; please consider contributing!\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/element\"><code>element()</code></a></li> </ul> </div> <h3 id=\"Data_types\">Data types</h3> <div class=\"index\"> <ul> <li><a title=\"The &lt;image&gt; CSS data type represents a 2D image. There are two kinds of images in CSS: plain static images, often referenced using a URL, and dynamically-generated images like gradients or representations of parts of the tree.\" href=\"image\"><code>&lt;image&gt;</code></a></li> <li><a title=\"The documentation about this has not yet been written; please consider contributing!\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/uri\"><code>&lt;uri&gt;</code></a></li> </ul> </div> <h2 id=\"Guides\">Guides</h2> <dl> <dt><a href=\"css_images/using_css_gradients\">Using CSS gradients</a></dt> <dd>Presents a specific type of CSS images, <em>gradients</em>, and how to create and use these.</dd> <dt><a href=\"css_images/implementing_image_sprites_in_css\">Implementing image sprites in CSS</a></dt> <dd>Describes the common technique grouping several images in one single document to save download requests and speed up the availability of a page.</dd> </dl> <h2 id=\"Specifications\">Specifications</h2> <table class=\"standard-table\"> <thead> <tr> <th scope=\"col\">Specification</th> <th scope=\"col\">Status</th> <th scope=\"col\">Comment</th> </tr> </thead> <tbody> <tr> <td><a title=\"The 'CSS Image Values and Replaced Content Module Level 4' specification\" hreflang=\"en\" class=\"external\" lang=\"en\" href=\"https://drafts.csswg.org/css-images-4/\">CSS Image Values and Replaced Content Module Level 4</a></td> <td><span class=\"spec-WD\">Working Draft</span></td> <td> </td> </tr> <tr> <td><a title=\"The 'CSS Image Values and Replaced Content Module Level 3' specification\" hreflang=\"en\" class=\"external\" lang=\"en\" href=\"https://drafts.csswg.org/css-images-3/\">CSS Image Values and Replaced Content Module Level 3</a></td> <td><span class=\"spec-CR\">Candidate Recommendation</span></td> <td> </td> </tr> <tr> <td><a hreflang=\"en\" class=\"external\" lang=\"en\" href=\"https://compat.spec.whatwg.org#css-%3Cimage%3E-type\">Web Compatibility Standard<br><small lang=\"en-US\">The definition of 'CSS Gradients' in that specification.</small></a></td> <td><span class=\"spec-Living\">Living Standard</span></td> <td>Standardizes the <code>-webkit</code> prefixed gradient value functions</td> </tr> <tr> <td><a hreflang=\"en\" class=\"external\" lang=\"en\" href=\"https://drafts.csswg.org/css-values-3/#urls\">CSS Values and Units Module Level 3<br><small lang=\"en-US\">The definition of '&lt;url&gt;' in that specification.</small></a></td> <td><span class=\"spec-CR\">Candidate Recommendation</span></td> <td> </td> </tr> <tr> <td><a hreflang=\"en\" class=\"external\" lang=\"en\" href=\"http://www.w3.org/TR/CSS2/syndata.html#uri\">CSS Level 2 (Revision 1)<br><small lang=\"en-US\">The definition of '&lt;uri&gt;' in that specification.</small></a></td> <td><span class=\"spec-REC\">Recommendation</span></td> <td> </td> </tr> <tr> <td><a hreflang=\"en\" class=\"external\" lang=\"en\" href=\"http://www.w3.org/TR/CSS1/#url\">CSS Level 1<br><small lang=\"en-US\">The definition of '&lt;url&gt;' in that specification.</small></a></td> <td><span class=\"spec-REC\">Recommendation</span></td> <td>Initial definition</td> </tr> </tbody> </table> <h2 id=\"Browser_compatibility\">Browser compatibility</h2>  <div id=\"compat-desktop\"> <table class=\"compat-table\"> <tbody> <tr> <th>Feature</th> <th>Chrome</th> <th>Firefox (Gecko)</th> <th>Internet Explorer</th> <th>Opera</th> <th>Safari (WebKit)</th> </tr> <tr> <td>Basic support</td> <td>1.0</td> <td>1.0 (1.7 or earlier)</td> <td><span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span></td> <td><span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span></td> <td><span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span></td> </tr> </tbody> </table> </div> <div id=\"compat-mobile\"> <table class=\"compat-table\"> <tbody> <tr> <th>Feature</th> <th>Android</th> <th>Firefox Mobile (Gecko)</th> <th>IE Mobile</th> <th>Opera Mobile</th> <th>Safari Mobile</th> </tr> <tr> <td>Basic support</td> <td>1.0</td> <td>1.0 (1)</td> <td><span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span></td> <td><span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span></td> <td><span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span></td> </tr> </tbody> </table> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Images$edit\" class=\"_attribution-link\">Edit this page on MDN</a>\n  </p>\n</div>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2016 Mozilla Contributors<br>Licensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.<br>\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Images\" class=\"_attribution-link\">https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Images</a>\n  </p>\n</div>\n","css_images/implementing_image_sprites_in_css":"<h1>CSS Images: Implementing image sprites in CSS</h1> <p>Image sprites are used in numerous web apps where multiple images are used. Rather than include each image as a separate image file, it is much more memory and bandwidth-friendly to send them as a single image, so the number of HTTP requests is reduced.</p> <h2 id=\"Implementation\">Implementation</h2> <p>Suppose an image is given to every item with class <code>toolbtn</code>:</p> <pre data-language=\"css\">.toolbtn {\n  background: url(myfile.png);\n  display: inline-block;\n  height: 20px;\n  width: 20px;\n}</pre> <p>A background position can be added either as two x, y values after the <a title=\"The documentation about this has not yet been written; please consider contributing!\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/url()\"><code>url()</code></a> in the background, or as <a title=\"The background-position CSS property sets the initial position, relative to the background position layer defined by background-origin for each defined background image.\" href=\"../background-position\"><code>background-position</code></a>. For example:</p> <pre data-language=\"css\">#btn1 {\n  background-position: -20px 0px;\n}\n\n#btn2 {\n  background-position: -40px 0px;\n}</pre> <p>This would move the element with the ID 'btn1' 20 pixels to the left and the element with the ID 'btn2' 40 pixels to the left (assuming they have the class <code>toolbtn</code> assigned and are affected by the image rule above).</p> <p>Similarly, you can also make hover states with:</p> <pre data-language=\"css\">#btn:hover {\n  background-position: <var>&lt;pixels shifted right&gt;</var>px <var>&lt;pixels shifted down&gt;</var>px;\n}</pre> <h2 id=\"See_also\">See also</h2> <p><a href=\"http://css-tricks.com/snippets/css/perfect-css-sprite-sliding-doors-button/\">Full working demo at CSS Tricks</a></p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Images/Implementing_image_sprites_in_CSS$edit\" class=\"_attribution-link\">Edit this page on MDN</a>\n  </p>\n</div>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2016 Mozilla Contributors<br>Licensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.<br>\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Images/Implementing_image_sprites_in_CSS\" class=\"_attribution-link\">https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Images/Implementing_image_sprites_in_CSS</a>\n  </p>\n</div>\n","css_grid_layout":"<h1>CSS Grid Layout</h1> <div class=\"note\"> <p>CSS Grid is still an experimental technology - most browsers require a flag to be enabled to make use of this API. Make sure to reference the compatibility table for each property and function for more information.</p> </div> <p><strong>CSS Grid layout</strong> contains features targeted at web application authors. The grid can be used to achieve many different layouts. It excels at dividing up space for major regions of an application or defining the relationship in terms of size, position and layer between parts of a control built from HTML primitives.</p> <p>Like tables, grid layout enables an author to align elements into columns and rows, but unlike tables, grid layout doesn’t have content structure, and thus enables a wide variety of layouts which is not possible in tables. For example, the children of a grid container can position themselves in a way such that they overlap and layer similar to positioned elements.</p> <h2 name=\"Basic_Example\" id=\"Basic_Example\">Basic Example</h2> <h3 id=\"HTML_Content\">HTML Content</h3> <pre data-language=\"html\">&lt;div class=\"wrapper\"&gt;\n  &lt;div class=\"box a\"&gt;a&lt;/div&gt;\n  &lt;div class=\"box b\"&gt;b&lt;/div&gt;\n  &lt;div class=\"box c\"&gt;c&lt;/div&gt;\n  &lt;div class=\"box d\"&gt;d&lt;/div&gt;\n  &lt;div class=\"box e\"&gt;e&lt;/div&gt;\n  &lt;div class=\"box f\"&gt;f&lt;/div&gt;\n&lt;/div&gt;</pre> <h3 id=\"CSS_Content\">CSS Content</h3> <pre data-language=\"css\"><span class=\"cm-qualifier\">.wrapper</span> { \n<span class=\"cm-property\">  display</span>: <span class=\"cm-variable\">grid</span>; \n  <span class=\"cm-property\">grid-template-columns</span>: <span class=\"cm-number\">100px</span> <span class=\"cm-number\">100px</span> <span class=\"cm-number\">100px</span>; \n<span class=\"cm-error cm-property\">  grid-gap</span>: <span class=\"cm-number\">10px</span>; \n<span class=\"cm-property\">  background-color</span>: <span class=\"cm-atom\">#fff</span>; \n<span class=\"cm-property\">  color</span>: <span class=\"cm-atom\">#444</span>; \n} \n\n<span class=\"cm-qualifier\">.box</span> { \n<span class=\"cm-property\">  background-color</span>: <span class=\"cm-atom\">#444</span>; \n<span class=\"cm-property\">  color</span>: <span class=\"cm-atom\">#fff</span>; \n<span class=\"cm-property\">  border-radius</span>: <span class=\"cm-number\">5px</span>; \n<span class=\"cm-property\">  padding</span>: <span class=\"cm-number\">20px</span>; \n<span class=\"cm-property\">  font-size</span>: <span class=\"cm-number\">150%</span>; \n}</pre> <h2 id=\"Reference\">Reference</h2> <h3 id=\"CSS_Properties\">CSS Properties</h3> <div class=\"index\"> <ul> <li><a href=\"grid-template-columns\" title=\"The grid-template-columns CSS property defines the line names and track sizing functions of the grid's columns.\"><code>grid-template-columns</code></a></li> <li><a href=\"grid-template-rows\" title=\"The grid-template-rows CSS property defines the line names and track sizing functions of the grid's rows.\"><code>grid-template-rows</code></a></li> <li><a href=\"grid-template-areas\" title=\"The grid-template-areas CSS property specifies named grid areas.\"><code>grid-template-areas</code></a></li> <li><a href=\"grid-template\" title=\"The grid-template CSS property is a shorthand property for defining grid columns, rows and areas.\"><code>grid-template</code></a></li> <li><a href=\"grid-auto-columns\" title=\"The grid-auto-columns CSS property specifies the size of an implicitly-created grid column track.\"><code>grid-auto-columns</code></a></li> <li><a href=\"grid-auto-rows\" title=\"The grid-auto-rows CSS property specifies the size of an implicitly-created grid row track.\"><code>grid-auto-rows</code></a></li> <li><a href=\"grid-auto-flow\" title=\"Editorial review completed.\"><code>grid-auto-flow</code></a></li> <li><a href=\"grid\" title=\"The grid CSS property is a shorthand property that sets all of the explicit grid properties (grid-template-rows, grid-template-columns, and grid-template-areas), all the implicit grid properties (grid-auto-rows, grid-auto-columns, and grid-auto-flow), and the gutter properties (grid-column-gap and grid-row-gap) in a single declaration.\"><code>grid</code></a></li> <li><a href=\"grid-row-start\" title=\"The grid-row-start CSS property specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.\"><code>grid-row-start</code></a></li> <li><a href=\"grid-column-start\" title=\"The grid-column-start CSS property specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-start edge of its grid area.\"><code>grid-column-start</code></a></li> <li><a href=\"grid-row-end\" title=\"The grid-row-end CSS property specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.\"><code>grid-row-end</code></a></li> <li><a href=\"grid-column-end\" title=\"The grid-column-end CSS property specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.\"><code>grid-column-end</code></a></li> <li><a href=\"grid-row\" title=\"The grid-row CSS property is a shorthand property for grid-row-start and grid-row-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.\"><code>grid-row</code></a></li> <li><a href=\"grid-column\" title=\"The grid-column CSS property is a shorthand property for grid-column-start and grid-column-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.\"><code>grid-column</code></a></li> <li><a href=\"grid-area\" title=\"The grid-area CSS property is a shorthand property for grid-row-start, grid-row-end, grid-column-start and grid-column-end specifying a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.\"><code>grid-area</code></a></li> <li><a href=\"grid-row-gap\" title=\"The grid-row-gap CSS property specifies the gutter between grid rows.\"><code>grid-row-gap</code></a></li> <li><a href=\"grid-column-gap\" title=\"The grid-column-gap CSS property specifies the gutter between grid columns.\"><code>grid-column-gap</code></a></li> <li><a href=\"grid-gap\" title=\"The grid-gap CSS property is a shorthand property for grid-row-gap and grid-column-gap specifying the gutters between grid rows and columns.\"><code>grid-gap</code></a></li> </ul> </div> <h3 id=\"CSS_Function\">CSS Function</h3> <div class=\"index\"> <ul> <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/repeat()\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>repeat()</code></a></li> <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/minmax()\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>minmax()</code></a></li> </ul> </div> <h2 id=\"Specifications\">Specifications</h2> <table class=\"standard-table\"> <thead> <tr> <th scope=\"col\">Specification</th> <th scope=\"col\">Status</th> <th scope=\"col\">Comment</th> </tr> </thead> <tbody> <tr> <td><a href=\"https://drafts.csswg.org/css-grid/\" class=\"external\" lang=\"en\" title=\"The 'CSS Grid Layout' specification\" hreflang=\"en\">CSS Grid Layout</a></td> <td><span class=\"spec-WD\">Working Draft</span></td> <td>Initial definition.</td> </tr> </tbody> </table><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout$edit\" class=\"_attribution-link\">Edit this page on MDN</a>\n  </p>\n</div>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2016 Mozilla Contributors<br>Licensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.<br>\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout\" class=\"_attribution-link\">https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout</a>\n  </p>\n</div>\n","css_device_adaptation":"<h1>CSS Device Adaptation</h1> <p><strong>CSS Device Adaptation</strong> is a CSS module that allows to define the size, zoom factor, and orientation of the viewport.</p> <h2 id=\"Reference\">Reference</h2> <h3 id=\"At-rules\">At-rules</h3> <div class=\"index\"> <ul> <li><a href=\"@viewport\" title=\"The @viewport CSS at-rule contains a set of nested descriptors in a CSS block that is delimited by curly braces. These descriptors control viewport settings, primarily on mobile devices.\"><code>@viewport</code></a></li> </ul> </div> <h2 id=\"Guides\">Guides</h2> <p><em>None.</em></p> <h2 id=\"Specifications\">Specifications</h2> <table class=\"standard-table\"> <thead> <tr> <th scope=\"col\">Specification</th> <th scope=\"col\">Status</th> <th scope=\"col\">Comment</th> </tr> </thead> <tbody> <tr> <td><a href=\"https://drafts.csswg.org/css-device-adapt/\" class=\"external\" lang=\"en\" title=\"The 'CSS Device Adaptation' specification\" hreflang=\"en\">CSS Device Adaptation</a></td> <td><span class=\"spec-WD\">Working Draft</span></td> <td>Initial definition</td> </tr> </tbody> </table> <h2 id=\"Browser_compatibility\">Browser compatibility</h2>  <div id=\"compat-desktop\"> <table class=\"compat-table\"> <tbody> <tr> <th>Feature</th> <th>Chrome</th> <th>Firefox (Gecko)</th> <th>Internet Explorer</th> <th>Opera</th> <th>Safari</th> </tr> <tr> <td>Basic support</td> <td>29<sup>[1]</sup>\n</td> <td><span style=\"color: #f00;\">No support</span></td> <td>10 <span class=\"inlineIndicator prefixBox prefixBoxInline\" title=\"prefix\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/Prefixes\" title=\"The name of this feature is prefixed with '-ms' as this browser considers it experimental\">-ms</a></span>\n</td> <td>11.10<br> <span style=\"color: #f00;\">No support</span>15<br> 16<sup>[1]</sup>\n</td> <td><span style=\"color: #f00;\">No support</span></td> </tr> </tbody> </table> </div> <div id=\"compat-mobile\"> <table class=\"compat-table\"> <tbody> <tr> <th>Feature</th> <th>Android</th> <th>Chrome for Android</th> <th>Firefox Mobile (Gecko)</th> <th>IE Mobile</th> <th>Opera Mobile</th> <th>Safari Mobile</th> </tr> <tr> <td>Basic support</td> <td>4.4</td> <td>29.0</td> <td><span style=\"color: #f00;\">No support</span></td> <td>10<span class=\"inlineIndicator prefixBox prefixBoxInline\" title=\"prefix\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/Prefixes\" title=\"The name of this feature is prefixed with '-ms' as this browser considers it experimental\">-ms</a></span>\n</td> <td>11.10<br> <span style=\"color: #f00;\">No support</span>15<br> 16<sup>[1]</sup>\n</td> <td><span style=\"color: #f00;\">No support</span></td> </tr> </tbody> </table> </div> <p>[1] Behind a flag</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Device_Adaptation$edit\" class=\"_attribution-link\">Edit this page on MDN</a>\n  </p>\n</div>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2016 Mozilla Contributors<br>Licensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.<br>\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Device_Adaptation\" class=\"_attribution-link\">https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Device_Adaptation</a>\n  </p>\n</div>\n","media_queries":"<h1>Media Queries</h1> <p><strong>Media Queries</strong> is a module of CSS that defines expressions allowing to tailor presentations to a specific range of output devices without changing the content itself.</p> <h2 id=\"Reference\">Reference</h2> <h3 id=\"At-rules\">At-rules</h3> <div class=\"index\"> <ul> <li><a title=\"The @import CSS at-rule is used to import style rules from other style sheets. These rules must precede all other types of rules, except @charset rules; as it is not a nested statement, @import cannot be used inside conditional group at-rules.\" href=\"@import\"><code>@import</code></a></li> <li><a title=\"The @media CSS at-rule associates a set of nested statements, in a CSS block that is delimited by curly braces, with a condition defined by a media query. The @media at-rule may be used not only at the top level of a CSS, but also inside any CSS conditional-group at-rule.\" href=\"@media\"><code>@media</code></a></li> </ul> </div> <h2 id=\"Guides\">Guides</h2> <dl> <dt><a href=\"media_queries/using_media_queries\">Using media queries</a></dt> <dd>Presents what media queries are doing and explains the possible expressions.</dd> <dt><a href=\"media_queries/testing_media_queries\">Testing media queries</a></dt> <dd>Explains how to test a media query programmatically, from JavaScript.</dd> </dl> <h2 id=\"Specifications\">Specifications</h2> <table class=\"standard-table\"> <thead> <tr> <th scope=\"col\">Specification</th> <th scope=\"col\">Status</th> <th scope=\"col\">Comment</th> </tr> </thead> <tbody> <tr> <td><a lang=\"en\" title=\"The 'CSS Conditional Rules Module Level 3' specification\" class=\"external\" href=\"https://drafts.csswg.org/css-conditional-3/\" hreflang=\"en\">CSS Conditional Rules Module Level 3</a></td> <td><span class=\"spec-CR\">Candidate Recommendation</span></td> <td> </td> </tr> <tr> <td><a lang=\"en\" title=\"The 'Media Queries Level 4' specification\" class=\"external\" href=\"https://drafts.csswg.org/mediaqueries-4/\" hreflang=\"en\">Media Queries Level 4</a></td> <td><span class=\"spec-WD\">Working Draft</span></td> <td> </td> </tr> <tr> <td><a lang=\"en\" title=\"The 'Media Queries' specification\" class=\"external\" href=\"https://drafts.csswg.org/mediaqueries-3/\" hreflang=\"en\">Media Queries</a></td> <td><span class=\"spec-REC\">Recommendation</span></td> <td> </td> </tr> <tr> <td><a lang=\"en\" title=\"The 'CSS Level 2 (Revision 1)' specification\" class=\"external\" href=\"http://www.w3.org/TR/CSS2/media.html\" hreflang=\"en\">CSS Level 2 (Revision 1)</a></td> <td><span class=\"spec-REC\">Recommendation</span></td> <td>Initial definition</td> </tr> </tbody> </table> <h2 id=\"Browser_compatibility\">Browser compatibility</h2>  <div id=\"compat-desktop\"> <table class=\"compat-table\"> <tbody> <tr> <th>Feature</th> <th>Chrome</th> <th>Firefox (Gecko)</th> <th>Internet Explorer</th> <th>Opera</th> <th>Safari</th> </tr> <tr> <td>Basic support</td> <td>1.0</td> <td>1.0 (1.7 or earlier)</td> <td>9.0</td> <td>9.2</td> <td>1.3</td> </tr> </tbody> </table> </div> <div id=\"compat-mobile\"> <table class=\"compat-table\"> <tbody> <tr> <th>Feature</th> <th>Android</th> <th>Firefox Mobile (Gecko)</th> <th>IE Mobile</th> <th>Opera Mobile</th> <th>Safari Mobile</th> </tr> <tr> <td>Basic support</td> <td>1.0</td> <td>1.0 (1.7)</td> <td>9.0</td> <td>9.0</td> <td>3.1</td> </tr> </tbody> </table> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries$edit\" class=\"_attribution-link\">Edit this page on MDN</a>\n  </p>\n</div>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2016 Mozilla Contributors<br>Licensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.<br>\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries\" class=\"_attribution-link\">https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries</a>\n  </p>\n</div>\n","css_box_model/box-shadow_generator":"<h1>CSS Box Model: Box-shadow generator</h1><p>This tool lets you construct CSS <a title=\"The box-shadow property describes one or more shadow effects as a comma-separated list.\" href=\"../box-shadow\"><code>box-shadow</code></a> effects, to add box shadow effects to your CSS objects.</p> <div style=\"display: none;\"> <h2 id=\"box-shadow_generator\" name=\"box-shadow_generator\">box-shadow generator</h2> <h3 id=\"HTML_Content\">HTML Content</h3> <pre data-language=\"html\">&lt;div id=\"container\"&gt;\n    &lt;div class=\"group section\"&gt;\n        &lt;div id=\"layer_manager\"&gt;\n            &lt;div class=\"group section\"&gt;\n                &lt;div class=\"button\" data-type=\"add\"&gt; &lt;/div&gt;\n                &lt;div class=\"button\" data-type=\"move-up\"&gt; &lt;/div&gt;\n                &lt;div class=\"button\" data-type=\"move-down\"&gt; &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div id=\"stack_container\"&gt;&lt;/div&gt;\n        &lt;/div&gt;\n\n        &lt;div id=\"preview_zone\"&gt;\n            &lt;div id=\"layer_menu\" class=\"col span_12\"&gt;\n                &lt;div class=\"button\" id=\"element\" data-type=\"subject\" data-title=\"element\"&gt; element &lt;/div&gt;\n                &lt;div class=\"button\" id=\"before\" data-type=\"subject\" data-title=\":before\"&gt;\n                    :before\n                    &lt;span class=\"delete\" data-type=\"disable\"&gt;&lt;/span&gt;\n                &lt;/div&gt;\n                &lt;div class=\"button\" id=\"after\" data-type=\"subject\" data-title=\":after\"&gt;\n                    :after\n                    &lt;span class=\"delete\" data-type=\"disable\"&gt;&lt;/span&gt;\n                &lt;/div&gt;\n                &lt;div class=\"ui-checkbox\" data-topic='before' data-label=\":before\"&gt;&lt;/div&gt;\n                &lt;div class=\"ui-checkbox\" data-topic='after' data-label=\":after\"&gt;&lt;/div&gt;\n            &lt;/div&gt;\n\n            &lt;div id=\"preview\"&gt;\n                &lt;div id=\"obj-element\"&gt;\n                    &lt;div class=\"content\"&gt; &lt;/div&gt;\n                    &lt;div id=\"obj-before\"&gt; &lt;/div&gt;\n                    &lt;div id=\"obj-after\"&gt; &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;div id=\"controls\" class=\"group section\"&gt;\n        &lt;div class=\"wrap-left\"&gt;\n            &lt;div class=\"colorpicker category\"&gt;\n                &lt;div class=\"title\"&gt; &lt;/div&gt;\n                &lt;div id=\"colorpicker\" class=\"group\"&gt;\n                    &lt;div id=\"gradient\" class=\"gradient\"&gt;\n                        &lt;div id=\"gradient_picker\"&gt; &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div id=\"hue\" data-topic=\"hue\" class=\"hue\"&gt;\n                        &lt;div id=\"hue_selector\"&gt; &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div class=\"info\"&gt;\n                        &lt;div class=\"input\" data-topic=\"hue\" data-title='H:' data-action=\"HSV\"&gt;&lt;/div&gt;\n                        &lt;div class=\"input\" data-topic=\"saturation\" data-title='S:' data-action=\"HSV\"&gt;&lt;/div&gt;\n                        &lt;div class=\"input\" data-topic=\"value\" data-title='V:' data-action=\"HSV\"&gt;&lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div class=\"alpha\"&gt;\n                        &lt;div id=\"alpha\" data-topic=\"alpha\"&gt;\n                            &lt;div id=\"alpha_selector\"&gt; &lt;/div&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div class=\"info\"&gt;\n                        &lt;div class=\"input\" data-topic=\"r\" data-title='R:' data-action=\"RGB\"&gt;&lt;/div&gt;\n                        &lt;div class=\"input\" data-topic=\"g\" data-title='G:' data-action=\"RGB\"&gt;&lt;/div&gt;\n                        &lt;div class=\"input\" data-topic=\"b\" data-title='B:' data-action=\"RGB\"&gt;&lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div class=\"preview block\"&gt;\n                        &lt;div id=\"output_color\"&gt; &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div class=\"block info\"&gt;\n                        &lt;div class=\"input\" data-topic=\"a\" data-title='alpha:' data-action=\"alpha\"&gt;&lt;/div&gt;\n                        &lt;div class=\"input\" data-topic=\"hexa\" data-title='' data-action=\"hexa\"&gt;&lt;/div&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n\n        &lt;div class=\"wrap-right\"&gt;\n\n            &lt;div id=\"shadow_properties\" class=\"category\"&gt;\n                &lt;div class=\"title\"&gt; Shadow properties &lt;/div&gt;\n                &lt;div class=\"group\"&gt;\n                    &lt;div class=\"group property\"&gt;\n                        &lt;div class=\"ui-slider-name\"&gt; inset &lt;/div&gt;\n                        &lt;div class=\"ui-checkbox\" data-topic='inset'&gt;&lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div class=\"slidergroup\"&gt;\n                        &lt;div class=\"ui-slider-name\"&gt; Position x &lt;/div&gt;\n                        &lt;div class=\"ui-slider-btn-set\" data-topic=\"posX\" data-type=\"sub\"&gt;&lt;/div&gt;\n                        &lt;div class=\"ui-slider\" data-topic=\"posX\"\n                            data-min=\"-500\" data-max=\"500\" data-step=\"1\"&gt; &lt;/div&gt;\n                        &lt;div class=\"ui-slider-btn-set\" data-topic=\"posX\" data-type=\"add\"&gt;&lt;/div&gt;\n                        &lt;div class=\"ui-slider-input\" data-topic=\"posX\" data-unit=\"px\"&gt;&lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div class=\"slidergroup\"&gt;\n                        &lt;div class=\"ui-slider-name\"&gt; Position y &lt;/div&gt;\n                        &lt;div class=\"ui-slider-btn-set\" data-topic=\"posY\" data-type=\"sub\"&gt;&lt;/div&gt;\n                        &lt;div class=\"ui-slider\" data-topic=\"posY\"\n                            data-min=\"-500\" data-max=\"500\" data-step=\"1\"&gt; &lt;/div&gt;\n                        &lt;div class=\"ui-slider-btn-set\" data-topic=\"posY\" data-type=\"add\"&gt;&lt;/div&gt;\n                        &lt;div class=\"ui-slider-input\" data-topic=\"posY\" data-unit=\"px\"&gt;&lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div class=\"slidergroup\"&gt;\n                        &lt;div class=\"ui-slider-name\"&gt; Blur &lt;/div&gt;\n                        &lt;div class=\"ui-slider-btn-set\" data-topic=\"blur\" data-type=\"sub\"&gt;&lt;/div&gt;\n                        &lt;div class=\"ui-slider\" data-topic=\"blur\"\n                            data-min=\"0\" data-max=\"200\" data-step=\"1\"&gt; &lt;/div&gt;\n                        &lt;div class=\"ui-slider-btn-set\" data-topic=\"blur\" data-type=\"add\"&gt;&lt;/div&gt;\n                        &lt;div class=\"ui-slider-input\" data-topic=\"blur\" data-unit=\"px\"&gt;&lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div class=\"slidergroup\"&gt;\n                        &lt;div class=\"ui-slider-name\"&gt; Spread &lt;/div&gt;\n                        &lt;div class=\"ui-slider-btn-set\" data-topic=\"spread\" data-type=\"sub\"&gt;&lt;/div&gt;\n                        &lt;div class=\"ui-slider\" data-topic=\"spread\"\n                            data-min=\"-100\"    data-max=\"100\" data-step=\"1\" data-value=\"50\"&gt;\n                        &lt;/div&gt;\n                        &lt;div class=\"ui-slider-btn-set\" data-topic=\"spread\" data-type=\"add\"&gt;&lt;/div&gt;\n                        &lt;div class=\"ui-slider-input\" data-topic=\"spread\" data-unit=\"px\"&gt;&lt;/div&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n\n            &lt;div id=\"element_properties\" class=\"category\"&gt;\n                &lt;div class=\"title\"&gt; Class element properties &lt;/div&gt;\n                &lt;div class=\"group\"&gt;\n                    &lt;div class=\"group property\"&gt;\n                        &lt;div class=\"ui-slider-name\"&gt; border &lt;/div&gt;\n                        &lt;div class=\"ui-checkbox\" data-topic='border-state' data-state=\"true\"&gt;&lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div id=\"z-index\" class=\"slidergroup\"&gt;\n                        &lt;div class=\"ui-slider-name\"&gt; z-index &lt;/div&gt;\n                        &lt;div class=\"ui-slider-btn-set\" data-topic=\"z-index\" data-type=\"sub\"&gt;&lt;/div&gt;\n                        &lt;div class=\"ui-slider\" data-topic=\"z-index\"\n                            data-min=\"-10\" data-max=\"10\" data-step=\"1\"&gt;&lt;/div&gt;\n                        &lt;div class=\"ui-slider-btn-set\" data-topic=\"z-index\" data-type=\"add\"&gt;&lt;/div&gt;\n                        &lt;div class=\"ui-slider-input\" data-topic=\"z-index\"&gt;&lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div class=\"slidergroup\"&gt;\n                        &lt;div class=\"ui-slider-name\"&gt; top &lt;/div&gt;\n                        &lt;div class=\"ui-slider-btn-set\" data-topic=\"top\" data-type=\"sub\"&gt;&lt;/div&gt;\n                        &lt;div class=\"ui-slider\" data-topic=\"top\"\n                            data-min=\"-500\" data-max=\"500\" data-step=\"1\"&gt; &lt;/div&gt;\n                        &lt;div class=\"ui-slider-btn-set\" data-topic=\"top\" data-type=\"add\"&gt;&lt;/div&gt;\n                        &lt;div class=\"ui-slider-input\" data-topic=\"top\" data-unit=\"px\"&gt;&lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div class=\"slidergroup\"&gt;\n                        &lt;div class=\"ui-slider-name\"&gt; left &lt;/div&gt;\n                        &lt;div class=\"ui-slider-btn-set\" data-topic=\"left\" data-type=\"sub\"&gt;&lt;/div&gt;\n                        &lt;div class=\"ui-slider\" data-topic=\"left\"\n                            data-min=\"-300\" data-max=\"700\" data-step=\"1\"&gt; &lt;/div&gt;\n                        &lt;div class=\"ui-slider-btn-set\" data-topic=\"left\" data-type=\"add\"&gt;&lt;/div&gt;\n                        &lt;div class=\"ui-slider-input\" data-topic=\"left\" data-unit=\"px\"&gt;&lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div id=\"transform_rotate\" class=\"slidergroup\"&gt;\n                        &lt;div class=\"ui-slider-name\"&gt; Rotate &lt;/div&gt;\n                        &lt;div class=\"ui-slider-btn-set\" data-topic=\"rotate\" data-type=\"sub\"&gt;&lt;/div&gt;\n                        &lt;div class=\"ui-slider\" data-topic=\"rotate\"\n                            data-min=\"-360\" data-max=\"360\" data-step=\"1\" data-value=\"0\"&gt;\n                        &lt;/div&gt;\n                        &lt;div class=\"ui-slider-btn-set\" data-topic=\"rotate\" data-type=\"add\"&gt;&lt;/div&gt;\n                        &lt;div class=\"ui-slider-input\" data-topic=\"rotate\" data-unit=\"deg\"&gt;&lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div class=\"slidergroup\"&gt;\n                        &lt;div class=\"ui-slider-name\"&gt; Width &lt;/div&gt;\n                        &lt;div class=\"ui-slider-btn-set\" data-topic=\"width\" data-type=\"sub\"&gt;&lt;/div&gt;\n                        &lt;div class=\"ui-slider\" data-topic=\"width\"\n                            data-min=\"0\" data-max=\"1000\" data-step=\"1\" data-value=\"200\"&gt;\n                        &lt;/div&gt;\n                        &lt;div class=\"ui-slider-btn-set\" data-topic=\"width\" data-type=\"add\"&gt;&lt;/div&gt;\n                        &lt;div class=\"ui-slider-input\" data-topic=\"width\"  data-unit=\"px\"&gt;&lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div class=\"slidergroup\"&gt;\n                        &lt;div class=\"ui-slider-name\"&gt; Height &lt;/div&gt;\n                        &lt;div class=\"ui-slider-btn-set\" data-topic=\"height\" data-type=\"sub\"&gt;&lt;/div&gt;\n                        &lt;div class=\"ui-slider\" data-topic=\"height\"\n                            data-min=\"0\" data-max=\"400\" data-step=\"1\" data-value=\"200\"&gt;\n                        &lt;/div&gt;\n                        &lt;div class=\"ui-slider-btn-set\" data-topic=\"height\" data-type=\"add\"&gt;&lt;/div&gt;\n                        &lt;div class=\"ui-slider-input\" data-topic=\"height\" data-unit=\"px\"&gt;&lt;/div&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n\n            &lt;div id=\"output\" class=\"category\"&gt;\n                &lt;div id=\"menu\" class=\"menu\"&gt;&lt;/div&gt;\n                &lt;div class=\"title\"&gt;    CSS Code &lt;/div&gt;\n                &lt;div class=\"group\" style=\"border-top-left-radius: 0;\"&gt;\n                    &lt;div class=\"output\" data-topic=\"element\" data-name=\"element\"\n                        data-prop=\"width height background-color position=[relative] box-shadow\"&gt;\n                    &lt;/div&gt;\n                    &lt;div class=\"output\" data-topic=\"before\" data-name=\"element:before\"\n                        data-prop=\"content=[&amp;quot;&amp;quot;] position=[absolute] width height top left z-index background-color box-shadow transform -webkit-transform -ms-transform\"&gt;\n                    &lt;/div&gt;\n                    &lt;div class=\"output\" data-topic=\"after\" data-name=\"element:after\"\n                        data-prop=\"content=[&amp;quot;&amp;quot;] position=[absolute] width height top left z-index background-color box-shadow transform -webkit-transform -ms-transform\"&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</pre> <h3 id=\"CSS_Content\">CSS Content</h3> <pre data-language=\"css\">/*  GRID OF TWELVE\n * ========================================================================== */\n\n.span_12 {\n\twidth: 100%;\n}\n\n.span_11 {\n\twidth: 91.46%;\n}\n\n.span_10 {\n\twidth: 83%;\n}\n\n.span_9 {\n\twidth: 74.54%;\n}\n\n.span_8 {\n\twidth: 66.08%;\n}\n\n.span_7 {\n\twidth: 57.62%;\n}\n\n.span_6 {\n\twidth: 49.16%;\n}\n\n.span_5 {\n\twidth: 40.7%;\n}\n\n.span_4 {\n\twidth: 32.24%;\n}\n\n.span_3 {\n\twidth: 23.78%;\n}\n\n.span_2 {\n\twidth: 15.32%;\n}\n\n.span_1 {\n\twidth: 6.86%;\n}\n\n\n/*  SECTIONS\n * ========================================================================== */\n\n.section {\n\tclear: both;\n\tpadding: 0px;\n\tmargin: 0px;\n}\n\n/*  GROUPING\n * ========================================================================== */\n\n\n.group:before, .group:after {\n    content: \"\";\n    display: table;\n}\n\n.group:after {\n    clear:both;\n}\n\n.group {\n    zoom: 1; /* For IE 6/7 (trigger hasLayout) */\n}\n\n/*  GRID COLUMN SETUP\n * ========================================================================== */\n\n.col {\n\tdisplay: block;\n\tfloat:left;\n\tmargin: 1% 0 1% 1.6%;\n}\n\n.col:first-child {\n\tmargin-left: 0;\n} /* all browsers except IE6 and lower */\n\n/*\n * UI Slider\n */\n\n.slidergroup {\n\theight: 20px;\n\tmargin: 10px 0;\n\tfont-family: \"Segoe UI\", Arial, Helvetica, sans-serif;\n\t-moz-user-select: none;\n\tuser-select: none;\n}\n\n.slidergroup * {\n\tfloat: left;\n\theight: 100%;\n\tline-height: 100%;\n}\n\n/* Slider */\n\n.ui-slider {\n\theight: 10px;\n\twidth: 200px;\n\tmargin: 4px 10px;\n\tdisplay: block;\n\tborder: 1px solid #999;\n\tborder-radius: 3px;\n\tbackground: #EEE;\n}\n\n.ui-slider:hover {\n\tcursor: pointer;\n}\n\n.ui-slider-name {\n\twidth: 90px;\n\tpadding: 0 10px 0 0;\n\ttext-align: right;\n\ttext-transform: lowercase;\n}\n\n.ui-slider-pointer {\n\twidth: 13px;\n\theight: 13px;\n\tbackground-color: #EEE;\n\tborder: 1px solid #2C9FC9;\n\tborder-radius: 3px;\n\tposition: relative;\n\ttop: -3px;\n\tleft: 0%;\n}\n\n.ui-slider-btn-set {\n\twidth: 25px;\n\tbackground-color: #2C9FC9;\n\tborder-radius: 3px;\n\tcolor: #FFF;\n\tfont-weight: bold;\n\ttext-align: center;\n}\n\n.ui-slider-btn-set:hover {\n\tbackground-color: #379B4A;\n\tcursor: pointer;\n}\n\n.ui-slider-input &gt; input {\n\tmargin: 0 10px;\n\tpadding: 0;\n\twidth: 50px;\n\ttext-align: center;\n\n\t-moz-box-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\tbox-sizing: border-box;\n}\n\n/*\n * UI Button\n */\n\n/* Checkbox */\n\n.ui-checkbox {\n\ttext-align: center;\n\tfont-size: 16px;\n\tfont-family: \"Segoe UI\", Arial, Helvetica, sans-serif;\n\tline-height: 1.5em;\n\tcolor: #FFF;\n\n\t-moz-user-select: none;\n\t-webkit-user-select: none;\n\t-ms-user-select: none;\n\tuser-select: none;\n}\n\n.ui-checkbox &gt; input {\n \tdisplay: none;\n}\n\n.ui-checkbox &gt; label {\n\tfont-size: 12px;\n\tpadding: 0.333em 1.666em 0.5em;\n\theight: 1em;\n\tline-height: 1em;\n\n\tbackground-color: #888;\n\tbackground-image: url(\"https://mdn.mozillademos.org/files/5683/disabled.png\");\n\tbackground-position: center center;\n\tbackground-repeat: no-repeat;\n\n\tcolor: #FFF;\n\tborder-radius: 3px;\n\tfont-weight: bold;\n\tfloat: left;\n}\n\n.ui-checkbox .text {\n\tpadding-left: 34px;\n\tbackground-position: center left 10px;\n}\n\n.ui-checkbox .left {\n\tpadding-right: 34px;\n\tpadding-left: 1.666em;\n\tbackground-position: center right 10px;\n}\n\n.ui-checkbox &gt; label:hover {\n\tcursor: pointer;\n}\n\n.ui-checkbox &gt; input:checked + label {\n\tbackground-image: url(\"https://mdn.mozillademos.org/files/5681/checked.png\");\n\tbackground-color: #379B4A;\n}\n\n/*\n * BOX SHADOW GENERATOR TOOL\n */\n\nbody {\n\tmax-width: 1000px;\n\theight: 800px;\n\tmargin: 20px auto 0;\n\n\tfont-family: \"Segoe UI\", Arial, Helvetica, sans-serif;\n\n\t-moz-box-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\tbox-sizing: border-box;\n\n\t-moz-user-select: none;\n\t-webkit-user-select: none;\n\t-ms-user-select: none;\n}\n\n#container {\n\twidth: 100%;\n\tpadding: 2px;\n\n\t-moz-box-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\tbox-sizing: border-box;\n}\n\n\n/* container with shadows stacks */\n#stack_container {\n\theight: 400px;\n\toverflow: hidden;\n\tposition: relative;\n\tborder: 1px solid #CCC;\n\tborder-radius: 3px;\n\n\t-moz-box-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\tbox-sizing: border-box;\n}\n\n#stack_container .container {\n\theight: 100%;\n\twidth: 100%;\n\tposition: absolute;\n\tleft: 100%;\n\ttransition-property: left;\n\ttransition-duration: 0.5s;\n\n\t-moz-box-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\tbox-sizing: border-box;\n}\n\n\n#stack_container .title {\n\ttext-align: center;\n\tfont-weight: bold;\n\tline-height: 2em;\n\tborder-bottom: 1px solid #43A6E1;\n\tcolor: #666;\n}\n\n\n/*\n * Stack of Layers for shadow\n */\n\n#layer_manager {\n\twidth: 17%;\n\tbackground-color: #FEFEFE;\n\tmargin: 0 1% 0 0;\n\n\t-moz-box-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\tbox-sizing: border-box;\n\tfloat: left;\n}\n\n\n#layer_manager .button {\n\twidth: 30%;\n\theight: 25px;\n\tmargin:0 0 10px;\n\tcolor: #333;\n\tbackground-color: #EEE;\n\ttext-align: center;\n\tfont-size: 0.75em;\n\tline-height: 1.5em;\n\tborder: 1px solid #CCC;\n\tborder-radius: 3px;\n\n\tdisplay: block;\n\tbackground-position: center center;\n\tbackground-repeat: no-repeat;\n\n\t-moz-box-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\tbox-sizing: border-box;\n\tfloat: left;\n}\n\n#layer_manager .button:hover {\n\tbackground-color: #3380C4;\n\tborder: 1px solid #3380C4;\n\tcursor: pointer;\n}\n\n#layer_manager [data-type='add'] {\n\tbackground-image: url(\"https://mdn.mozillademos.org/files/5685/add-black.png\");\n}\n\n#layer_manager [data-type='add']:hover {\n\tbackground-image: url(\"https://mdn.mozillademos.org/files/5687/add-white.png\");\n}\n\n#layer_manager [data-type='move-up'] {\n\tbackground-image: url(\"https://mdn.mozillademos.org/files/5697/up-black.png\");\n\tmargin-left: 5%;\n\tmargin-right: 5%;\n}\n\n#layer_manager [data-type='move-up']:hover {\n\tbackground-image: url(\"https://mdn.mozillademos.org/files/5709/up-white.png\");\n}\n\n#layer_manager [data-type='move-down'] {\n\tbackground-image: url(\"https://mdn.mozillademos.org/files/5693/down-black.png\");\n}\n\n#layer_manager [data-type='move-down']:hover {\n\tbackground-image: url(\"https://mdn.mozillademos.org/files/5695/down-white.png\");\n}\n\n/* shadows classes */\n\n#layer_manager .node {\n\twidth: 100%;\n\tmargin: 5px 0;\n\tpadding: 5px;\n\ttext-align: center;\n\tbackground-color: #EEE;\n\tborder: 1px solid #DDD;\n\tfont-size: 0.75em;\n\tline-height: 1.5em;\n\tcolor: #333;\n\tborder-radius: 3px;\n\n\tposition: relative;\n\tdisplay: block;\n\n\t-moz-box-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\tbox-sizing: border-box;\n}\n\n#layer_manager .node:hover {\n\tcolor: #FFF;\n\tbackground-color: #3380C4;\n\tcursor: pointer;\n}\n\n/* active element styling */\n\n#layer_manager [data-active='layer'] {\n\tcolor: #FFF;\n\tborder: none;\n\tbackground-color: #379B4A;\n}\n\n#layer_manager [data-active='subject'] {\n\tcolor: #FFF;\n\tbackground-color: #467FC9;\n}\n\n/* delete button */\n\n#layer_manager .delete {\n\twidth: 1.5em;\n\theight: 100%;\n\tfloat: right;\n\tborder-radius: 3px;\n\tbackground-image: url(\"https://mdn.mozillademos.org/files/5689/delete-white.png\");\n\tbackground-position: center center;\n\tbackground-repeat: no-repeat;\n\tposition: absolute;\n\ttop: 0;\n\tright: 10px;\n\tdisplay: none;\n}\n\n#layer_manager .delete:hover {\n\tbackground-image: url(\"https://mdn.mozillademos.org/files/5691/delete-yellow.png\");\n}\n\n#layer_manager .node:hover .delete {\n\tdisplay: block;\n}\n\n\n#layer_manager .stack {\n\tpadding: 0 5px;\n\tmax-height: 90%;\n\toverflow: auto;\n\toverflow-x: hidden;\n}\n\n\n/*\n * Layer Menu\n */\n\n#layer_menu {\n\tmargin: 0 0 10px 0;\n\t-moz-box-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\tbox-sizing: border-box;\n}\n\n#layer_menu .button {\n\twidth: 100px;\n\tmargin: 0 5px 0 0;\n\tpadding: 2.5px;\n\tcolor: #333;\n\tbackground-color: #EEE;\n\tborder: 1px solid #CCC;\n\tborder-radius: 3px;\n\ttext-align: center;\n\tfont-size: 0.75em;\n\tline-height: 1.5em;\n\n\tposition: relative;\n\tdisplay: block;\n\tfloat: left;\n\n\t-moz-box-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\tbox-sizing: border-box;\n}\n\n#layer_menu .button:hover {\n\tcolor: #FFF;\n\tbackground-color: #3380C4;\n\tborder: 1px solid #3380C4;\n\tcursor: pointer;\n}\n\n#layer_menu .delete {\n\twidth: 1.5em;\n\theight: 100%;\n\tfloat: right;\n\tborder-radius: 3px;\n\tbackground-image: url(\"https://mdn.mozillademos.org/files/5689/delete-white.png\");\n\tbackground-position: center center;\n\tbackground-repeat: no-repeat;\n\tposition: absolute;\n\ttop: 0;\n\tright: 5px;\n\tdisplay: none;\n}\n\n#layer_menu .delete:hover {\n\tbackground-image: url(\"https://mdn.mozillademos.org/files/5691/delete-yellow.png\");\n}\n\n#layer_menu .button:hover .delete {\n\tdisplay: block;\n}\n\n\n/*\n * active element styling\n */\n\n#layer_menu [data-active='subject'] {\n\tcolor: #FFF;\n\tbackground-color: #379B4A;\n\tborder: 1px solid #379B4A;\n}\n\n\n/* Checkbox */\n\n#layer_menu .ui-checkbox &gt; label {\n\theight: 15px;\n\tline-height: 17px;\n\tfont-weight: normal;\n\twidth: 46px;\n\tmargin: 0 5px 0 0;\n}\n\n#layer_menu .ui-checkbox &gt; input:checked + label {\n\tdisplay: none;\n}\n\n\n/******************************************************************************/\n/******************************************************************************/\n/*\n * Preview Area\n */\n\n#preview_zone {\n\twidth: 82%;\n\tfloat: left;\n\n}\n\n\n#preview {\n\twidth: 100%;\n\theight: 400px;\n\tborder: 1px solid #CCC;\n\tborder-radius: 3px;\n\ttext-align: center;\n\n\t-moz-box-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\tbox-sizing: border-box;\n\tcursor: move;\n\tfloat: left;\n}\n\n#preview .content {\n\twidth: 100%;\n\theight: 100%;\n\tdisplay: block;\n}\n\n#obj-element {\n\twidth: 300px;\n\theight: 100px;\n\tborder: 1px solid #CCC;\n\tbackground: #FFF;\n\tposition: relative;\n}\n\n\n#obj-before {\n\theight: 100%;\n\twidth: 100%;\n\tbackground: #999;\n\tborder: 1px solid #CCC;\n\ttext-align: left;\n\tdisplay : block;\n\tposition: absolute;\n\tz-index: -1;\n}\n\n#obj-after {\n\theight: 100%;\n\twidth: 100%;\n\tbackground: #DDD;\n\tborder: 1px solid #CCC;\n\ttext-align: right;\n\tdisplay : block;\n\tposition: absolute;\n\tz-index: -1;\n}\n\n\n/******************************************************************************/\n/******************************************************************************/\n\n/**\n * Controls\n */\n\n.wrap-left {\n\tfloat: left;\n\toverflow: hidden;\n}\n\n.wrap-right {\n\tfloat: right;\n\toverflow: hidden;\n}\n\n.wrap-left &gt; * {\n\tfloat: left;\n}\n\n.wrap-right &gt; * {\n\tfloat: right;\n}\n\n@media (min-width: 960px) {\n\n\t.wrap-left {\n\t\twidth: 45%;\n\t}\n\n\t.wrap-right {\n\t\twidth: 55%;\n\t}\n}\n\n\n@media (max-width: 959px) {\n\n\t.wrap-left {\n\t\twidth: 30%;\n\t}\n\n\t.wrap-right {\n\t\twidth: 70%;\n\t}\n}\n\n\n#controls {\n\tcolor: #444;\n\tmargin: 10px 0 0 0;\n}\n\n\n#controls .category {\n\twidth: 500px;\n\tmargin: 0 auto 20px;\n\tpadding: 0;\n\n}\n\n#controls .category .title {\n\twidth: 100%;\n\theight: 1.5em;\n\tline-height: 1.5em;\n\tcolor: #AAA;\n\ttext-align: right;\n}\n\n#controls .category &gt; .group {\n\tborder: 1px solid #CCC;\n\tborder-radius: 3px;\n}\n\n\n/**\n * \tColor Picker\n */\n\n@media (min-width: 960px) {\n\t#controls .colorpicker {\n\t\twidth: 420px;\n\t}\n}\n\n@media (max-width: 959px) {\n\t#controls .colorpicker {\n\t\twidth: 210px;\n\t}\n}\n\n#colorpicker {\n\twidth: 100%;\n\tmargin: 0 auto;\n}\n\n#colorpicker .gradient {\n\twidth: 200px;\n\theight: 200px;\n\tmargin: 5px;\n\tbackground: url(\"https://mdn.mozillademos.org/files/5707/picker_mask_200.png\");\n\tbackground: -moz-linear-gradient(bottom, #000 0%, rgba(0, 0, 0, 0) 100%),\n\t\t\t\t-moz-linear-gradient(left, #FFF 0%, rgba(255, 255, 255, 0) 100%);\n\tbackground: -webkit-linear-gradient(bottom, #000 0%, rgba(0, 0, 0, 0) 100%),\n\t\t\t\t-webkit-linear-gradient(left, #FFF 0%, rgba(255, 255, 255, 0) 100%);\n\tbackground-color: #F00;\n\tfloat: left;\n}\n\n#colorpicker .hue {\n\twidth: 200px;\n\theight: 30px;\n\tmargin: 5px;\n\tbackground: url(\"https://mdn.mozillademos.org/files/5701/hue.png\");\n\tbackground: -moz-linear-gradient(left, #F00 0%, #FF0 16.66%, #0F0 33.33%, #0FF 50%,\n\t\t\t\t#00F 66.66%, #F0F 83.33%, #F00 100%);\n\tbackground: -webkit-linear-gradient(left, #F00 0%, #FF0 16.66%, #0F0 33.33%, #0FF 50%,\n\t\t\t\t#00F 66.66%, #F0F 83.33%, #F00 100%);\n\tfloat: left;\n}\n\n#colorpicker .alpha {\n\twidth: 200px;\n\theight: 30px;\n\tmargin: 5px;\n\tborder: 1px solid #CCC;\n\tfloat: left;\n\tbackground: url(\"https://mdn.mozillademos.org/files/5705/alpha.png\");\n\n\t-moz-box-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\tbox-sizing: border-box;\n}\n\n#colorpicker #alpha {\n\twidth: 100%;\n\theight: 100%;\n\tbackground: url(\"https://mdn.mozillademos.org/files/5703/alpha_mask.png\");\n\tbackground: -moz-linear-gradient(left, rgba(255, 0, 0, 0) 0%, rgba(255, 0, 0, 1) 100%);\n}\n\n#colorpicker #gradient_picker {\n\twidth: 0.5em;\n\theight: 0.5em;\n\tborder-radius: 0.4em;\n\tborder: 2px solid #CCC;\n\tposition: relative;\n\ttop: 20%;\n\tleft: 20%;\n}\n\n#colorpicker #hue_selector,\n#colorpicker #alpha_selector {\n\twidth: 3px;\n\theight: 100%;\n\tborder: 1px solid #777;\n\tbackground-color: #FFF;\n\tposition: relative;\n\ttop: -1px;\n\tleft: 0%;\n}\n\n/* input HSV and RGB */\n#colorpicker .info {\n\twidth: 200px;\n\tmargin: 5px;\n\tfloat: left;\n}\n\n#colorpicker .info * {\n\tfloat: left;\n}\n\n#colorpicker .info input {\n\tmargin: 0;\n\ttext-align: center;\n\twidth: 30px;\n\t-moz-user-select: text;\n\t-webkit-user-select: text;\n\t-ms-user-select: text;\n}\n\n#colorpicker .info span {\n\theight: 20px;\n\twidth: 30px;\n\ttext-align: center;\n\tline-height: 20px;\n\tdisplay: block;\n}\n\n/* Preview color */\n#colorpicker .block {\n\twidth: 95px;\n\theight: 54px;\n\tfloat: left;\n\tposition: relative;\n}\n\n#colorpicker .preview {\n\tmargin: 5px;\n\tborder: 1px solid #CCC;\n\tbackground-image: url(\"https://mdn.mozillademos.org/files/5705/alpha.png\");\n\n\t-moz-box-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\tbox-sizing: border-box;\n}\n\n#colorpicker .preview:before {\n\theight: 100%;\n\twidth: 50%;\n\tleft: 50%;\n\tcontent: \"\";\n\tbackground: #FFF;\n\tposition: absolute;\n\tz-index: 1;\n}\n\n#colorpicker .preview &gt; * {\n\twidth: 50%;\n\theight: 100%;\n}\n\n#colorpicker #output_color {\n\twidth: 100%;\n\theight: 100%;\n\tposition: absolute;\n\tz-index: 2;\n}\n\n#colorpicker .block .input {\n\tfloat: right;\n}\n\n#colorpicker [data-topic=\"a\"] &gt; span {\n\twidth: 50px;\n}\n\n#colorpicker [data-topic=\"hexa\"] {\n\tfloat: right;\n\tmargin: 10px 0 0 0;\n}\n\n#colorpicker [data-topic=\"hexa\"] &gt; span {\n\tdisplay: none;\n}\n\n#colorpicker [data-topic=\"hexa\"] &gt; input {\n\twidth: 85px;\n\tpadding: 2px 0;\n\t-moz-box-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\tbox-sizing: border-box;\n}\n\n\n/*\n * UI Components\n */\n\n/* Property */\n\n.property {\n\theight: 20px;\n\tmargin: 10px 0;\n}\n\n.property * {\n\tfloat: left;\n\theight: 100%;\n\tline-height: 100%;\n}\n\n/* Slider */\n\n#controls .ui-slider-name {\n\tmargin: 0 10px 0 0;\n}\n\n/*\n * Output code styling\n */\n\n#output {\n\tposition: relative;\n}\n\n#output .menu {\n\tmax-width: 70%;\n\theight: 20px;\n\tposition: absolute;\n\ttop: 2px;\n}\n\n#output .button {\n\twidth: 90px;\n\theight: 22px;\n\tmargin: 0 5px 0 0;\n\ttext-align: center;\n\tline-height: 20px;\n\tfont-size: 14px;\n\tcolor: #FFF;\n\tbackground-color: #999;\n\tborder-top-left-radius: 3px;\n\tborder-top-right-radius: 3px;\n\tbottom: -5px;\n\tfloat:left;\n}\n\n#output .button:hover {\n\tcolor: #FFF;\n\tbackground-color: #666;\n\tcursor: pointer;\n}\n\n#output .menu [data-active=\"true\"] {\n\tcolor: #777;\n\tbackground-color: #FFF;\n\tborder: 1px solid #CCC;\n\tborder-bottom: none;\n}\n\n#output .menu [data-topic=\"before\"] {\n\tleft: 100px;\n}\n\n#output .menu [data-topic=\"after\"] {\n\tleft: 200px;\n}\n\n#output .output {\n\twidth: 480px;\n\tmargin: 10px;\n\tpadding: 10px;\n\toverflow: hidden;\n\tcolor: #555;\n\tfont-size: 14px;\n\tborder: 1px dashed #CCC;\n\tborder-radius: 3px;\n\tdisplay: none;\n\n\t-moz-box-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\tbox-sizing: border-box;\n\n\t-moz-user-select: text;\n\t-webkit-user-select: text;\n\t-ms-user-select: text;\n}\n\n#output .css-property {\n\twidth: 100%;\n\tfloat: left;\n\twhite-space: pre;\n}\n\n#output .name {\n\twidth: 35%;\n\tfloat: left;\n}\n\n#output .value {\n\twidth: 65%;\n\tfloat: left;\n}\n\n</pre> <h3 id=\"JavaScript_Content\">JavaScript Content</h3> <pre data-language=\"js\">\n\n'use strict';\n\n/**\n * UI-SlidersManager\n */\n\nvar SliderManager = (function SliderManager() {\n\n\tvar subscribers = {};\n\tvar sliders = [];\n\n\tvar Slider = function(node) {\n\t\tvar min = node.getAttribute('data-min') | 0;\n\t\tvar max = node.getAttribute('data-max') | 0;\n\t\tvar step = node.getAttribute('data-step') | 0;\n\t\tvar value = node.getAttribute('data-value') | 0;\n\t\tvar snap = node.getAttribute('data-snap');\n\t\tvar topic = node.getAttribute('data-topic');\n\n\t\tthis.min = min;\n\t\tthis.max = max &gt; 0 ? max : 100;\n\t\tthis.step = step === 0 ? 1 : step;\n\t\tthis.value = value &lt;= max &amp;&amp; value &gt;= min ? value : (min + max) / 2 | 0;\n\t\tthis.snap = snap === \"true\" ? true : false;\n\t\tthis.topic = topic;\n\t\tthis.node = node;\n\n\t\tvar pointer = document.createElement('div');\n\t\tpointer.className = 'ui-slider-pointer';\n\t\tnode.appendChild(pointer);\n\t\tthis.pointer = pointer;\n\n\t\tsetMouseTracking(node, updateSlider.bind(this));\n\n\t\tsliders[topic] = this;\n\t\tsetValue(topic, this.value);\n\t}\n\n\tvar setButtonComponent = function setButtonComponent(node) {\n\t\tvar type = node.getAttribute('data-type');\n\t\tvar topic = node.getAttribute('data-topic');\n\t\tif (type === \"sub\") {\n\t\t\tnode.textContent = '-';\n\t\t\tnode.addEventListener(\"click\", function() {\n\t\t\t\tdecrement(topic);\n\t\t\t});\n\t\t}\n\t\tif (type === \"add\") {\n\t\t\tnode.textContent = '+';\n\t\t\tnode.addEventListener(\"click\", function() {\n\t\t\t\tincrement(topic);\n\t\t\t});\n\t\t}\n\t}\n\n\tvar setInputComponent = function setInputComponent(node) {\n\t\tvar topic\t\t= node.getAttribute('data-topic');\n\t\tvar unit_type\t= node.getAttribute('data-unit');\n\n\t\tvar input = document.createElement('input');\n\t\tvar unit = document.createElement('span');\n\t\tunit.textContent = unit_type;\n\n\t\tinput.setAttribute('type', 'text');\n\t\tnode.appendChild(input);\n\t\tnode.appendChild(unit);\n\n\t\tinput.addEventListener('click', function(e) {\n\t\t\tthis.select();\n\t\t});\n\n\t\tinput.addEventListener('change', function(e) {\n\t\t\tsetValue(topic, e.target.value | 0);\n\t\t});\n\n\t\tsubscribe(topic, function(value) {\n\t\t\tnode.children[0].value = value;\n\t\t});\n\t}\n\n\tvar increment = function increment(topic) {\n\t\tvar slider = sliders[topic];\n\t\tif (slider === null || slider === undefined)\n\t\t\treturn;\n\n\t\tif (slider.value + slider.step &lt;= slider.max) {\n\t\t\tslider.value += slider.step;\n\t\t\tsetValue(slider.topic, slider.value)\n\t\t\tnotify.call(slider);\n\t\t}\n\t};\n\n\tvar decrement = function decrement(topic) {\n\t\tvar slider = sliders[topic];\n\t\tif (slider === null || slider === undefined)\n\t\t\treturn;\n\n\t\tif (slider.value - slider.step &gt;= slider.min) {\n\t\t\tslider.value -= slider.step;\n\t\t\tsetValue(topic, slider.value)\n\t\t\tnotify.call(slider);\n\t\t}\n\t}\n\n\t// this = Slider object\n\tvar updateSlider = function updateSlider(e) {\n\t\tvar node = this.node;\n\t\tvar pos = e.pageX - node.offsetLeft;\n\t\tvar width = node.clientWidth;\n\t\tvar delta = this.max - this.min;\n\t\tvar offset = this.pointer.clientWidth + 4; // border width * 2\n\n\t\tif (pos &lt; 0) pos = 0;\n\t\tif (pos &gt; width) pos = width;\n\n\t\tvar value = pos * delta / width | 0;\n\t\tvar precision = value % this.step;\n\t\tvalue = value - precision + this.min;\n\t\tif (precision &gt; this.step / 2)\n\t\t\tvalue = value + this.step;\n\n\t\tif (this.snap)\n\t\t\tpos =  (value - this.min) * width / delta;\n\n\t\tthis.pointer.style.left = pos - offset/2 + \"px\";\n\t\tthis.value = value;\n\t\tnode.setAttribute('data-value', value);\n\t\tnotify.call(this);\n\t}\n\n\tvar setValue = function setValue(topic, value) {\n\t\tvar slider = sliders[topic];\n\n\t\tif (value &gt; slider.max || value &lt; slider.min)\n\t\t\treturn;\n\n\t\tvar delta = slider.max - slider.min;\n\t\tvar width = slider.node.clientWidth;\n\t\tvar offset = slider.pointer.clientWidth;\n\t\tvar pos =  (value - slider.min) * width / delta;\n\t\tslider.value = value;\n\t\tslider.pointer.style.left = pos - offset / 2 + \"px\";\n\t\tslider.node.setAttribute('data-value', value);\n\t\tnotify.call(slider);\n\t}\n\n\tvar setMouseTracking = function setMouseTracking(elem, callback) {\n\t\telem.addEventListener(\"mousedown\", function(e) {\n\t\t\tcallback(e);\n\t\t\tdocument.addEventListener(\"mousemove\", callback);\n\t\t});\n\n\t\tdocument.addEventListener(\"mouseup\", function(e) {\n\t\t\tdocument.removeEventListener(\"mousemove\", callback);\n\t\t});\n\t}\n\n\tvar subscribe = function subscribe(topic, callback) {\n\t\tif (subscribers[topic] === undefined)\n\t\t\tsubscribers[topic] = [];\n\t\tsubscribers[topic].push(callback);\n\t}\n\n\tvar unsubscribe = function unsubscribe(topic, callback) {\n\t\tsubscribers[topic].indexOf(callback);\n\t\tsubscribers[topic].splice(index, 1);\n\t}\n\n\tvar notify = function notify() {\n\t\tif (subscribers[this.topic] === undefined)\n\t\t\treturn;\n\n\t\tfor (var i in subscribers[this.topic]) {\n\t\t\tsubscribers[this.topic][i](this.value);\n\t\t}\n\t}\n\n\tvar init = function init() {\n\t\tvar elem, size;\n\n\t\telem = document.querySelectorAll('.ui-slider-btn-set');\n\t\tsize = elem.length;\n\t\tfor (var i = 0; i &lt; size; i++)\n\t\t\tsetButtonComponent(elem[i]);\n\n\t\telem = document.querySelectorAll('.ui-slider-input');\n\t\tsize = elem.length;\n\t\tfor (var i = 0; i &lt; size; i++)\n\t\t\tsetInputComponent(elem[i]);\n\n\t\telem = document.querySelectorAll('.ui-slider');\n\t\tsize = elem.length;\n\t\tfor (var i = 0; i &lt; size; i++)\n\t\t\tnew Slider(elem[i]);\n\t}\n\n\treturn {\n\t\tinit : init,\n\t\tsetValue : setValue,\n\t\tsubscribe : subscribe,\n\t\tunsubscribe : unsubscribe\n\t}\n\n})();\n\n/**\n * UI-ButtonManager\n */\n\nvar ButtonManager = (function CheckBoxManager() {\n\n\tvar subscribers = [];\n\tvar buttons = [];\n\n\tvar CheckBox = function CheckBox(node) {\n\t\tvar topic = node.getAttribute('data-topic');\n\t\tvar state = node.getAttribute('data-state');\n\t\tvar name = node.getAttribute('data-label');\n\t\tvar align = node.getAttribute('data-text-on');\n\n\t\tstate = (state === \"true\");\n\n\t\tvar checkbox = document.createElement(\"input\");\n\t\tvar label = document.createElement(\"label\");\n\n\t\tvar id = 'checkbox-' + topic;\n\t\tcheckbox.id = id;\n\t\tcheckbox.setAttribute('type', 'checkbox');\n\t\tcheckbox.checked = state;\n\n\t\tlabel.setAttribute('for', id);\n\t\tif (name) {\n\t\t\tlabel.className = 'text';\n\t\t\tif (align)\n\t\t\t\tlabel.className += ' ' + align;\n\t\t\tlabel.textContent = name;\n\t\t}\n\n\t\tnode.appendChild(checkbox);\n\t\tnode.appendChild(label);\n\n\t\tthis.node = node;\n\t\tthis.topic = topic;\n\t\tthis.checkbox = checkbox;\n\n\t\tcheckbox.addEventListener('change', function(e) {\n\t\t\tnotify.call(this);\n\t\t}.bind(this));\n\n\t\tbuttons[topic] = this;\n\t}\n\n\tvar getNode =  function getNode(topic) {\n\t\treturn buttons[topic].node;\n\t}\n\n\tvar setValue = function setValue(topic, value) {\n\t\ttry {\n\t\t\tbuttons[topic].checkbox.checked = value;\n\t\t\tnotify.call(buttons[topic]);\n\t\t}\n\t\tcatch(error) {\n\t\t\tconsole.log(error, topic, value);\n\t\t}\n\t}\n\n\tvar subscribe = function subscribe(topic, callback) {\n\t\tif (subscribers[topic] === undefined)\n\t\t\tsubscribers[topic] = [];\n\n\t\tsubscribers[topic].push(callback);\n\t}\n\n\tvar unsubscribe = function unsubscribe(topic, callback) {\n\t\tsubscribers[topic].indexOf(callback);\n\t\tsubscribers[topic].splice(index, 1);\n\t}\n\n\tvar notify = function notify() {\n\t\tif (subscribers[this.topic] === undefined)\n\t\t\treturn;\n\t\tfor (var i = 0; i &lt; subscribers[this.topic].length; i++)\n\t\t\tsubscribers[this.topic][i](this.checkbox.checked);\n\t}\n\n\tvar init = function init() {\n\t\tvar elem = document.querySelectorAll('.ui-checkbox');\n\t\tvar size = elem.length;\n\t\tfor (var i = 0; i &lt; size; i++)\n\t\t\tnew CheckBox(elem[i]);\n\t}\n\n\treturn {\n\t\tinit : init,\n\t\tsetValue : setValue,\n\t\tsubscribe : subscribe,\n\t\tunsubscribe : unsubscribe\n\t}\n\n})();\n\n\nwindow.addEventListener(\"load\", function(){\n\tBoxShadow.init();\n});\n\nvar BoxShadow = (function BoxShadow() {\n\n\tfunction getElemById(id) {\n\t\treturn document.getElementById(id);\n\t}\n\n\t/**\n\t * RGBA Color class\n\t */\n\n\tfunction Color() {\n\t\tthis.r = 0;\n\t\tthis.g = 0;\n\t\tthis.b = 0;\n\t\tthis.a = 1;\n\t\tthis.hue = 0;\n\t\tthis.saturation = 0;\n\t\tthis.value = 0;\n\t}\n\n\tColor.prototype.copy = function copy(obj) {\n\t\tif(obj instanceof Color !== true) {\n\t\t\tconsole.log(\"Typeof instance not Color\");\n\t\t\treturn;\n\t\t}\n\n\t\tthis.r = obj.r;\n\t\tthis.g = obj.g;\n\t\tthis.b = obj.b;\n\t\tthis.a = obj.a;\n\t\tthis.hue = obj.hue;\n\t\tthis.saturation = obj.saturation;\n\t\tthis.value = obj.value;\n\t}\n\n\tColor.prototype.setRGBA = function setRGBA(red, green, blue, alpha) {\n\t\tif (red != undefined)\n\t\t\tthis.r = red | 0;\n\t\tif (green != undefined)\n\t\t\tthis.g = green | 0;\n\t\tif (blue != undefined)\n\t\t\tthis.b = blue | 0;\n\t\tif (alpha != undefined)\n\t\t\tthis.a = alpha | 0;\n\t}\n\n\t/**\n\t * HSV/HSB (hue, saturation, value / brightness)\n\t * @param hue\t\t\t0-360\n\t * @param saturation\t0-100\n\t * @param value \t\t0-100\n\t */\n\tColor.prototype.setHSV = function setHSV(hue, saturation, value) {\n\t\tthis.hue = hue;\n\t\tthis.saturation = saturation;\n\t\tthis.value = value;\n\t\tthis.updateRGB();\n\t}\n\n\tColor.prototype.updateRGB = function updateRGB() {\n\t\tvar sat = this.saturation / 100;\n\t\tvar value = this.value / 100;\n\t\tvar C = sat * value;\n\t\tvar H = this.hue / 60;\n\t\tvar X = C * (1 - Math.abs(H % 2 - 1));\n\t\tvar m = value - C;\n\t\tvar precision = 255;\n\n\t\tC = (C + m) * precision;\n\t\tX = (X + m) * precision;\n\t\tm = m * precision;\n\n\t\tif (H &gt;= 0 &amp;&amp; H &lt; 1) {\tthis.setRGBA(C, X, m);\treturn; }\n\t\tif (H &gt;= 1 &amp;&amp; H &lt; 2) {\tthis.setRGBA(X, C, m);\treturn; }\n\t\tif (H &gt;= 2 &amp;&amp; H &lt; 3) {\tthis.setRGBA(m, C, X);\treturn; }\n\t\tif (H &gt;= 3 &amp;&amp; H &lt; 4) {\tthis.setRGBA(m, X, C);\treturn; }\n\t\tif (H &gt;= 4 &amp;&amp; H &lt; 5) {\tthis.setRGBA(X, m, C);\treturn; }\n\t\tif (H &gt;= 5 &amp;&amp; H &lt; 6) {\tthis.setRGBA(C, m, X);\treturn; }\n\t}\n\n\tColor.prototype.updateHSV = function updateHSV() {\n\t\tvar red\t\t= this.r / 255;\n\t\tvar green\t= this.g / 255;\n\t\tvar blue\t= this.b / 255;\n\n\t\tvar cmax = Math.max(red, green, blue);\n\t\tvar cmin = Math.min(red, green, blue);\n\t\tvar delta = cmax - cmin;\n\t\tvar hue = 0;\n\t\tvar saturation = 0;\n\n\t\tif (delta) {\n\t\t\tif (cmax === red ) { hue = ((green - blue) / delta); }\n\t\t\tif (cmax === green ) { hue = 2 + (blue - red) / delta; }\n\t\t\tif (cmax === blue ) { hue = 4 + (red - green) / delta; }\n\t\t\tif (cmax) saturation = delta / cmax;\n\t\t}\n\n\t\tthis.hue = 60 * hue | 0;\n\t\tif (this.hue &lt; 0) this.hue += 360;\n\t\tthis.saturation = (saturation * 100) | 0;\n\t\tthis.value = (cmax * 100) | 0;\n\t}\n\n\tColor.prototype.setHexa = function setHexa(value) {\n\t\tvar valid  = /(^#{0,1}[0-9A-F]{6}$)|(^#{0,1}[0-9A-F]{3}$)/i.test(value)\n\t\tif (valid !== true)\n\t\t\treturn;\n\n\t\tif (value[0] === '#')\n\t\t\tvalue = value.slice(1, value.length);\n\n\t\tif (value.length === 3)\n\t\t\tvalue = value.replace(/([0-9A-F])([0-9A-F])([0-9A-F])/i,\"$1$1$2$2$3$3\");\n\n\t\tthis.r = parseInt(value.substr(0, 2), 16);\n\t\tthis.g = parseInt(value.substr(2, 2), 16);\n\t\tthis.b = parseInt(value.substr(4, 2), 16);\n\n\t\tthis.alpha\t= 1;\n\t}\n\n\tColor.prototype.getHexa = function getHexa() {\n\t\tvar r = this.r.toString(16);\n\t\tvar g = this.g.toString(16);\n\t\tvar b = this.b.toString(16);\n\t\tif (this.r &lt; 16) r = '0' + r;\n\t\tif (this.g &lt; 16) g = '0' + g;\n\t\tif (this.b &lt; 16) b = '0' + b;\n\t\tvar value = '#' + r + g + b;\n\t\treturn value.toUpperCase();\n\t}\n\n\tColor.prototype.getRGBA = function getRGBA() {\n\n\t\tvar rgb = \"(\" + this.r + \", \" + this.g + \", \" + this.b;\n\t\tvar a = '';\n\t\tvar v = '';\n\t\tif (this.a !== 1) {\n\t\t\ta = 'a';\n\t\t\tv = ', ' + this.a;\n\t\t}\n\n\t\tvar value = \"rgb\" + a + rgb + v + \")\";\n\t\treturn value;\n\t}\n\n\tColor.prototype.getColor = function getColor() {\n\t\tif (this.a | 0 === 1)\n\t\t\treturn this.getHexa();\n\t\treturn this.getRGBA();\n\t}\n\n\t/**\n\t * Shadow Object\n\t */\n\tfunction Shadow() {\n\t\tthis.inset  = false;\n\t\tthis.posX   = 5;\n\t\tthis.posY   = -5;\n\t\tthis.blur   = 5;\n\t\tthis.spread = 0;\n\t\tthis.color  = new Color();\n\n\t\tvar hue\t\t\t= (Math.random() * 360) | 0;\n\t\tvar saturation\t= (Math.random() * 75) | 0;\n\t\tvar value \t\t= (Math.random() * 50 + 50) | 0;\n\t\tthis.color.setHSV(hue, saturation, value, 1);\n\t}\n\n\tShadow.prototype.computeCSS = function computeCSS() {\n\t\tvar value = \"\";\n\t\tif (this.inset === true)\n\t\t\tvalue += \"inset \";\n\t\tvalue += this.posX + \"px \";\n\t\tvalue += this.posY + \"px \";\n\t\tvalue += this.blur + \"px \";\n\t\tvalue += this.spread + \"px \";\n\t\tvalue += this.color.getColor();\n\n\t\treturn value;\n\t}\n\n\tShadow.prototype.toggleInset = function toggleInset(value) {\n\t\tif (value !== undefined || typeof value === \"boolean\")\n\t\t\tthis.inset = value;\n\t\telse\n\t\t\tthis.inset = this.inset === true ? false : true;\n\t}\n\n\tShadow.prototype.copy = function copy(obj) {\n\t\tif(obj instanceof Shadow !== true) {\n\t\t\tconsole.log(\"Typeof instance not Shadow\");\n\t\t\treturn;\n\t\t}\n\n\t\tthis.inset  = obj.inset;\n\t\tthis.posX   = obj.posX;\n\t\tthis.posY   = obj.posY;\n\t\tthis.blur   = obj.blur;\n\t\tthis.spread = obj.spread;\n\t\tthis.color.copy(obj.color);\n\t}\n\n\t/**\n\t * Color Picker\n\t */\n\tvar ColoPicker = (function ColoPicker() {\n\n\t\tvar colorpicker;\n\t\tvar hue_area;\n\t\tvar gradient_area;\n\t\tvar alpha_area;\n\t\tvar gradient_picker;\n\t\tvar hue_selector;\n\t\tvar alpha_selector;\n\t\tvar pick_object;\n\t\tvar info_rgb;\n\t\tvar info_hsv;\n\t\tvar info_hexa;\n\t\tvar output_color;\n\t\tvar color = new Color();\n\t\tvar subscribers = [];\n\n\t\tvar updateColor = function updateColor(e) {\n\t\t\tvar x = e.pageX - gradient_area.offsetLeft;\n\t\t\tvar y = e.pageY - gradient_area.offsetTop;\n\n\t\t\t// width and height should be the same\n\t\t\tvar size = gradient_area.clientWidth;\n\n\t\t\tif (x &gt; size)\n\t\t\t\tx = size;\n\t\t\tif (y &gt; size)\n\t\t\t\ty = size;\n\n\t\t\tif (x &lt; 0) x = 0;\n\t\t\tif (y &lt; 0) y = 0;\n\n\t\t\tvar value = 100 - (y * 100 / size) | 0;\n\t\t\tvar saturation = x * 100 / size | 0;\n\n\t\t\tcolor.setHSV(color.hue, saturation, value);\n\t\t\t// should update just\n\t\t\t// color pointer location\n\t\t\tupdateUI();\n\t\t\tnotify(\"color\", color);\n\t\t}\n\n\t\tvar updateHue = function updateHue(e) {\n\t\t\tvar x = e.pageX - hue_area.offsetLeft;\n\t\t\tvar width = hue_area.clientWidth;\n\n\t\t\tif (x &lt; 0) x = 0;\n\t\t\tif (x &gt; width) x = width;\n\n\t\t\tvar hue = ((360 * x) / width) | 0;\n\t\t\tif (hue === 360) hue = 359;\n\n\t\t\tcolor.setHSV(hue, color.saturation, color.value);\n\n\t\t\t// should update just\n\t\t\t// hue pointer location\n\t\t\t// picker area background\n\t\t\t// alpha area background\n\t\t\tupdateUI();\n\t\t\tnotify(\"color\", color);\n\t\t}\n\n\t\tvar updateAlpha = function updateAlpha(e) {\n\t\t\tvar x = e.pageX - alpha_area.offsetLeft;\n\t\t\tvar width = alpha_area.clientWidth;\n\n\t\t\tif (x &lt; 0) x = 0;\n\t\t\tif (x &gt; width) x = width;\n\n\t\t\tcolor.a = (x / width).toFixed(2);\n\n\t\t\t// should update just\n\t\t\t// alpha pointer location\n\t\t\tupdateUI();\n\t\t\tnotify(\"color\", color);\n\t\t}\n\n\t\tvar setHueGfx = function setHueGfx(hue) {\n\t\t\tvar sat = color.saturation;\n\t\t\tvar val = color.value;\n\t\t\tvar alpha = color.a;\n\n\t\t\tcolor.setHSV(hue, 100, 100);\n\t\t\tgradient_area.style.backgroundColor = color.getHexa();\n\n\t\t\tcolor.a = 0;\n\t\t\tvar start = color.getRGBA();\n\t\t\tcolor.a = 1;\n\t\t\tvar end = color.getRGBA();\n\t\t\tcolor.a = alpha;\n\n\t\t\tvar gradient = '-moz-linear-gradient(left, ' +\tstart + '0%, ' + end + ' 100%)';\n\t\t\talpha_area.style.background = gradient;\n\t\t}\n\n\t\tvar updateUI = function updateUI() {\n\t\t\tvar x, y;\t\t// coordinates\n\t\t\tvar size;\t\t// size of the area\n\t\t\tvar offset;\t\t// pointer graphic selector offset\n\n\t\t\t// Set color pointer location\n\t\t\tsize = gradient_area.clientWidth;\n\t\t\toffset = gradient_picker.clientWidth / 2 + 2;\n\n\t\t\tx = (color.saturation * size / 100) | 0;\n\t\t\ty = size - (color.value * size / 100) | 0;\n\n\t\t\tgradient_picker.style.left = x - offset + \"px\";\n\t\t\tgradient_picker.style.top = y - offset + \"px\";\n\n\t\t\t// Set hue pointer location\n\t\t\tsize = hue_area.clientWidth;\n\t\t\toffset = hue_selector.clientWidth/2;\n\t\t\tx = (color.hue * size / 360 ) | 0;\n\t\t\thue_selector.style.left = x - offset + \"px\";\n\n\t\t\t// Set alpha pointer location\n\t\t\tsize = alpha_area.clientWidth;\n\t\t\toffset = alpha_selector.clientWidth/2;\n\t\t\tx = (color.a * size) | 0;\n\t\t\talpha_selector.style.left = x - offset + \"px\";\n\n\t\t\t// Set picker area background\n\t\t\tvar nc = new Color();\n\t\t\tnc.copy(color);\n\t\t\tif (nc.hue === 360) nc.hue = 0;\n\t\t\tnc.setHSV(nc.hue, 100, 100);\n\t\t\tgradient_area.style.backgroundColor = nc.getHexa();\n\n\t\t\t// Set alpha area background\n\t\t\tnc.copy(color);\n\t\t\tnc.a = 0;\n\t\t\tvar start = nc.getRGBA();\n\t\t\tnc.a = 1;\n\t\t\tvar end = nc.getRGBA();\n\t\t\tvar gradient = '-moz-linear-gradient(left, ' +\tstart + '0%, ' + end + ' 100%)';\n\t\t\talpha_area.style.background = gradient;\n\n\t\t\t// Update color info\n\t\t\tnotify(\"color\", color);\n\t\t\tnotify(\"hue\", color.hue);\n\t\t\tnotify(\"saturation\", color.saturation);\n\t\t\tnotify(\"value\", color.value);\n\t\t\tnotify(\"r\", color.r);\n\t\t\tnotify(\"g\", color.g);\n\t\t\tnotify(\"b\", color.b);\n\t\t\tnotify(\"a\", color.a);\n\t\t\tnotify(\"hexa\", color.getHexa());\n\t\t\toutput_color.style.backgroundColor = color.getRGBA();\n\t\t}\n\n\t\tvar setInputComponent = function setInputComponent(node) {\n\t\t\tvar topic = node.getAttribute('data-topic');\n\t\t\tvar title = node.getAttribute('data-title');\n\t\t\tvar action = node.getAttribute('data-action');\n\t\t\ttitle = title === null ? '' : title;\n\n\t\t\tvar input = document.createElement('input');\n\t\t\tvar info = document.createElement('span');\n\t\t\tinfo.textContent = title;\n\n\t\t\tinput.setAttribute('type', 'text');\n\t\t\tinput.setAttribute('data-action', 'set-' + action + '-' + topic);\n\t\t\tnode.appendChild(info);\n\t\t\tnode.appendChild(input);\n\n\t\t\tinput.addEventListener('click', function(e) {\n\t\t\t\tthis.select();\n\t\t\t});\n\n\t\t\tinput.addEventListener('change', function(e) {\n\t\t\t\tif (action === 'HSV')\n\t\t\t\t\tinputChangeHSV(topic);\n\t\t\t\tif (action === 'RGB')\n\t\t\t\t\tinputChangeRGB(topic);\n\t\t\t\tif (action === 'alpha')\n\t\t\t\t\tinputChangeAlpha(topic);\n\t\t\t\tif (action === 'hexa')\n\t\t\t\t\tinputChangeHexa(topic);\n\t\t\t});\n\n\t\t\tsubscribe(topic, function(value) {\n\t\t\t\tnode.children[1].value = value;\n\t\t\t});\n\t\t}\n\n\t\tvar inputChangeHSV = function actionHSV(topic) {\n\t\t\tvar selector = \"[data-action='set-HSV-\" + topic + \"']\";\n\t\t\tvar node = document.querySelector(\"#colorpicker \" + selector);\n\t\t\tvar value = parseInt(node.value);\n\n\t\t\tif (typeof value === 'number' &amp;&amp; isNaN(value) === false &amp;&amp;\n\t\t\t\tvalue &gt;= 0 &amp;&amp; value &lt; 360)\n\t\t\t\tcolor[topic] = value;\n\n\t\t\tcolor.updateRGB();\n\t\t\tupdateUI();\n\t\t}\n\n\t\tvar inputChangeRGB = function inputChangeRGB(topic) {\n\t\t\tvar selector = \"[data-action='set-RGB-\" + topic + \"']\";\n\t\t\tvar node = document.querySelector(\"#colorpicker \" + selector);\n\t\t\tvar value = parseInt(node.value);\n\n\t\t\tif (typeof value === 'number' &amp;&amp; isNaN(value) === false &amp;&amp;\n\t\t\t\tvalue &gt;= 0 &amp;&amp; value &lt;= 255)\n\t\t\t\tcolor[topic] = value;\n\n\t\t\tcolor.updateHSV();\n\t\t\tupdateUI();\n\t\t}\n\n\t\tvar inputChangeAlpha = function inputChangeAlpha(topic) {\n\t\t\tvar selector = \"[data-action='set-alpha-\" + topic + \"']\";\n\t\t\tvar node = document.querySelector(\"#colorpicker \" + selector);\n\t\t\tvar value = parseFloat(node.value);\n\n\t\t\tif (typeof value === 'number' &amp;&amp; isNaN(value) === false &amp;&amp;\n\t\t\t\tvalue &gt;= 0 &amp;&amp; value &lt;= 1)\n\t\t\t\tcolor.a = value.toFixed(2);\n\n\t\t\tupdateUI();\n\t\t}\n\n\t\tvar inputChangeHexa = function inputChangeHexa(topic) {\n\t\t\tvar selector = \"[data-action='set-hexa-\" + topic + \"']\";\n\t\t\tvar node = document.querySelector(\"#colorpicker \" + selector);\n\t\t\tvar value = node.value;\n\t\t\tcolor.setHexa(value);\n\t\t\tcolor.updateHSV();\n\t\t\tupdateUI();\n\t\t}\n\n\t\tvar setMouseTracking = function setMouseTracking(elem, callback) {\n\n\t\t\telem.addEventListener(\"mousedown\", function(e) {\n\t\t\t\tcallback(e);\n\t\t\t\tdocument.addEventListener(\"mousemove\", callback);\n\t\t\t});\n\n\t\t\tdocument.addEventListener(\"mouseup\", function(e) {\n\t\t\t\tdocument.removeEventListener(\"mousemove\", callback);\n\t\t\t});\n\t\t}\n\n\t\t/*\n\t\t * Observer\n\t\t */\n\t\tvar setColor = function setColor(obj) {\n\t\t\tif(obj instanceof Color !== true) {\n\t\t\t\tconsole.log(\"Typeof instance not Color\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcolor.copy(obj);\n\t\t\tupdateUI();\n\t\t}\n\n\t\tvar subscribe = function subscribe(topic, callback) {\n\t\t\tif (subscribers[topic] === undefined)\n\t\t\t\tsubscribers[topic] = [];\n\n\t\t\tsubscribers[topic].push(callback);\n\t\t}\n\n\t\tvar unsubscribe = function unsubscribe(callback) {\n\t\t\tsubscribers.indexOf(callback);\n\t\t\tsubscribers.splice(index, 1);\n\t\t}\n\n\t\tvar notify = function notify(topic, value) {\n\t\t\tfor (var i in subscribers[topic])\n\t\t\t\tsubscribers[topic][i](value);\n\t\t}\n\n\t\tvar init = function init() {\n\t\t\tcolorpicker\t\t= getElemById(\"colorpicker\");\n\t\t\thue_area\t\t= getElemById(\"hue\");\n\t\t\tgradient_area\t= getElemById(\"gradient\");\n\t\t\talpha_area\t\t= getElemById(\"alpha\");\n\t\t\tgradient_picker\t= getElemById(\"gradient_picker\");\n\t\t\thue_selector\t= getElemById(\"hue_selector\");\n\t\t\talpha_selector\t= getElemById(\"alpha_selector\");\n\t\t\toutput_color\t= getElemById(\"output_color\");\n\n\t\t\tvar elem = document.querySelectorAll('#colorpicker .input');\n\t\t\tvar size = elem.length;\n\t\t\tfor (var i = 0; i &lt; size; i++)\n\t\t\t\tsetInputComponent(elem[i]);\n\n\t\t\tsetMouseTracking(gradient_area, updateColor);\n\t\t\tsetMouseTracking(hue_area, updateHue);\n\t\t\tsetMouseTracking(alpha_area, updateAlpha);\n\n\t\t}\n\n\t\treturn {\n\t\t\tinit : init,\n\t\t\tsetColor : setColor,\n\t\t\tsubscribe : subscribe,\n\t\t\tunsubscribe : unsubscribe\n\t\t}\n\n\t})();\n\n\t/**\n\t * Shadow dragging\n\t */\n\tvar PreviewMouseTracking = (function Drag() {\n\t\tvar active = false;\n\t\tvar lastX = 0;\n\t\tvar lastY = 0;\n\t\tvar subscribers = [];\n\n\t\tvar init = function init(id) {\n\t\t\tvar elem = getElemById(id);\n\t\t\telem.addEventListener('mousedown', dragStart, false);\n\t\t\tdocument.addEventListener('mouseup', dragEnd, false);\n\t\t}\n\n\t\tvar dragStart = function dragStart(e) {\n\t\t\tif (e.button !== 0)\n\t\t\t\treturn;\n\n\t\t\tactive = true;\n\t\t\tlastX = e.clientX;\n\t\t\tlastY = e.clientY;\n\t\t\tdocument.addEventListener('mousemove', mouseDrag, false);\n\t\t}\n\n\t\tvar dragEnd = function dragEnd(e) {\n\t\t\tif (e.button !== 0)\n\t\t\t\treturn;\n\n\t\t\tif (active === true) {\n\t\t\t\tactive = false;\n\t\t\t\tdocument.removeEventListener('mousemove', mouseDrag, false);\n\t\t\t}\n\t\t}\n\n\t\tvar mouseDrag = function mouseDrag(e) {\n\t\t\tnotify(e.clientX - lastX, e.clientY - lastY);\n\t\t\tlastX = e.clientX;\n\t\t\tlastY = e.clientY;\n\t\t}\n\n\t\tvar subscribe = function subscribe(callback) {\n\t\t\tsubscribers.push(callback);\n\t\t}\n\n\t\tvar unsubscribe = function unsubscribe(callback) {\n\t\t\tvar index = subscribers.indexOf(callback);\n\t\t\tsubscribers.splice(index, 1);\n\t\t}\n\n\t\tvar notify = function notify(deltaX, deltaY) {\n\t\t\tfor (var i in subscribers)\n\t\t\t\tsubscribers[i](deltaX, deltaY);\n\t\t}\n\n\t\treturn {\n\t\t\tinit : init,\n\t\t\tsubscribe : subscribe,\n\t\t\tunsubscribe : unsubscribe\n\t\t}\n\n\t})();\n\n\t/*\n\t * Element Class\n\t */\n\tvar CssClass = function CssClass(id) {\n\t\tthis.left = 0;\n\t\tthis.top = 0;\n\t\tthis.rotate = 0;\n\t\tthis.width = 300;\n\t\tthis.height = 100;\n\t\tthis.display = true;\n\t\tthis.border = true;\n\t\tthis.zIndex = -1;\n\t\tthis.bgcolor = new Color();\n\t\tthis.id = id;\n\t\tthis.node = getElemById('obj-' + id);\n\t\tthis.object = getElemById(id);\n\t\tthis.shadowID = null;\n\t\tthis.shadows = []\n\t\tthis.render = [];\n\t\tthis.init();\n\t}\n\n\tCssClass.prototype.init = function init() {\n\t\tthis.left = ((this.node.parentNode.clientWidth - this.node.clientWidth) / 2) | 0;\n\t\tthis.top = ((this.node.parentNode.clientHeight - this.node.clientHeight) / 2) | 0;\n\n\t\tthis.setTop(this.top);\n\t\tthis.setLeft(this.left);\n\t\tthis.setHeight(this.height);\n\t\tthis.setWidth(this.width);\n\t\tthis.bgcolor.setHSV(0, 0, 100);\n\t\tthis.updateBgColor(this.bgcolor);\n\t}\n\n\tCssClass.prototype.updatePos = function updatePos(deltaX, deltaY) {\n\t\tthis.left += deltaX;\n\t\tthis.top += deltaY;\n\t\tthis.node.style.top = this.top + \"px\";\n\t\tthis.node.style.left = this.left + \"px\";\n\t\tSliderManager.setValue(\"left\", this.left);\n\t\tSliderManager.setValue(\"top\", this.top);\n\t}\n\n\tCssClass.prototype.setLeft = function setLeft(value) {\n\t\tthis.left = value;\n\t\tthis.node.style.left = this.left + \"px\";\n\t\tOutputManager.updateProperty(this.id, 'left', this.left + 'px');\n\t}\n\n\tCssClass.prototype.setTop = function setTop(value) {\n\t\tthis.top = value;\n\t\tthis.node.style.top = this.top + 'px';\n\t\tOutputManager.updateProperty(this.id, 'top', this.top + 'px');\n\t}\n\n\tCssClass.prototype.setWidth = function setWidth(value) {\n\t\tthis.width = value;\n\t\tthis.node.style.width = this.width + 'px';\n\t\tOutputManager.updateProperty(this.id, 'width', this.width + 'px');\n\t}\n\n\tCssClass.prototype.setHeight = function setHeight(value) {\n\t\tthis.height = value;\n\t\tthis.node.style.height = this.height + 'px';\n\t\tOutputManager.updateProperty(this.id, 'height', this.height + 'px');\n\t}\n\n\t// Browser support\n\tCssClass.prototype.setRotate = function setRotate(value) {\n\t\tvar cssvalue = 'rotate(' + value +'deg)';\n\n\t\tthis.node.style.transform = cssvalue;\n\t\tthis.node.style.webkitTransform = cssvalue;\n\t\tthis.node.style.msTransform = cssvalue;\n\n\t\tif (value !== 0) {\n\t\t\tif (this.rotate === 0) {\n\t\t\t\tOutputManager.toggleProperty(this.id, 'transform', true);\n\t\t\t\tOutputManager.toggleProperty(this.id, '-webkit-transform', true);\n\t\t\t\tOutputManager.toggleProperty(this.id, '-ms-transform', true);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tOutputManager.toggleProperty(this.id, 'transform', false);\n\t\t\tOutputManager.toggleProperty(this.id, '-webkit-transform', false);\n\t\t\tOutputManager.toggleProperty(this.id, '-ms-transform', false);\n\t\t}\n\n\t\tOutputManager.updateProperty(this.id, 'transform', cssvalue);\n\t\tOutputManager.updateProperty(this.id, '-webkit-transform', cssvalue);\n\t\tOutputManager.updateProperty(this.id, '-ms-transform', cssvalue);\n\t\tthis.rotate = value;\n\t}\n\n\tCssClass.prototype.setzIndex = function setzIndex(value) {\n\t\tthis.node.style.zIndex = value;\n\t\tOutputManager.updateProperty(this.id, 'z-index', value);\n\t\tthis.zIndex = value;\n\t}\n\n\tCssClass.prototype.toggleDisplay = function toggleDisplay(value) {\n\t\tif (typeof value !== \"boolean\" || this.display === value)\n\t\t\treturn;\n\n\t\tthis.display = value;\n\t\tvar display = this.display === true ? \"block\" : \"none\";\n\t\tthis.node.style.display = display;\n\t\tthis.object.style.display = display;\n\t}\n\n\tCssClass.prototype.toggleBorder = function toggleBorder(value) {\n\t\tif (typeof value !== \"boolean\" || this.border === value)\n\t\t\treturn;\n\n\t\tthis.border = value;\n\t\tvar border = this.border === true ? \"1px solid #CCC\" : \"none\";\n\t\tthis.node.style.border = border;\n\t}\n\n\tCssClass.prototype.updateBgColor = function updateBgColor(color) {\n\t\tthis.bgcolor.copy(color);\n\t\tthis.node.style.backgroundColor = color.getColor();\n\t\tOutputManager.updateProperty(this.id, 'background-color', color.getColor());\n\t}\n\n\tCssClass.prototype.updateShadows = function updateShadows() {\n\t\tif (this.render.length === 0)\n\t\t\tOutputManager.toggleProperty(this.id, 'box-shadow', false);\n\t\tif (this.render.length === 1)\n\t\t\tOutputManager.toggleProperty(this.id, 'box-shadow', true);\n\n\t\tthis.node.style.boxShadow = this.render.join(\", \");\n\t\tOutputManager.updateProperty(this.id, 'box-shadow', this.render.join(\", \\n\"));\n\n\t}\n\n\n\t/**\n\t * Tool Manager\n\t */\n\tvar Tool = (function Tool() {\n\n\t\tvar preview;\n\t\tvar classes = [];\n\t\tvar active = null;\n\t\tvar animate = false;\n\n\t\t/*\n\t\t * Toll actions\n\t\t */\n\t\tvar addCssClass = function addCssClass(id) {\n\t\t\tclasses[id] = new CssClass(id);\n\t\t}\n\n\t\tvar setActiveClass = function setActiveClass(id) {\n\t\t\tactive = classes[id];\n\t\t\tactive.shadowID = null;\n\t\t\tColoPicker.setColor(classes[id].bgcolor);\n\t\t\tSliderManager.setValue(\"top\", active.top);\n\t\t\tSliderManager.setValue(\"left\", active.left);\n\t\t\tSliderManager.setValue(\"rotate\", active.rotate);\n\t\t\tSliderManager.setValue(\"z-index\", active.zIndex);\n\t\t\tSliderManager.setValue(\"width\", active.width);\n\t\t\tSliderManager.setValue(\"height\", active.height);\n\t\t\tButtonManager.setValue(\"border-state\", active.border);\n\t\t\tactive.updateShadows();\n\t\t}\n\n\t\tvar disableClass = function disableClass(topic) {\n\t\t\tclasses[topic].toggleDisplay(false);\n\t\t\tButtonManager.setValue(topic, false);\n\t\t}\n\n\t\tvar addShadow = function addShadow(position) {\n\t\t\tif (animate === true)\n\t\t\t\treturn -1;\n\n\t\t\tactive.shadows.splice(position, 0, new Shadow());\n\t\t\tactive.render.splice(position, 0, null);\n\t\t}\n\n\t\tvar swapShadow = function swapShadow(id1, id2) {\n\t\t\tvar x = active.shadows[id1];\n\t\t\tactive.shadows[id1] = active.shadows[id2];\n\t\t\tactive.shadows[id2] = x;\n\t\t\tupdateShadowCSS(id1);\n\t\t\tupdateShadowCSS(id2);\n\t\t}\n\n\t\tvar deleteShadow = function deleteShadow(position) {\n\t\t\tactive.shadows.splice(position, 1);\n\t\t\tactive.render.splice(position, 1);\n\t\t\tactive.updateShadows();\n\t\t}\n\n\t\tvar setActiveShadow = function setActiveShadow(id, glow) {\n\t\t\tactive.shadowID = id;\n\t\t\tColoPicker.setColor(active.shadows[id].color);\n\t\t\tButtonManager.setValue(\"inset\", active.shadows[id].inset);\n\t\t\tSliderManager.setValue(\"blur\", active.shadows[id].blur);\n\t\t\tSliderManager.setValue(\"spread\", active.shadows[id].spread);\n\t\t\tSliderManager.setValue(\"posX\", active.shadows[id].posX);\n\t\t\tSliderManager.setValue(\"posY\", active.shadows[id].posY);\n\t\t\tif (glow === true)\n\t\t\t\taddGlowEffect(id);\n\t\t}\n\n\t\tvar addGlowEffect = function addGlowEffect(id) {\n\t\t\tif (animate === true)\n\t\t\t\treturn;\n\n\t\t\tanimate = true;\n\t\t\tvar store = new Shadow();\n\t\t\tvar shadow = active.shadows[id];\n\n\t\t\tstore.copy(shadow);\n\t\t\tshadow.color.setRGBA(40, 125, 200, 1);\n\t\t\tshadow.blur = 10;\n\t\t\tshadow.spread = 10;\n\n\t\t\tactive.node.style.transition = \"box-shadow 0.2s\";\n\t\t\tupdateShadowCSS(id);\n\n\t\t\tsetTimeout(function() {\n\t\t\t\tshadow.copy(store);\n\t\t\t\tupdateShadowCSS(id);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tactive.node.style.removeProperty(\"transition\");\n\t\t\t\t\tanimate = false;\n\t\t\t\t}, 100);\n\t\t\t}, 200);\n\t\t}\n\n\t\tvar updateActivePos = function updateActivePos(deltaX, deltaY) {\n\t\t\tif (active.shadowID === null)\n\t\t\t\tactive.updatePos(deltaX, deltaY);\n\t\t\telse\n\t\t\t\tupdateShadowPos(deltaX, deltaY);\n\t\t}\n\n\t\t/*\n\t\t * Shadow properties\n\t\t */\n\t\tvar updateShadowCSS = function updateShadowCSS(id) {\n\t\t\tactive.render[id] = active.shadows[id].computeCSS();\n\t\t\tactive.updateShadows();\n\t\t}\n\n\t\tvar toggleShadowInset = function toggleShadowInset(value) {\n\t\t\tif (active.shadowID === null)\n\t\t\t\treturn;\n\t\t\tactive.shadows[active.shadowID].toggleInset(value);\n\t\t\tupdateShadowCSS(active.shadowID);\n\t\t}\n\n\t\tvar updateShadowPos = function updateShadowPos(deltaX, deltaY) {\n\t\t\tvar shadow = active.shadows[active.shadowID];\n\t\t\tshadow.posX += deltaX;\n\t\t\tshadow.posY += deltaY;\n\t\t\tSliderManager.setValue(\"posX\", shadow.posX);\n\t\t\tSliderManager.setValue(\"posY\", shadow.posY);\n\t\t\tupdateShadowCSS(active.shadowID);\n\t\t}\n\n\t\tvar setShadowPosX = function setShadowPosX(value) {\n\t\t\tif (active.shadowID === null)\n\t\t\t\treturn;\n\t\t\tactive.shadows[active.shadowID].posX = value;\n\t\t\tupdateShadowCSS(active.shadowID);\n\t\t}\n\n\t\tvar setShadowPosY = function setShadowPosY(value) {\n\t\t\tif (active.shadowID === null)\n\t\t\t\treturn;\n\t\t\tactive.shadows[active.shadowID].posY = value;\n\t\t\tupdateShadowCSS(active.shadowID);\n\t\t}\n\n\t\tvar setShadowBlur = function setShadowBlur(value) {\n\t\t\tif (active.shadowID === null)\n\t\t\t\treturn;\n\t\t\tactive.shadows[active.shadowID].blur = value;\n\t\t\tupdateShadowCSS(active.shadowID);\n\t\t}\n\n\t\tvar setShadowSpread = function setShadowSpread(value) {\n\t\t\tif (active.shadowID === null)\n\t\t\t\treturn;\n\t\t\tactive.shadows[active.shadowID].spread = value;\n\t\t\tupdateShadowCSS(active.shadowID);\n\t\t}\n\n\t\tvar updateShadowColor = function updateShadowColor(color) {\n\t\t\tactive.shadows[active.shadowID].color.copy(color);\n\t\t\tupdateShadowCSS(active.shadowID);\n\t\t}\n\n\t\t/*\n\t\t * Element Properties\n\t\t */\n\t\tvar updateColor = function updateColor(color) {\n\t\t\tif (active.shadowID === null)\n\t\t\t\tactive.updateBgColor(color);\n\t\t\telse\n\t\t\t\tupdateShadowColor(color);\n\t\t}\n\n\t\tvar init = function init() {\n\t\t\tpreview = getElemById(\"preview\");\n\n\t\t\tColoPicker.subscribe(\"color\", updateColor);\n\t\t\tPreviewMouseTracking.subscribe(updateActivePos);\n\n\t\t\t// Affects shadows\n\t\t\tButtonManager.subscribe(\"inset\", toggleShadowInset);\n\t\t\tSliderManager.subscribe(\"posX\", setShadowPosX);\n\t\t\tSliderManager.subscribe(\"posY\", setShadowPosY);\n\t\t\tSliderManager.subscribe(\"blur\", setShadowBlur);\n\t\t\tSliderManager.subscribe(\"spread\", setShadowSpread);\n\n\t\t\t// Affects element\n\t\t\tSliderManager.subscribe(\"top\", function(value){\n\t\t\t\tactive.setTop(value);\n\t\t\t});\n\t\t\tSliderManager.subscribe(\"left\", function(value){\n\t\t\t\tactive.setLeft(value);\n\t\t\t});\n\t\t\tSliderManager.subscribe(\"rotate\", function(value) {\n\t\t\t\tif (active == classes[\"element\"])\n\t\t\t\t\treturn;\n\t\t\t\tactive.setRotate(value);\n\t\t\t});\n\n\t\t\tSliderManager.subscribe(\"z-index\", function(value) {\n\t\t\t\tif (active == classes[\"element\"])\n\t\t\t\t\treturn;\n\t\t\t\tactive.setzIndex(value);\n\t\t\t});\n\n\t\t\tSliderManager.subscribe(\"width\", function(value) {\n\t\t\t\tactive.setWidth(value)\n\t\t\t});\n\n\t\t\tSliderManager.subscribe(\"height\", function(value) {\n\t\t\t\tactive.setHeight(value)\n\t\t\t});\n\n\t\t\t// Actions\n\t\t\tclasses['before'].top = -30;\n\t\t\tclasses['before'].left = -30;\n\t\t\tclasses['after'].top = 30;\n\t\t\tclasses['after'].left = 30;\n\t\t\tclasses['before'].toggleDisplay(false);\n\t\t\tclasses['after'].toggleDisplay(false);\n\t\t\tButtonManager.setValue('before', false);\n\t\t\tButtonManager.setValue('after', false);\n\n\t\t\tButtonManager.subscribe(\"before\", classes['before'].toggleDisplay.bind(classes['before']));\n\t\t\tButtonManager.subscribe(\"after\", classes['after'].toggleDisplay.bind(classes['after']));\n\n\t\t\tButtonManager.subscribe(\"border-state\", function(value) {\n\t\t\t\tactive.toggleBorder(value);\n\t\t\t});\n\n\t\t}\n\n\t\treturn {\n\t\t\tinit \t\t\t: init,\n\t\t\taddShadow\t\t: addShadow,\n\t\t\tswapShadow\t\t: swapShadow,\n\t\t\taddCssClass\t\t: addCssClass,\n\t\t\tdisableClass\t: disableClass,\n\t\t\tdeleteShadow\t: deleteShadow,\n\t\t\tsetActiveClass\t: setActiveClass,\n\t\t\tsetActiveShadow : setActiveShadow\n\t\t}\n\n\t})();\n\n\t/**\n\t * Layer Manager\n\t */\n\tvar LayerManager = (function LayerManager() {\n\t\tvar stacks = [];\n\t\tvar active = {\n\t\t\tnode : null,\n\t\t\tstack : null\n\t\t}\n\t\tvar elements = {};\n\n\t\tvar mouseEvents = function mouseEvents(e) {\n\t\t\tvar node = e.target;\n\t\t\tvar type = node.getAttribute('data-type');\n\n\t\t\tif (type === 'subject')\n\t\t\t\tsetActiveStack(stacks[node.id]);\n\n\t\t\tif (type === 'disable') {\n\t\t\t\tTool.disableClass(node.parentNode.id);\n\t\t\t\tsetActiveStack(stacks['element']);\n\t\t\t}\n\n\t\t\tif (type === 'add')\n\t\t\t\tactive.stack.addLayer();\n\n\t\t\tif (type === 'layer')\n\t\t\t\tactive.stack.setActiveLayer(node);\n\n\t\t\tif (type === 'delete')\n\t\t\t\tactive.stack.deleteLayer(node.parentNode);\n\n\t\t\tif (type === 'move-up')\n\t\t\t\tactive.stack.moveLayer(1);\n\n\t\t\tif (type === 'move-down')\n\t\t\t\tactive.stack.moveLayer(-1);\n\t\t}\n\n\t\tvar setActiveStack = function setActiveStack(stackObj) {\n\t\t\tactive.stack.hide();\n\t\t\tactive.stack = stackObj;\n\t\t\tactive.stack.show();\n\t\t}\n\n\t\t/*\n\t\t * Stack object\n\t\t */\n\t\tvar Stack = function Stack(subject) {\n\t\t\tvar S = document.createElement('div');\n\t\t\tvar title = document.createElement('div');\n\t\t\tvar stack = document.createElement('div');\n\n\t\t\tS.className = 'container';\n\t\t\tstack.className = 'stack';\n\t\t\ttitle.className = 'title';\n\t\t\ttitle.textContent = subject.getAttribute('data-title');\n\t\t\tS.appendChild(title);\n\t\t\tS.appendChild(stack);\n\n\t\t\tthis.id = subject.id;\n\t\t\tthis.container = S;\n\t\t\tthis.stack = stack;\n\t\t\tthis.subject = subject;\n\t\t\tthis.order = [];\n\t\t\tthis.uid = 0;\n\t\t\tthis.count = 0;\n\t\t\tthis.layer = null;\n\t\t\tthis.layerID = 0;\n\t\t}\n\n\t\tStack.prototype.addLayer = function addLayer() {\n\t\t\tif (Tool.addShadow(this.layerID) == -1)\n\t\t\t\treturn;\n\n\t\t\tvar uid = this.getUID();\n\t\t\tvar layer = this.createLayer(uid);\n\n\t\t\tif (this.layer === null &amp;&amp; this.stack.children.length &gt;= 1)\n\t\t\t\tthis.layer = this.stack.children[0];\n\n\t\t\tthis.stack.insertBefore(layer, this.layer);\n\t\t\tthis.order.splice(this.layerID, 0, uid);\n\t\t\tthis.count++;\n\t\t\tthis.setActiveLayer(layer);\n\t\t}\n\n\t\tStack.prototype.createLayer = function createLayer(uid) {\n\t\t\tvar layer = document.createElement('div');\n\t\t\tvar del = document.createElement('span');\n\n\t\t\tlayer.className = 'node';\n\t\t\tlayer.setAttribute('data-shid', uid);\n\t\t\tlayer.setAttribute('data-type', 'layer');\n\t\t\tlayer.textContent = 'shadow ' + uid;\n\n\t\t\tdel.className = 'delete';\n\t\t\tdel.setAttribute('data-type', 'delete');\n\n\t\t\tlayer.appendChild(del);\n\t\t\treturn layer;\n\t\t}\n\n\t\tStack.prototype.getUID = function getUID() {\n\t\t\treturn this.uid++;\n\t\t}\n\n\t\t// SOLVE IE BUG\n\t\tStack.prototype.moveLayer = function moveLayer(direction) {\n\t\t\tif (this.count &lt;= 1 || this.layer === null)\n\t\t\t\treturn;\n\t\t\tif (direction === -1 &amp;&amp; this.layerID === (this.count - 1) )\n\t\t\t\treturn;\n\t\t\tif (direction === 1 &amp;&amp; this.layerID === 0 )\n\t\t\t\treturn;\n\n\t\t\tif (direction === -1) {\n\t\t\t\tvar before = null;\n\t\t\t\tTool.swapShadow(this.layerID, this.layerID + 1);\n\t\t\t\tthis.swapOrder(this.layerID, this.layerID + 1);\n\t\t\t\tthis.layerID += 1;\n\n\t\t\t\tif (this.layerID + 1 !== this.count)\n\t\t\t\t\tbefore = this.stack.children[this.layerID + 1];\n\n\t\t\t\tthis.stack.insertBefore(this.layer, before);\n\t\t\t\tTool.setActiveShadow(this.layerID, false);\n\t\t\t}\n\n\t\t\tif (direction === 1) {\n\t\t\t\tTool.swapShadow(this.layerID, this.layerID - 1);\n\t\t\t\tthis.swapOrder(this.layerID, this.layerID - 1);\n\t\t\t\tthis.layerID -= 1;\n\t\t\t\tthis.stack.insertBefore(this.layer, this.stack.children[this.layerID]);\n\t\t\t\tTool.setActiveShadow(this.layerID, false);\n\t\t\t}\n\t\t}\n\n\t\tStack.prototype.swapOrder = function swapOrder(pos1, pos2) {\n\t\t\tvar x = this.order[pos1];\n\t\t\tthis.order[pos1] = this.order[pos2];\n\t\t\tthis.order[pos2] = x;\n\t\t}\n\n\t\tStack.prototype.deleteLayer = function deleteLayer(node) {\n\t\t\tvar shadowID =  node.getAttribute('data-shid') | 0;\n\t\t\tvar index = this.order.indexOf(shadowID);\n\t\t\tthis.stack.removeChild(this.stack.children[index]);\n\t\t\tthis.order.splice(index, 1);\n\t\t\tthis.count--;\n\n\t\t\tTool.deleteShadow(index);\n\n\t\t\tif (index &gt; this.layerID)\n\t\t\t\treturn;\n\n\t\t\tif (index == this.layerID) {\n\t\t\t\tif (this.count &gt;= 1) {\n\t\t\t\t\tthis.layerID = 0;\n\t\t\t\t\tthis.setActiveLayer(this.stack.children[0], true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.layer = null;\n\t\t\t\t\tthis.show();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (index &lt; this.layerID) {\n\t\t\t\tthis.layerID--;\n\t\t\t\tTool.setActiveShadow(this.layerID, true);\n\t\t\t}\n\n\t\t}\n\n\t\tStack.prototype.setActiveLayer = function setActiveLayer(node) {\n\t\t\telements.shadow_properties.style.display = 'block';\n\t\t\telements.element_properties.style.display = 'none';\n\n\t\t\tif (this.layer)\n\t\t\t\tthis.layer.removeAttribute('data-active');\n\n\t\t\tthis.layer = node;\n\t\t\tthis.layer.setAttribute('data-active', 'layer');\n\n\t\t\tvar shadowID =  node.getAttribute('data-shid') | 0;\n\t\t\tthis.layerID = this.order.indexOf(shadowID);\n\t\t\tTool.setActiveShadow(this.layerID, true);\n\t\t}\n\n\t\tStack.prototype.unsetActiveLayer = function unsetActiveLayer() {\n\t\t\tif (this.layer)\n\t\t\t\tthis.layer.removeAttribute('data-active');\n\n\t\t\tthis.layer = null;\n\t\t\tthis.layerID = 0;\n\t\t}\n\n\t\tStack.prototype.hide = function hide() {\n\t\t\tthis.unsetActiveLayer();\n\t\t\tthis.subject.removeAttribute('data-active');\n\t\t\tvar style = this.container.style;\n\t\t\tstyle.left = '100%';\n\t\t\tstyle.zIndex = '0';\n\t\t}\n\n\t\tStack.prototype.show = function show() {\n\t\t\telements.shadow_properties.style.display = 'none';\n\t\t\telements.element_properties.style.display = 'block';\n\n\t\t\tif (this.id === 'element') {\n\t\t\t\telements.zIndex.style.display = 'none';\n\t\t\t\telements.transform_rotate.style.display = 'none';\n\t\t\t}\n\t\t\telse {\n\t\t\t\telements.zIndex.style.display = 'block';\n\t\t\t\telements.transform_rotate.style.display = 'block';\n\t\t\t}\n\n\t\t\tthis.subject.setAttribute('data-active', 'subject');\n\t\t\tvar style = this.container.style;\n\t\t\tstyle.left = '0';\n\t\t\tstyle.zIndex = '10';\n\t\t\tTool.setActiveClass(this.id);\n\t\t}\n\n\t\tfunction init() {\n\n\t\t\tvar elem, size;\n\t\t\tvar layerManager = getElemById(\"layer_manager\");\n\t\t\tvar layerMenu = getElemById(\"layer_menu\");\n\t\t\tvar container = getElemById(\"stack_container\");\n\n\t\t\telements.shadow_properties = getElemById('shadow_properties');\n\t\t\telements.element_properties = getElemById('element_properties');\n\t\t\telements.transform_rotate = getElemById('transform_rotate');\n\t\t\telements.zIndex = getElemById('z-index');\n\n\t\t\telem = document.querySelectorAll('#layer_menu [data-type=\"subject\"]');\n\t\t\tsize = elem.length;\n\n\t\t\tfor (var i = 0; i &lt; size; i++) {\n\t\t\t\tvar S = new Stack(elem[i]);\n\t\t\t\tstacks[elem[i].id] = S;\n\t\t\t\tcontainer.appendChild(S.container);\n\t\t\t\tTool.addCssClass(elem[i].id);\n\t\t\t}\n\n\t\t\tactive.stack = stacks['element'];\n\t\t\tstacks['element'].show();\n\n\t\t\tlayerManager.addEventListener(\"click\", mouseEvents);\n\t\t\tlayerMenu.addEventListener(\"click\", mouseEvents);\n\n\t\t\tButtonManager.subscribe(\"before\", function(value) {\n\t\t\t\tif (value === false &amp;&amp; active.stack === stacks['before'])\n\t\t\t\t\tsetActiveStack(stacks['element'])\n\t\t\t\tif (value === true &amp;&amp; active.stack !== stacks['before'])\n\t\t\t\t\tsetActiveStack(stacks['before'])\n\t\t\t});\n\n\t\t\tButtonManager.subscribe(\"after\", function(value) {\n\t\t\t\tif (value === false &amp;&amp; active.stack === stacks['after'])\n\t\t\t\t\tsetActiveStack(stacks['element'])\n\t\t\t\tif (value === true &amp;&amp; active.stack !== stacks['after'])\n\t\t\t\t\tsetActiveStack(stacks['after'])\n\t\t\t});\n\t\t}\n\n\t\treturn {\n\t\t\tinit : init\n\t\t}\n\t})();\n\n\t/*\n\t * OutputManager\n\t */\n\tvar OutputManager = (function OutputManager() {\n\t\tvar classes = [];\n\t\tvar buttons = [];\n\t\tvar active = null;\n\t\tvar menu = null;\n\t\tvar button_offset = 0;\n\n\t\tvar crateOutputNode = function(topic, property) {\n\n\t\t\tvar prop = document.createElement('div');\n\t\t\tvar name = document.createElement('span');\n\t\t\tvar value = document.createElement('span');\n\n\t\t\tvar pmatch = property.match(/(^([a-z0-9\\-]*)=\\[([a-z0-9\\-\\\"]*)\\])|^([a-z0-9\\-]*)/i);\n\n\t\t\tname.textContent = '\\t' + pmatch[4];\n\n\t\t\tif (pmatch[3] !== undefined) {\n\t\t\t\tname.textContent = '\\t' + pmatch[2];\n\t\t\t\tvalue.textContent = pmatch[3] + ';';\n\t\t\t}\n\n\t\t\tname.textContent += ': ';\n\t\t\tprop.className = 'css-property';\n\t\t\tname.className = 'name';\n\t\t\tvalue.className = 'value';\n\t\t\tprop.appendChild(name);\n\t\t\tprop.appendChild(value);\n\n\t\t\tclasses[topic].node.appendChild(prop);\n\t\t\tclasses[topic].line[property] = prop;\n\t\t\tclasses[topic].prop[property] = value;\n\t\t}\n\n\t\tvar OutputClass = function OutputClass(node) {\n\t\t\tvar topic = node.getAttribute('data-topic');\n\t\t\tvar prop = node.getAttribute('data-prop');\n\t\t\tvar name = node.getAttribute('data-name');\n\t\t\tvar properties = prop.split(' ');\n\n\t\t\tclasses[topic] = {};\n\t\t\tclasses[topic].node = node;\n\t\t\tclasses[topic].prop = [];\n\t\t\tclasses[topic].line = [];\n\t\t\tclasses[topic].button = new Button(topic);\n\n\t\t\tvar open_decl = document.createElement('div');\n\t\t\tvar end_decl = document.createElement('div');\n\n\t\t\topen_decl.textContent = name + ' {';\n\t\t\tend_decl.textContent = '}';\n\t\t\tnode.appendChild(open_decl);\n\n\t\t\tfor (var i in properties)\n\t\t\t\tcrateOutputNode(topic, properties[i]);\n\n\t\t\tnode.appendChild(end_decl);\n\t\t}\n\n\t\tvar Button = function Button(topic) {\n\t\t\tvar button = document.createElement('div');\n\n\t\t\tbutton.className = 'button';\n\t\t\tbutton.textContent = topic;\n\t\t\tbutton.style.left = button_offset + 'px';\n\t\t\tbutton_offset += 100;\n\n\t\t\tbutton.addEventListener(\"click\", function() {\n\t\t\t\ttoggleDisplay(topic);\n\t\t\t})\n\n\t\t\tmenu.appendChild(button);\n\t\t\treturn button;\n\t\t}\n\n\t\tvar toggleDisplay = function toggleDisplay(topic) {\n\t\t\tactive.button.removeAttribute('data-active');\n\t\t\tactive.node.style.display = 'none';\n\t\t\tactive = classes[topic];\n\t\t\tactive.node.style.display = 'block';\n\t\t\tactive.button.setAttribute('data-active', 'true');\n\t\t}\n\n\t\tvar toggleButton = function toggleButton(topic, value) {\n\t\t\tvar display = (value === true) ? 'block' : 'none';\n\t\t\tclasses[topic].button.style.display = display;\n\n\t\t\tif (value === true)\n\t\t\t\ttoggleDisplay(topic);\n\t\t\telse\n\t\t\t\ttoggleDisplay('element');\n\t\t}\n\n\t\tvar updateProperty = function updateProperty(topic, property, data) {\n\t\t\ttry {\n\t\t\t\tclasses[topic].prop[property].textContent = data + ';';\n\t\t\t}\n\t\t\tcatch(error) {\n\t\t\t\t// console.log(\"ERROR undefined : \", topic, property, data);\n\t\t\t}\n\t\t}\n\n\t\tvar toggleProperty = function toggleProperty(topic, property, value) {\n\t\t\tvar display = (value === true) ? 'block' : 'none';\n\t\t\ttry {\n\t\t\t\tclasses[topic].line[property].style.display = display;\n\t\t\t}\n\t\t\tcatch(error) {\n\t\t\t\t// console.log(\"ERROR undefined : \",classes, topic, property, value);\n\t\t\t}\n\t\t}\n\n\t\tvar init = function init() {\n\n\t\t\tmenu = getElemById('menu');\n\n\t\t\tvar elem = document.querySelectorAll('#output .output');\n\t\t\tvar size = elem.length;\n\t\t\tfor (var i = 0; i &lt; size; i++)\n\t\t\t\tOutputClass(elem[i]);\n\n\t\t\tactive = classes['element'];\n\t\t\ttoggleDisplay('element');\n\n\t\t\tButtonManager.subscribe(\"before\", function(value) {\n\t\t\t\ttoggleButton('before', value);\n\t\t\t});\n\n\t\t\tButtonManager.subscribe(\"after\", function(value) {\n\t\t\t\ttoggleButton('after', value);\n\t\t\t});\n\t\t}\n\n\t\treturn {\n\t\t\tinit : init,\n\t\t\tupdateProperty : updateProperty,\n\t\t\ttoggleProperty : toggleProperty\n\t\t}\n\n\t})();\n\n\n\t/**\n\t * Init Tool\n\t */\n\tvar init = function init() {\n\t\tButtonManager.init();\n\t\tOutputManager.init();\n\t\tColoPicker.init();\n\t\tSliderManager.init();\n\t\tLayerManager.init();\n\t\tPreviewMouseTracking.init(\"preview\");\n\t\tTool.init();\n\t}\n\n\treturn {\n\t\tinit : init\n\t}\n\n})();\n\n\n</pre> </div> <p><iframe width=\"100%\" frameborder=\"0\" class=\"live-sample-frame sample-code-frame\" src=\"https://mdn.mozillademos.org/en-US/docs/Web/CSS/CSS_Box_Model/Box-shadow_generator%24samples/box-shadow_generator?revision=912011\" height=\"1100px\" id=\"frame_box-shadow_generator\"></iframe></p> <div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Box_Model/Box-shadow_generator$edit\" class=\"_attribution-link\">Edit this page on MDN</a>\n  </p>\n</div>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2016 Mozilla Contributors<br>Licensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.<br>\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Box_Model/Box-shadow_generator\" class=\"_attribution-link\">https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Box_Model/Box-shadow_generator</a>\n  </p>\n</div>\n","css_images/using_css_gradients":"<h1>CSS Images: Using CSS gradients</h1> <p><span class=\"seoSummary\"><strong>CSS gradients</strong> are new types of <a title=\"The &lt;image&gt; CSS data type represents a 2D image. There are two kinds of images in CSS: plain static images, often referenced using a URL, and dynamically-generated images like gradients or representations of parts of the tree.\" href=\"../image\"><code>&lt;image&gt;</code></a> added in the <a title=\"CSS3\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS3\">CSS3</a> Image Module. Using CSS gradients lets you display smooth transitions between two or more specified colors.</span> This lets you avoid using images for these effects, thereby reducing download time and bandwidth usage. In addition, because the gradient is generated by the browser, objects with gradients look better when zoomed, and you can adjust your layout much more flexibly.</p> <p><span class=\"seoSummary\">Browsers support two types of gradients: <em>linear</em>, defined with the <a title=\"The CSS linear-gradient() function creates an &lt;image&gt; which represents a linear gradient of colors. The result of this function is an object of the CSS &lt;gradient&gt; data type. Like any other gradient, a CSS linear gradient is not a CSS &lt;color&gt; but an image with no intrinsic dimensions; that is, it has neither natural or preferred size, nor ratio. Its concrete size will match the size of the element it applies to.\" href=\"../linear-gradient\"><code>linear-gradient()</code></a> function, and <em>radial</em>, defined with <a title=\"The CSS radial-gradient() function creates an &lt;image&gt; which represents a gradient of colors radiating from an origin, the center of the gradient. The result of this function is an object of the CSS &lt;gradient&gt; data type.\" href=\"../radial-gradient\"><code>radial-gradient()</code></a>.</span></p> <h2 name=\"Linear_gradients\" id=\"Linear_gradients\">Linear gradients</h2> <p>To create a linear gradient, you set a starting point and a direction (specified as an angle) along which the gradient effect is applied. You also define <strong>color stops</strong>. Color stops are the colors you want Gecko to render smooth transitions among, and you must specify at least two of them, but can specify more to create more complex gradient effects.</p> <h3 name=\"Simple_linear_gradients\" id=\"Simple_linear_gradients\">Simple linear gradients</h3> <p>Here's a linear gradient that starts at the center (horizontally) and top (vertically), and starts blue, transitioning to white.</p>  <h4 id=\"HTML\">HTML</h4> <pre data-language=\"html\">&lt;div class=\"linear-gradient\"&gt;&lt;/div&gt;</pre> <h4 id=\"css\">css</h4> <pre data-language=\"css\">.linear-gradient{\n    background: linear-gradient(to bottom, blue, white);\n}</pre>  <pre data-language=\"css\">linear-gradient{\n    width:100px;\n    height:100px;\n}</pre> <table class=\"standard-table\"> <tbody> <tr> <th class=\"header\">Screen Shot</th> <th class=\"header\">Live Demo</th> </tr> <tr> <td><img src=\"https://developer.mozilla.org/@api/deki/files/3950/=basic_linear_bluetop.png\" style=\"text-align: center;\" alt=\"\"></td> <td>  </td> </tr> </tbody> </table> <div> <pre data-language=\"css\">/* The old syntax, deprecated and prefixed, for old browsers */\nbackground: -<em>prefix</em>-linear-gradient(top, blue, white); \n\n/* The new syntax needed by standard-compliant browsers (Opera 12.1,\n   IE 10, Firefox 16, Chrome 26, Safari 6.1), without prefix */\nbackground: linear-gradient(to bottom, blue, white);\n</pre> </div> <p>(See <a title=\"CSS/linear-gradient#Browser_compatibility\" href=\"../linear-gradient#Browser_compatibility\">browser compatibility table</a> for an overview of the prefixes necessary to support different browser versions).</p> <p>Changing the same gradient to run from left to right:</p> <table class=\"standard-table\"> <tbody> <tr> <th class=\"header\">Screen Shot</th> <th class=\"header\">Live Demo</th> </tr> <tr> <td><img src=\"https://developer.mozilla.org/@api/deki/files/3951/=basic_linear_blueleft.png\" alt=\"basic_linear_blueleft.png\" class=\"default internal\"></td> <td>  </td> </tr> </tbody> </table> <pre data-language=\"css\">/* The old syntax, deprecated and prefixed, for old browsers */\nbackground: -<em>prefix</em>-linear-gradient(left, blue, white); \n\n/* The new syntax needed by standard-compliant browsers (Opera 12.1,\n   IE 10, Firefox 16, Chrome 26, Safari 6.1), without prefix */\nbackground: linear-gradient(to right, blue, white); </pre> <p>(See <a title=\"CSS/linear-gradient#Browser_compatibility\" href=\"../linear-gradient#Browser_compatibility\">browser compatibility table</a> for an overview of the prefices necessary to support different browser versions).</p> <p>You can make the gradient run diagonally by specifying both the horizontal and vertical starting positions. For example:</p> <table class=\"standard-table\"> <tbody> <tr> <th class=\"header\">Screen Shot</th> <th class=\"header\">Live Demo</th> </tr> <tr> <td><img src=\"https://developer.mozilla.org/@api/deki/files/3952/=basic_linear_bluetopleft.png\" alt=\"basic_linear_bluetopleft.png\" class=\"default internal\"></td> <td>  </td> </tr> </tbody> </table> <pre data-language=\"css\">/* The old syntax, deprecated and prefixed, for old browsers */\nbackground: -<em>prefix</em>-linear-gradient(left top, blue, white); \n\n/* The new syntax needed by standard-compliant browsers (Opera 12.1,\n   IE 10, Firefox 16, Chrome 26, Safari 6.1), without prefix */\nbackground: linear-gradient(to bottom right, blue, white);\n</pre> <h3 name=\"Using_angles\" id=\"Using_angles\">Using angles</h3> <p>If you don't specify an angle, one is determined automatically based on the given direction. If you'd like more control over the direction of the gradient, you can set the angle specifically.</p> <p>For example, here are two gradients, the first one with a direction of towards the right, and the second one has an angle of 70 degrees.</p> <p><img src=\"https://developer.mozilla.org/@api/deki/files/3953/=linear_gradient_angle.png\" alt=\"linear_gradient_angle.png\" class=\"default internal\"></p> <p>The one on the right uses CSS like this:</p> <pre data-language=\"css\">background: linear-gradient(70deg, black, white);\n</pre> <p>The angle is specified as an angle between a horizontal line and the gradient line, going counter-clockwise. In other words, <code>0deg</code> creates a vertical gradient from the bottom to the top, while <code>90deg</code> generates a left to right horizontal gradient:</p> <p><img src=\"https://developer.mozilla.org/files/3811/linear_red_angles.png\" alt=\"linear_redangles.png\" class=\"default internal\"></p> <pre data-language=\"css\">background: linear-gradient(&lt;angle&gt;, red, white);\n</pre> <div class=\"note style-wrap\"> <p><strong>Note:</strong> several browsers implement, prefixed, an older draft of the specification where <code>0deg</code> was pointing to the right rather than to the top. Pay attention in the value of the angle when mixing prefixed and standard linear-gradient. An easy formula to remember is 90 - x = y, where x is the standard usage, and y is the non-standard, vendor-prefixed usage.</p> </div> <h3 name=\"Linear_gradients-Color_stops\" id=\"Linear_gradients-Color_stops\">Color stops</h3> <p>Color stops are points along the gradient line that will have a specific color at that location. The location can be specified as either a percentage of the length of the line, or as an absolute length. You may specify as many color stops as you like in order to achieve the desired effect.</p> <p>If you specify the location as a percentage, <code>0%</code> represents the starting point, while <code>100%</code> represents the ending point; however, you can use values outside that range if necessary to get the effect you want.</p> <h4 name=\"Linear_gradients-Example.3A_Three_color_stops\" id=\"Linear_gradients-Example.3A_Three_color_stops\">Example: Three color stops</h4> <p>This example specifies three color stops:</p> <table class=\"standard-table\"> <tbody> <tr> <th class=\"header\">Screen Shot</th> <th class=\"header\">Live Demo</th> </tr> <tr> <td><img src=\"https://developer.mozilla.org/@api/deki/files/3955/=linear_colorstops1.png\" alt=\"linear_colorstops1.png\" class=\"default internal\"></td> <td>  </td> </tr> </tbody> </table> <pre data-language=\"css\">/* The old syntax, deprecated and prefixed, for old browsers */\nbackground: -<em>prefix</em>-linear-gradient(top, blue, white 80%, orange);\n\n/* The new syntax needed by standard-compliant browsers (Opera 12.1,\n   IE 10, Firefox 16, Chrome 26, Safari 6.1), without prefix */\nbackground: linear-gradient(to bottom, blue, white 80%, orange);\n</pre> <p>Note that the first and last color stops don't specify a location; because of that, values of 0% and 100% are automatically assigned to the first and last colors respectively. The middle color stop specifies a location of 80%, putting it most of the way toward the bottom.</p> <h4 name=\"Linear_gradients-Example.3A_Evenly_spaced_color_stops\" id=\"Linear_gradients-Example.3A_Evenly_spaced_color_stops\">Example: Evenly spaced color stops</h4> <p>Here's an example using a wide variety of colors, all evenly spaced:</p> <table class=\"standard-table\"> <tbody> <tr> <th class=\"header\">Screen Shot</th> <th class=\"header\">Live Demo</th> </tr> <tr> <td><img src=\"https://developer.mozilla.org/@api/deki/files/3956/=linear_rainbow.png\" alt=\"linear_rainbow.png\" class=\"default internal\"></td> <td>  </td> </tr> </tbody> </table> <pre data-language=\"css\">/* The old syntax, deprecated and prefixed, for old browsers */\nbackground: -<em>prefix</em>-linear-gradient(left, red, orange, yellow, green, blue);\n\n/* The new syntax needed by standard-compliant browsers (Opera 12.1,\n   IE 10, Firefox 16, Chrome 26, Safari 6.1), without prefix */\nbackground: linear-gradient(to right, red, orange, yellow, green, blue);\n</pre> <p>Notice that the color stops are automatically spaced evenly when no locations are specified.</p> <h3 name=\"Transparency_and_gradients\" id=\"Transparency_and_gradients\">Transparency and gradients</h3> <p>Gradients support transparency. You can use this, for example, when stacking multiple backgrounds, to create fading effects on background images. To achieve this, you may either use <code>rgba</code> colors, <code>hsla</code> colors, or the <code>transparent</code> keyword (see <a href=\"../color_value\">color values</a>). However, be aware that some browsers render the <code>transparent</code> keyword as <code>rgba(0,0,0,0)</code> instead of <code>rgba(255,255,255,0)</code>, which could cause some unexpected results (and potential dark spots) as the gradients blend together. Therefore it is safer to specify opaque gradients.</p> <p>Here is an example of using transparency in gradients:</p> <p><img src=\"https://developer.mozilla.org/files/4275/linear_multibg_transparent2.png\" style=\"height: 119px; width: 643px;\" class=\"default internal\" alt=\"for Transparency and gradients example\"></p> <pre data-language=\"css\">/* The old syntax, deprecated and prefixed, for old browsers */\nbackground: -<em>prefix</em>-linear-gradient(left, rgba(255,255,255,0),\n  rgba(255,255,255,1)), url(http://foo.com/image.jpg);\n\n/* The new syntax needed by standard-compliant browsers (Opera 12.1,\n   IE 10, Firefox 16, Chrome 26, Safari 6.1), without prefix */  \nbackground: linear-gradient(to right, rgba(255,255,255,0),\n  rgba(255,255,255,1)), url(http://foo.com/image.jpg);\n</pre> <p>The backgrounds are stacked with the first specified background on top, and each successive background farther away. By stacking backgrounds this way, you can create very creative effects as seen above.</p> <h2 name=\"Radial_gradients\" id=\"Radial_gradients\">Radial gradients</h2> <p>Radial gradients are specified using the <a title=\"The CSS radial-gradient() function creates an &lt;image&gt; which represents a gradient of colors radiating from an origin, the center of the gradient. The result of this function is an object of the CSS &lt;gradient&gt; data type.\" href=\"../radial-gradient\"><code>radial-gradient()</code></a> functional notation. The syntax is similar to that for linear gradients, except you can specify the gradient's ending shape (whether it should be a circle or ellipse) as well as its size. By default, the ending shape is an ellipse with the same proportions than the container's box.</p> <h3 name=\"Radial_gradients-Color_stops\" id=\"Radial_gradients-Color_stops\">Color stops</h3> <p>You specify color stops the same way as for linear gradients. The gradient line extends out from the starting position in all directions.</p> <h4 name=\"Radial_gradients-Example.3A_Evenly_spaced_color_stops\" id=\"Radial_gradients-Example.3A_Evenly_spaced_color_stops\">Example: Evenly spaced color stops</h4> <p>By default, as with linear gradients, the color stops are evenly spaced:</p> <table class=\"standard-table\"> <tbody> <tr> <th class=\"header\">Screen Shot</th> <th class=\"header\">Live Demo</th> </tr> <tr> <td><img src=\"https://developer.mozilla.org/@api/deki/files/3958/=radial_gradient_even.png\" alt=\"radial_gradient_even.png\" class=\"default internal\"></td> <td>  </td> </tr> </tbody> </table> <pre data-language=\"css\">background: radial-gradient(red, yellow, rgb(30, 144, 255));\n</pre> <h4 name=\"Radial_gradients-Example.3A_Explicitly_spaced_color_stops\" id=\"Radial_gradients-Example.3A_Explicitly_spaced_color_stops\">Example: Explicitly spaced color stops</h4> <p>Here we specify specific locations for the color stops:</p> <table class=\"standard-table\"> <tbody> <tr> <th class=\"header\">Screen Shot</th> <th class=\"header\">Live Demo</th> </tr> <tr> <td><img src=\"https://developer.mozilla.org/@api/deki/files/3959/=radial_gradient_varied.png\" alt=\"radial_gradient_varied.png\" class=\"default internal\"></td> <td>  </td> </tr> </tbody> </table> <pre data-language=\"css\">background: radial-gradient(red 5%, yellow 25%, #1E90FF 50%);\n</pre> <h3 name=\"Size\" id=\"Size\">Size</h3> <p>This is one of the areas in which radial gradients differ from linear gradients. You can provide a size value that specifies the point that defines the size of the circle or ellipse. See <a title=\"CSS/-moz-radial-gradient#Size constants\" href=\"../radial-gradient#Size_constants\">this description of the size constants</a> for specifics.</p> <h4 name=\"Example.3A_closest-side_for_ellipses\" id=\"Example.3A_closest-side_for_ellipses\">Example: closest-side for ellipses</h4> <p>This ellipse uses the <code>closest-side</code> size value, which means the size is set by the distance from the starting point (the center) to the closest side of the enclosing box.</p> <table class=\"standard-table\"> <tbody> <tr> <th class=\"header\">Screen Shot</th> <th class=\"header\">Live Demo</th> </tr> <tr> <td><img src=\"https://developer.mozilla.org/@api/deki/files/3960/=radial_ellipse_size1.png\" alt=\"radial_ellipse_size1.png\" class=\"default internal\"></td> <td>  </td> </tr> </tbody> </table> <pre data-language=\"css\">background: radial-gradient(ellipse closest-side, red, yellow 10%, #1E90FF 50%, white);\n</pre> <h4 name=\"Example.3A_farthest-corner_for_ellipses\" id=\"Example.3A_farthest-corner_for_ellipses\">Example: farthest-corner for ellipses</h4> <p>This example is similar to the previous one, except that its size is specified as <code>farthest-corner</code>, which sets the size of the gradient by the distance from the starting point to the farthest corner of the enclosing box from the starting point.</p> <table class=\"standard-table\"> <tbody> <tr> <th class=\"header\">Screen Shot</th> <th class=\"header\">Live Demo</th> </tr> <tr> <td><img src=\"https://developer.mozilla.org/@api/deki/files/3961/=radial_ellipse_size2.png\" alt=\"radial_ellipse_size2.png\" class=\"default internal\"></td> <td>  </td> </tr> </tbody> </table> <pre data-language=\"css\">background: radial-gradient(ellipse farthest-corner, red, yellow 10%, #1E90FF 50%, white);\n</pre> <h4 name=\"Example.3A_closest-side_for_circles\" id=\"Example.3A_closest-side_for_circles\">Example: closest-side for circles</h4> <p>This example uses <code>closest-side</code>, which determines the circle's size as the distance between the start point (the center) and the closest side.</p> <table class=\"standard-table\"> <tbody> <tr> <th class=\"header\">Screen Shot</th> <th class=\"header\">Live Demo</th> </tr> <tr> <td><img src=\"https://developer.mozilla.org/@api/deki/files/3962/=radial_circle_size1.png\" alt=\"radial_circle_size1.png\" class=\"default internal\"></td> <td>  </td> </tr> </tbody> </table> <pre data-language=\"css\">background: radial-gradient(circle closest-side, red, yellow 10%, #1E90FF 50%, white);\n</pre> <p>Here, the circle's radius is half the height of the box, since the top and bottom edges are equidistant from the start point and are closer than the left and right edges.</p> <h2 name=\"Repeating_gradients\" id=\"Repeating_gradients\">Repeating gradients</h2> <p>The <a title=\"The CSS linear-gradient() function creates an &lt;image&gt; which represents a linear gradient of colors. The result of this function is an object of the CSS &lt;gradient&gt; data type. Like any other gradient, a CSS linear gradient is not a CSS &lt;color&gt; but an image with no intrinsic dimensions; that is, it has neither natural or preferred size, nor ratio. Its concrete size will match the size of the element it applies to.\" href=\"../linear-gradient\"><code>linear-gradient()</code></a> and <a title=\"The CSS radial-gradient() function creates an &lt;image&gt; which represents a gradient of colors radiating from an origin, the center of the gradient. The result of this function is an object of the CSS &lt;gradient&gt; data type.\" href=\"../radial-gradient\"><code>radial-gradient()</code></a> properties don't support automatically repeating the color stops. However, the <a title=\"The CSS repeating-linear-gradient function creates an &lt;image&gt; consisting of repeating gradients. It works similarly to the basic linear gradients as described by linear-gradient(), and takes the same arguments. However, it automatically repeats the color stops infinitely in both directions. The color stops' positions shift by multiples of the length of a basic linear gradient (the difference between the last color stops' position and the first).\" href=\"../repeating-linear-gradient\"><code>repeating-linear-gradient()</code></a> and <a title=\"This works similarly to the standard radial gradients as described by radial-gradient(), but it automatically repeats the color stops infinitely in both directions, with their positions shifted by multiples of the difference between the last color stop's position and the first one's position.\" href=\"../repeating-radial-gradient\"><code>repeating-radial-gradient()</code></a> properties are available to offer this functionality.</p> <h3 name=\"Examples.3A_Repeating_linear_gradient\" id=\"Examples.3A_Repeating_linear_gradient\">Examples: Repeating linear gradient</h3> <p>This example uses <a title=\"The CSS repeating-linear-gradient function creates an &lt;image&gt; consisting of repeating gradients. It works similarly to the basic linear gradients as described by linear-gradient(), and takes the same arguments. However, it automatically repeats the color stops infinitely in both directions. The color stops' positions shift by multiples of the length of a basic linear gradient (the difference between the last color stops' position and the first).\" href=\"../repeating-linear-gradient\"><code>repeating-linear-gradient()</code></a> to create a gradient:</p> <table class=\"standard-table\"> <tbody> <tr> <th class=\"header\">Screen Shot</th> <th class=\"header\">Live Demo</th> </tr> <tr> <td><img src=\"https://developer.mozilla.org/@api/deki/files/3964/=repeating_linear_gradient.png\" alt=\"repeating_linear_gradient.png\" class=\"default internal\"></td> <td>  </td> </tr> </tbody> </table> <pre data-language=\"css\">background: repeating-linear-gradient(-45deg, red, red 5px, white 5px, white 10px);\n</pre> <p>Note that since no value is specified for the first color, it is automatically assigned the starting point value of each repeating portion of the gradient, i.e the effect is similar to that obtained when the starting value is given as 0px.</p> <p>Another example using the <a title=\"The CSS repeating-linear-gradient function creates an &lt;image&gt; consisting of repeating gradients. It works similarly to the basic linear gradients as described by linear-gradient(), and takes the same arguments. However, it automatically repeats the color stops infinitely in both directions. The color stops' positions shift by multiples of the length of a basic linear gradient (the difference between the last color stops' position and the first).\" href=\"../repeating-linear-gradient\"><code>repeating-linear-gradient()</code></a> property.</p> <p><a title=\"repeat_background_gradient_checked.png\" href=\"https://developer.mozilla.org/@api/deki/files/6192/=repeat_background_gradient_checked.png\"><img src=\"https://developer.mozilla.org/@api/deki/files/6192/=repeat_background_gradient_checked.png?size=thumb\" style=\"height: 160px; width: 160px;\" class=\"default internal\" alt=\"repeat_background_gradient_checked.png\"></a></p> <pre data-language=\"css\">background-color: #000;\nbackground-image: repeating-linear-gradient(90deg, transparent, transparent 50px,\n      rgba(255, 127, 0, 0.25) 50px, rgba(255, 127, 0, 0.25) 56px, transparent 56px, transparent 63px,\n      rgba(255, 127, 0, 0.25) 63px, rgba(255, 127, 0, 0.25) 69px, transparent 69px, transparent 116px,\n      rgba(255, 206, 0, 0.25) 116px, rgba(255, 206, 0, 0.25) 166px),\nrepeating-linear-gradient(0deg, transparent, transparent 50px, rgba(255, 127, 0, 0.25) 50px,\n      rgba(255, 127, 0, 0.25) 56px, transparent 56px, transparent 63px, rgba(255, 127, 0, 0.25) 63px,\n      rgba(255, 127, 0, 0.25) 69px, transparent 69px, transparent 116px, rgba(255, 206, 0, 0.25) 116px,\n      rgba(255, 206, 0, 0.25) 166px),\nrepeating-linear-gradient(-45deg, transparent, transparent 5px, rgba(143, 77, 63, 0.25) 5px,\n      rgba(143, 77, 63, 0.25) 10px),\nrepeating-linear-gradient(45deg, transparent, transparent 5px, rgba(143, 77, 63, 0.25) 5px,\n      rgba(143, 77, 63, 0.25) 10px);\n</pre> <h3 name=\"Example.3A_Repeating_radial_gradient\" id=\"Example.3A_Repeating_radial_gradient\">Example: Repeating radial gradient</h3> <p>This example uses <a title=\"This works similarly to the standard radial gradients as described by radial-gradient(), but it automatically repeats the color stops infinitely in both directions, with their positions shifted by multiples of the difference between the last color stop's position and the first one's position.\" href=\"../repeating-radial-gradient\"><code>repeating-radial-gradient()</code></a> to create a gradient:</p> <table class=\"standard-table\"> <tbody> <tr> <th class=\"header\">Screen Shot</th> <th class=\"header\">Live Demo</th> </tr> <tr> <td><img src=\"https://developer.mozilla.org/@api/deki/files/3965/=repeating_radial_gradient.png\" alt=\"repeating_radial_gradient.png\" class=\"default internal\"></td> <td>  </td> </tr> </tbody> </table> <pre data-language=\"css\">background: repeating-radial-gradient(black, black 5px, white 5px, white 10px);\n</pre> <h2 name=\"See_also\" id=\"See_also\">See also</h2> <ul> <li>Gradient-related reference articles: <a title=\"The &lt;image&gt; CSS data type represents a 2D image. There are two kinds of images in CSS: plain static images, often referenced using a URL, and dynamically-generated images like gradients or representations of parts of the tree.\" href=\"../image\"><code>&lt;image&gt;</code></a>, <a title=\"The &lt;gradient&gt; CSS data type denotes a CSS &lt;image&gt; made of a progressive transition between two or more colors. A CSS gradient is not a CSS &lt;color&gt; but an image with no intrinsic dimensions; that is, it has no natural or preferred size, nor a preferred ratio. Its concrete size will match the one of the element it applies to.\" href=\"../gradient\"><code>&lt;gradient&gt;</code></a>, <a title=\"The CSS linear-gradient() function creates an &lt;image&gt; which represents a linear gradient of colors. The result of this function is an object of the CSS &lt;gradient&gt; data type. Like any other gradient, a CSS linear gradient is not a CSS &lt;color&gt; but an image with no intrinsic dimensions; that is, it has neither natural or preferred size, nor ratio. Its concrete size will match the size of the element it applies to.\" href=\"../linear-gradient\"><code>linear-gradient()</code></a>, <a title=\"The CSS radial-gradient() function creates an &lt;image&gt; which represents a gradient of colors radiating from an origin, the center of the gradient. The result of this function is an object of the CSS &lt;gradient&gt; data type.\" href=\"../radial-gradient\"><code>radial-gradient()</code></a>, <a title=\"The CSS repeating-linear-gradient function creates an &lt;image&gt; consisting of repeating gradients. It works similarly to the basic linear gradients as described by linear-gradient(), and takes the same arguments. However, it automatically repeats the color stops infinitely in both directions. The color stops' positions shift by multiples of the length of a basic linear gradient (the difference between the last color stops' position and the first).\" href=\"../repeating-linear-gradient\"><code>repeating-linear-gradient()</code></a>, <a title=\"This works similarly to the standard radial gradients as described by radial-gradient(), but it automatically repeats the color stops infinitely in both directions, with their positions shifted by multiples of the difference between the last color stop's position and the first one's position.\" href=\"../repeating-radial-gradient\"><code>repeating-radial-gradient()</code></a>.</li> </ul><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Images/Using_CSS_gradients$edit\" class=\"_attribution-link\">Edit this page on MDN</a>\n  </p>\n</div>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2016 Mozilla Contributors<br>Licensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.<br>\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Images/Using_CSS_gradients\" class=\"_attribution-link\">https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Images/Using_CSS_gradients</a>\n  </p>\n</div>\n","media_queries/testing_media_queries":"<h1>Media Queries: Testing media queries</h1><div class=\"notice experimental\"> <p> <strong>This is an experimental technology</strong><br>Because this technology's specification has not stabilized, check the <a href=\"#Browser_compatibility\">compatibility table</a> for usage in various browsers. Also note that the syntax and behavior of an experimental technology is subject to change in future versions of browsers as the specification changes.</p> </div> <p>The DOM provides features that make it possible to test the results of a media query programmatically. This is done using the <a title=\"A MediaQueryList object maintains a list of media queries on a document, and handles sending notifications to listeners when the media queries on the document change.\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList\"><code>MediaQueryList</code></a> interface and its methods and properties. Once you've created a <a title=\"A MediaQueryList object maintains a list of media queries on a document, and handles sending notifications to listeners when the media queries on the document change.\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList\"><code>MediaQueryList</code></a> object, you can check the result of the query or, alternatively, receive notifications automatically when the result changes.</p> <h2 id=\"Creating_a_media_query_list\" name=\"Creating_a_media_query_list\">Creating a media query list</h2> <p>Before you can evaluate the results of a query, you need to create the <a title=\"A MediaQueryList object maintains a list of media queries on a document, and handles sending notifications to listeners when the media queries on the document change.\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList\"><code>MediaQueryList</code></a> object representing the media query. To do this, use the <a title=\"Returns a new MediaQueryList object representing the parsed results of the specified media query string.\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia\"><code>window.matchMedia</code></a> method.</p> <p>For example, if you want to set up a query list that determines whether the device is in landscape or portrait orientation, you can do so like this:</p> <pre>var mql = window.matchMedia(\"(orientation: portrait)\");\n</pre> <h2 id=\"Checking_the_result_of_a_query\" name=\"Checking_the_result_of_a_query\">Checking the result of a query</h2> <p>Once your media query list has been created, you can check the result of the query by looking at the value of its <code>matches</code> property, which reflects the result of the query:</p> <pre data-language=\"js\">if (mql.matches) {\n  /* The viewport is currently in portrait orientation */\n} else {\n  /* The viewport is currently in landscape orientation */\n}\n</pre> <h2 id=\"Receiving_query_notifications\" name=\"Receiving_query_notifications\">Receiving query notifications</h2> <p>If you need to be aware of changes to the evaluated result of the query on an ongoing basis, it's more efficient to register a listener than to poll the query's result. To do this, you can call the <code>addListener()</code> method on the <a title=\"A MediaQueryList object maintains a list of media queries on a document, and handles sending notifications to listeners when the media queries on the document change.\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList\"><code>MediaQueryList</code></a> object, specifying an observer that implements the <a title=\"A MediaQueryList object maintains a list of media queries on a document, and handles sending notifications to listeners when the media queries on the document change.\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryListListener\"><code>MediaQueryListListener</code></a> interface:</p> <pre data-language=\"js\">var mql = window.matchMedia(\"(orientation: portrait)\");\nmql.addListener(handleOrientationChange);\nhandleOrientationChange(mql); \n</pre> <p>This code creates the orientation testing media query list, <code>mql</code>, then adds a listener to it. Note that after adding the listener, we actually invoke the listener directly once. This lets our listener perform initial adjustments based on the current device orientation (otherwise, if our code assumes the device is in portrait mode but it's actually in landscape mode at startup, we could have inconsistencies).</p> <p>The <code>handleOrientationChange()</code> method we implement then would look at the result of the query and handle whatever we need to do on an orientation change:</p> <pre data-language=\"js\">function handleOrientationChange(mql) {\n  if (mql.matches) {\n    /* The viewport is currently in portrait orientation */\n  } else {\n    /* The viewport is currently in landscape orientation */\n  }\n}\n</pre> <h2 id=\"Ending_query_notifications\" name=\"Ending_query_notifications\">Ending query notifications</h2> <p>When you no longer need to receive notifications about changes to the value of your media query, you can simply call <code>removeListener()</code> on the <a title=\"A MediaQueryList object maintains a list of media queries on a document, and handles sending notifications to listeners when the media queries on the document change.\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList\"><code>MediaQueryList</code></a>:</p> <pre>mql.removeListener(handleOrientationChange);\n</pre> <h2 id=\"Browser_compatibility\" name=\"Browser_compatibility\">Browser compatibility</h2>  <div id=\"compat-desktop\"> <table class=\"compat-table\"> <tbody> <tr> <th>Feature</th> <th>Chrome</th> <th>Firefox (Gecko)</th> <th>Internet Explorer</th> <th>Opera</th> <th>Safari</th> </tr> <tr> <td>Basic support</td> <td>9</td> <td>\n<a title=\"Released on 2011-08-16.\" href=\"https://developer.mozilla.org/en-US/Firefox/Releases/6\">6.0</a> (6.0)</td> <td>10</td> <td>12.1</td> <td>5.1</td> </tr> </tbody> </table> </div> <div id=\"compat-mobile\"> <table class=\"compat-table\"> <tbody> <tr> <th>Feature</th> <th>Android</th> <th>Firefox Mobile (Gecko)</th> <th>IE Mobile</th> <th>Opera Mobile</th> <th>Safari Mobile</th> </tr> <tr> <td>Basic support</td> <td>3.0</td> <td><span title=\"Compatibility unknown; please update this.\" style=\"color: rgb(255, 153, 0);\">?</span></td> <td>10</td> <td>12.1</td> <td>5</td> </tr> </tbody> </table> </div> <h2 id=\"See_also\" name=\"See_also\">See also</h2> <ul> <li><a title=\"CSS/Media queries\" href=\"../media_queries\">Media queries</a></li> <li><a title=\"Returns a new MediaQueryList object representing the parsed results of the specified media query string.\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia\"><code>window.matchMedia()</code></a></li> <li><a title=\"A MediaQueryList object maintains a list of media queries on a document, and handles sending notifications to listeners when the media queries on the document change.\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList\"><code>MediaQueryList</code></a></li> <li><a title=\"A MediaQueryList object maintains a list of media queries on a document, and handles sending notifications to listeners when the media queries on the document change.\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryListListener\"><code>MediaQueryListListener</code></a></li> </ul><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Testing_media_queries$edit\" class=\"_attribution-link\">Edit this page on MDN</a>\n  </p>\n</div>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2016 Mozilla Contributors<br>Licensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.<br>\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Testing_media_queries\" class=\"_attribution-link\">https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Testing_media_queries</a>\n  </p>\n</div>\n","css_text":"<h1>CSS Text</h1> <p><strong>CSS Text</strong> is a module of CSS that defines how to perform text manipulation, like line breaking, justification and alignment, white space handling, and text transformation.</p> <h2 id=\"Reference\">Reference</h2> <h3 id=\"Properties\">Properties</h3> <div class=\"index\"> <ul> <li><a title=\"The hyphens CSS property tells the browser how to hyphenate words when line-wrapping. You can prevent hyphenation entirely, control when the browser should hyphenate, or let the browser control when to hyphenate.\" href=\"hyphens\"><code>hyphens</code></a></li> <li><a title=\"The letter-spacing CSS property specifies spacing behavior between text characters.\" href=\"letter-spacing\"><code>letter-spacing</code></a></li> <li><a title=\"The line-break CSS property is used to specify how (or if) to break lines.\" href=\"line-break\"><code>line-break</code></a></li> <li><a title=\"REDIRECT https://developer.mozilla.org/en-US/docs/CSS/word-wrap\" href=\"overflow-wrap\"><code>overflow-wrap</code></a></li> <li><a title=\"The tab-size CSS property is used to customize the width of a tab (U+0009) character.\" href=\"tab-size\"><code>tab-size</code></a></li> <li><a title=\"The text-align CSS property describes how inline content like text is aligned in its parent block element. text-align does not control the alignment of block elements itself, only their inline content.\" href=\"text-align\"><code>text-align</code></a></li> <li><a title=\"The text-align-last CSS property describes how the last line of a block or a line, right before a forced line break, is aligned.\" href=\"text-align-last\"><code>text-align-last</code></a></li> <li><a title=\"The text-indent property specifies how much horizontal space should be left before the beginning of the first line of the text content of an element.\" href=\"text-indent\"><code>text-indent</code></a></li> <li><a title=\"On mobile devices, the text-size-adjust property allows Web authors to control if and how the text-inflating algorithm is applied to the textual content of the element it is applied to.\" href=\"text-size-adjust\"><code>text-size-adjust</code></a></li> <li><a title=\"The text-transform CSS property specifies how to capitalize an element's text. It can be used to make text appear in all-uppercase or all-lowercase, or with each word capitalized.\" href=\"text-transform\"><code>text-transform</code></a></li> <li><a title=\"The white-space property is used to describe how whitespace inside the element is handled.\" href=\"white-space\"><code>white-space</code></a></li> <li><a title=\"The word-break CSS property is used to specify whether to break lines within words.\" href=\"word-break\"><code>word-break</code></a></li> <li><a title=\"The word-spacing CSS property specifies the spacing behavior between tags and words.\" href=\"word-spacing\"><code>word-spacing</code></a></li> <li><a title=\"The word-wrap property is used to specify whether or not the browser may break lines within words in order to prevent overflow when an otherwise unbreakable string is too long to fit in its containing box.\" href=\"word-wrap\"><code>word-wrap</code></a></li> </ul> </div> <h2 id=\"Guides\">Guides</h2> <p><em>None.</em></p> <h2 id=\"Specifications\">Specifications</h2> <table class=\"standard-table\"> <thead> <tr> <th scope=\"col\">Specification</th> <th scope=\"col\">Status</th> <th scope=\"col\">Comment</th> </tr> </thead> <tbody> <tr> <td><a title=\"The 'CSS Logical Properties Level 1' specification\" hreflang=\"en\" class=\"external\" lang=\"en\" href=\"https://drafts.csswg.org/css-logical-props/\">CSS Logical Properties Level 1</a></td> <td><span class=\"spec-ED\">Editor's Draft</span></td> <td>Updates some properties to be independent of the directionality of the text.</td> </tr> <tr> <td><a title=\"The 'CSS Text Level 3' specification\" hreflang=\"en\" class=\"external\" lang=\"en\" href=\"https://drafts.csswg.org/css-text-3/\">CSS Text Level 3</a></td> <td><span class=\"spec-WD\">Working Draft</span></td> <td> </td> </tr> <tr> <td><a title=\"The 'CSS Level 2 (Revision 1)' specification\" hreflang=\"en\" class=\"external\" lang=\"en\" href=\"http://www.w3.org/TR/CSS2/text.html\">CSS Level 2 (Revision 1)</a></td> <td><span class=\"spec-REC\">Recommendation</span></td> <td> </td> </tr> <tr> <td><a title=\"The 'CSS Level 1' specification\" hreflang=\"en\" class=\"external\" lang=\"en\" href=\"http://www.w3.org/TR/CSS1/\">CSS Level 1</a></td> <td><span class=\"spec-REC\">Recommendation</span></td> <td>Initial definition</td> </tr> </tbody> </table> <h2 id=\"Browser_compatibility\">Browser compatibility</h2>  <div id=\"compat-desktop\"> <table class=\"compat-table\"> <tbody> <tr> <th>Feature</th> <th>Chrome</th> <th>Firefox (Gecko)</th> <th>Internet Explorer</th> <th>Opera</th> <th>Safari (WebKit)</th> </tr> <tr> <td>Basic support</td> <td>1.0</td> <td>1.0 (1.7 or earlier)</td> <td>3</td> <td>3.5</td> <td>1.0 (85)</td> </tr> </tbody> </table> </div> <div id=\"compat-mobile\"> <table class=\"compat-table\"> <tbody> <tr> <th>Feature</th> <th>Android</th> <th>Firefox Mobile (Gecko)</th> <th>IE Phone</th> <th>Opera Mobile</th> <th>Safari Mobile</th> </tr> <tr> <td>Basic support</td> <td><span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span></td> <td><span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span></td> <td><span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span></td> <td><span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span></td> <td>1.0 (85)</td> </tr> </tbody> </table> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Text$edit\" class=\"_attribution-link\">Edit this page on MDN</a>\n  </p>\n</div>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2016 Mozilla Contributors<br>Licensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.<br>\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Text\" class=\"_attribution-link\">https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Text</a>\n  </p>\n</div>\n","css_masks":"<h1>CSS Masks</h1> <p><strong>CSS Masks</strong> is a CSS module that defines means, including masking and clipping, for partially or fully hiding portions of visual elements.</p> <h2 id=\"Reference\">Reference</h2> <h3 id=\"Properties\">Properties</h3> <div class=\"index\"> <ul> <li><a title=\"The mask property in CSS allows users to alter the visibility of an item by either partially or fully hiding the item. This is accomplished by either masking or clipping the image at specific points.\" href=\"mask\"><code>mask</code></a></li> </ul> </div> <h2 id=\"Guides\">Guides</h2> <p><em>None.</em></p> <h2 id=\"Specifications\">Specifications</h2> <table class=\"standard-table\"> <thead> <tr> <th scope=\"col\">Specification</th> <th scope=\"col\">Status</th> <th scope=\"col\">Comment</th> </tr> </thead> <tbody> <tr> <td><a lang=\"en\" title=\"The 'CSS Masking Level 1' specification\" class=\"external\" href=\"https://drafts.fxtf.org/css-masking-1/\" hreflang=\"en\">CSS Masking Level 1</a></td> <td><span class=\"spec-CR\">Candidate Recommendation</span></td> <td> </td> </tr> <tr> <td><a lang=\"en\" hreflang=\"en\" href=\"http://www.w3.org/TR/SVG11/masking.html#MaskProperty\" class=\"external\">Scalable Vector Graphics (SVG) 1.1 (Second Edition)<br><small lang=\"en-US\">The definition of 'mask' in that specification.</small></a></td> <td><span class=\"spec-REC\">Recommendation</span></td> <td>Initial definition</td> </tr> </tbody> </table> <h2 id=\"Browser_compatibility\">Browser compatibility</h2>  <div id=\"compat-desktop\"> <table class=\"compat-table\"> <tbody> <tr> <th>Feature</th> <th>Chrome</th> <th>Firefox (Gecko)</th> <th>Internet Explorer</th> <th>Opera</th> <th>Safari (WebKit)</th> </tr> <tr> <td>Basic support (for SVG)</td> <td><span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span></td> <td><span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span></td> <td><span title=\"Compatibility unknown; please update this.\" style=\"color: rgb(255, 153, 0);\">?</span></td> <td><span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span></td> <td><span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span></td> </tr> </tbody> </table> </div> <div id=\"compat-mobile\"> <table class=\"compat-table\"> <tbody> <tr> <th>Feature</th> <th>Android</th> <th>Firefox Mobile (Gecko)</th> <th>IE Phone</th> <th>Opera Mobile</th> <th>Safari Mobile</th> </tr> <tr> <td>Basic support</td> <td><span title=\"Compatibility unknown; please update this.\" style=\"color: rgb(255, 153, 0);\">?</span></td> <td><span title=\"Compatibility unknown; please update this.\" style=\"color: rgb(255, 153, 0);\">?</span></td> <td><span title=\"Compatibility unknown; please update this.\" style=\"color: rgb(255, 153, 0);\">?</span></td> <td><span title=\"Compatibility unknown; please update this.\" style=\"color: rgb(255, 153, 0);\">?</span></td> <td><span title=\"Compatibility unknown; please update this.\" style=\"color: rgb(255, 153, 0);\">?</span></td> </tr> </tbody> </table> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Masks$edit\" class=\"_attribution-link\">Edit this page on MDN</a>\n  </p>\n</div>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2016 Mozilla Contributors<br>Licensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.<br>\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Masks\" class=\"_attribution-link\">https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Masks</a>\n  </p>\n</div>\n","css_positioning/understanding_z_index/the_stacking_context":"<h1>CSS Positioning: Understanding z index: The stacking context</h1><p>Stacking context is the three-dimensional conceptualization of HTML elements along an imaginary z-axis relative to the user who is assumed to be facing the viewport or the webpage. HTML elements occupy this space in priority order based on element attributes.</p> <p>« <a title=\"CSS\" href=\"https://developer.mozilla.org/en-US/docs/CSS\">CSS</a> « <a title=\"Understanding CSS z-index\" href=\"../../understanding_z-index\">Understanding CSS z-index</a></p> <h2 id=\"The_stacking_context\">The stacking context</h2>  <p>In the previous example, <a title=\"Adding z-index\" href=\"../../understanding_z-index/adding_z-index\">Adding z-index</a>, the rendering order of certain DIVs is influenced by their z-index value. This occurs because these DIVs have special properties which cause them to form a <em>stacking context</em>.</p> <p>A stacking context is formed, anywhere in the document, by any element which is either</p> <ul> <li>the root element (HTML),</li> <li>positioned (absolutely or relatively) with a z-index value other than \"auto\",</li> <li>a flex item with a z-index value other than \"auto\",that is the parent element display: flex|inline-flex,</li> <li>elements with an <a title=\"The opacity CSS property specifies the transparency of an element, that is, the degree to which the background behind the element is overlaid.\" href=\"../../opacity\"><code>opacity</code></a> value less than 1. (See <a title=\"http://www.w3.org/TR/css3-color/#transparency\" href=\"http://www.w3.org/TR/css3-color/#transparency\">the specification for opacity</a>),</li> <li>elements with a <a title=\"The CSS transform property lets you modify the coordinate space of the CSS visual formatting model. Using it, elements can be translated, rotated, scaled, and skewed.\" href=\"../../transform\"><code>transform</code></a> value other than \"none\",</li> <li>elements with a <a title=\"The mix-blend-mode CSS property describes how an element's content should blend with the content of the element that is below it and the element's background.\" href=\"../../mix-blend-mode\"><code>mix-blend-mode</code></a> value other than \"normal\",</li> <li>elements with a <a title=\"The filter property provides graphical effects like blurring, sharpening, or color shifting an element. Filters are commonly used to adjust the rendering of images, backgrounds, and borders.\" href=\"../../filter\"><code>filter</code></a> value other than \"none\",</li> <li>elements with a <a title=\"The perspective CSS property determines the distance between the z=0 plane and the user in order to give to the 3D-positioned element some perspective. Each 3D element with z&gt;0 becomes larger; each 3D-element with z&lt;0 becomes smaller. The strength of the effect is determined by the value of this property.\" href=\"../../perspective\"><code>perspective</code></a> value other than \"none\",</li> <li>elements with <a title=\"The isolation CSS property defines if the element must create a new stacking context.\" href=\"../../isolation\"><code>isolation</code></a> set to \"isolate\",</li> <li><code>position: fixed</code></li> <li>specifying any attribute above in <code><a title=\"The will-change CSS property provides a way for authors to hint browsers about the kind of changes to be expected on an element, so that the browser can set up appropriate optimizations ahead of time before the element is actually changed.\" href=\"../../will-change\"><code>will-change</code></a></code> even if you don't specify values for these attributes directly (See <a href=\"http://dev.opera.com/articles/css-will-change-property/\">this post</a>)</li> <li>elements with <a title=\"The -webkit-overflow-scrolling CSS property controls whether or not touch devices use momentum-based scrolling for the given element.\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-overflow-scrolling\"><code>-webkit-overflow-scrolling</code></a> set to \"touch\"</li> </ul> <p>Within a stacking context, child elements are stacked according to the same rules previously explained. Importantly, the z-index values of its child stacking contexts only have meaning in this parent. Stacking contexts are treated atomically as a single unit in the parent stacking context.</p> <p>In summary:</p> <ul> <li>Positioning and assigning a z-index value to an HTML element creates a stacking context, (as does assigning non-full opacity).</li> <li>Stacking contexts can be contained in other stacking contexts, and together create a hierarchy of stacking contexts.</li> <li>Each stacking context is completely independent from its siblings: only descendant elements are considered when stacking is processed.</li> <li>Each stacking context is self-contained: after the element's contents are stacked, the whole element is considered in the stacking order of the parent stacking context.</li> </ul> <div class=\"note\">\n<strong>Note:</strong> The hierarchy of stacking contexts is a subset of the hierarchy of HTML elements, because only certain elements create stacking contexts. We can say that elements that do not create their own stacking contexts are <em>assimilated</em> by the parent stacking context.</div> <h2 id=\"The_example\"><strong>The example</strong></h2> <p><img src=\"https://developer.mozilla.org/@api/deki/files/913/=Understanding_zindex_04.png\" alt=\"Example of stacking rules modified using z-index\"></p> <p>In this example every positioned element creates its own stacking context, because of their positioning and z-index values. The hierarchy of stacking contexts is organized as follows:</p> <ul> <li>Root <ul> <li>DIV #1</li> <li>DIV #2</li> <li>DIV #3 <ul> <li>DIV #4</li> <li>DIV #5</li> <li>DIV #6</li> </ul> </li> </ul> </li> </ul> <p>It is important to note that DIV #4, DIV #5 and DIV #6 are children of DIV #3, so stacking of those elements is completely resolved within DIV#3. Once stacking and rendering within DIV #3 is completed, the whole DIV #3 element is passed for stacking in the root element with respect to its sibling's DIV.</p> <div class=\"note\"> <p><strong>Notes:</strong></p> <ul> <li>DIV #4 is rendered under DIV #1 because DIV #1's z-index (5) is valid within the stacking context of the root element, while DIV #4's z-index (6) is valid within the stacking context of DIV #3. So, DIV #4 is under DIV #1, because DIV #4 belongs to DIV #3, which has a lower z-index value.</li> <li>For the same reason DIV #2 (z-index 2) is rendered under DIV#5 (z-index 1) because DIV #5 belongs to DIV #3, which has an higher z-index value.</li> <li>DIV #3's z-index is 4, but this value is independent from z-index of DIV #4, DIV #5 and DIV #6, because it belongs to a different stacking context.</li> <li>An easy way to figure out the <em>rendering order</em> of stacked elements along the Z axis is to think of it as a \"version number\" of sorts, where child elements are minor version numbers underneath their parent's major version numbers. This way we can easily see how an element with a z-index of 1 (DIV #5) is stacked above an element with a z-index of 2 (DIV #2), and how an element with a z-index of 6 (DIV #4) is stacked below an element with a z-index of 5 (DIV #1). In our example (sorted according to the final rendering order): <ul> <li>Root <ul> <li>DIV #2 - z-index is 2</li> <li>DIV #3 - z-index is 4 <ul> <li>DIV #5 - z-index is 1, stacked under an element with a z-index of 4, which results in a rendering order of 4.1</li> <li>DIV #6 - z-index is 3, stacked under an element with a z-index of 4, which results in a rendering order of 4.3</li> <li>DIV #4 - z-index is 6, stacked under an element with a z-index of 4, which results in a rendering order of 4.6</li> </ul> </li> <li>DIV #1 - z-index is 5</li> </ul> </li> </ul> </li> </ul> </div> <h2 id=\"Example\"><strong>Example</strong></h2> <h3 id=\"HTML\"><strong>HTML</strong></h3> <pre data-language=\"html\">    &lt;div id=\"div1\"&gt;\n      &lt;h1&gt;Division Element #1&lt;/h1&gt;\n      &lt;code&gt;position: relative;&lt;br/&gt;\n      z-index: 5;&lt;/code&gt;\n    &lt;/div&gt;\n\n    &lt;div id=\"div2\"&gt;\n      &lt;h1&gt;Division Element #2&lt;/h1&gt;\n      &lt;code&gt;position: relative;&lt;br/&gt;\n      z-index: 2;&lt;/code&gt;\n    &lt;/div&gt;\n\n    &lt;div id=\"div3\"&gt;\n\n      &lt;div id=\"div4\"&gt;\n        &lt;h1&gt;Division Element #4&lt;/h1&gt;\n        &lt;code&gt;position: relative;&lt;br/&gt;\n        z-index: 6;&lt;/code&gt;\n      &lt;/div&gt;\n\n      &lt;h1&gt;Division Element #3&lt;/h1&gt;\n      &lt;code&gt;position: absolute;&lt;br/&gt;\n      z-index: 4;&lt;/code&gt;\n\n      &lt;div id=\"div5\"&gt;\n        &lt;h1&gt;Division Element #5&lt;/h1&gt;\n        &lt;code&gt;position: relative;&lt;br/&gt;\n        z-index: 1;&lt;/code&gt;\n      &lt;/div&gt;\n   \n      &lt;div id=\"div6\"&gt;\n        &lt;h1&gt;Division Element #6&lt;/h1&gt;\n        &lt;code&gt;position: absolute;&lt;br/&gt;\n        z-index: 3;&lt;/code&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n</pre> <h3 id=\"Division_Element_.231\" name=\"Division_Element_.231\">CSS</h3> <pre data-language=\"css\">* {\n    margin: 0;\n}\nhtml {\n    padding: 20px;\n    font: 12px/20px Arial, sans-serif;\n}\ndiv {\n    opacity: 0.7;\n    position: relative;\n}\nh1 {\n    font: inherit;\n    font-weight: bold;\n}\n#div1,\n#div2 {\n    border: 1px dashed #696;\n    padding: 10px;\n    background-color: #cfc;\n}\n#div1 {\n    z-index: 5;\n    margin-bottom: 190px;\n}\n#div2 {\n    z-index: 2;\n}\n#div3 {\n    z-index: 4;\n    opacity: 1;\n    position: absolute;\n    top: 40px;\n    left: 180px;\n    width: 330px;\n    border: 1px dashed #900;\n    background-color: #fdd;\n    padding: 40px 20px 20px;\n}\n#div4,\n#div5 {\n    border: 1px dashed #996;\n    background-color: #ffc;\n}\n#div4 {\n    z-index: 6;\n    margin-bottom: 15px;\n    padding: 25px 10px 5px;\n}\n#div5 {\n    z-index: 1;\n    margin-top: 15px;\n    padding: 5px 10px;\n}\n#div6 {\n    z-index: 3;\n    position: absolute;\n    top: 20px;\n    left: 180px;\n    width: 150px;\n    height: 125px;\n    border: 1px dashed #009;\n    padding-top: 125px;\n    background-color: #ddf;\n    text-align: center;\n}</pre> <h3 id=\"Result\">Result</h3> <p><iframe width=\"556\" frameborder=\"0\" class=\"live-sample-frame sample-code-frame\" src=\"https://mdn.mozillademos.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context%24samples/Example?revision=1055368\" height=\"396\" id=\"frame_Example\"></iframe></p> <h2 id=\"See_also\">See also</h2> <ul> <li>\n<a title=\"CSS/Understanding_z-index/Stacking_without_z-index\" href=\"../../understanding_z-index/stacking_without_z-index\">Stacking without z-index</a> : Default stacking rules</li> <li>\n<a title=\"CSS/Understanding_z-index/Stacking_and_float\" href=\"../../understanding_z-index/stacking_and_float\">Stacking and float</a> : How floating elements are handled</li> <li>\n<a title=\"CSS/Understanding_z-index/Adding_z-index\" href=\"../../understanding_z-index/adding_z-index\">Adding z-index</a> : Using z-index to change default stacking</li> <li>\n<a title=\"CSS/Understanding_z-index/Stacking_context_example_1\" href=\"../../understanding_z-index/stacking_context_example_1\">Stacking context example 1</a> : 2-level HTML hierarchy, z-index on the last level</li> <li>\n<a title=\"CSS/Understanding_z-index/Stacking_context_example_2\" href=\"../../understanding_z-index/stacking_context_example_2\">Stacking context example 2</a> : 2-level HTML hierarchy, z-index on all levels</li> <li>\n<a title=\"CSS/Understanding_z-index/Stacking_context_example_3\" href=\"../../understanding_z-index/stacking_context_example_3\">Stacking context example 3</a> : 3-level HTML hierarchy, z-index on the second level</li> </ul> <div class=\"originaldocinfo\"> <h2 id=\"Original_Document_Information\" name=\"Original_Document_Information\">Original Document Information</h2> <ul> <li>Author(s): Paolo Lombardi</li> <li>This article is the english translation of an article I wrote in italian for <a href=\"http://www.yappy.it\">YappY</a>. I grant the right to share all the content under <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">Creative Commons: Attribution-Sharealike license</a>\n</li> <li>Last Updated Date: July 9th, 2005</li> </ul> </div><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context$edit\" class=\"_attribution-link\">Edit this page on MDN</a>\n  </p>\n</div>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2016 Mozilla Contributors<br>Licensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.<br>\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\" class=\"_attribution-link\">https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context</a>\n  </p>\n</div>\n","transform-function/matrix":"<h1>matrix()</h1><p>The <code>matrix()</code> CSS function specifies a homogeneous 2D transformation matrix comprised of the specified six values. The constant values of such matrices are implied and not passed as parameters; the other parameters are described in the column-major order.</p> <p><code>matrix(a, b, c, d, tx, ty)</code> is a shorthand for <code>matrix3d(a, b, 0, 0, c, d, 0, 0, 0, 0, 1, 0, tx, ty, 0, 1)</code>.</p> <div class=\"note\">\n<strong>Note:</strong> Until Firefox 16, Gecko accepted a <a href=\"../length\" title=\"The &lt;length&gt; CSS data type denotes distance measurements. It is a &lt;number&gt; immediately followed by a length unit (px, em, pc, in, mm, …). Like for any CSS dimension, there is no space between the unit literal and the number. The length unit is optional after the &lt;number&gt; 0.\"><code>&lt;length&gt;</code></a> value for <strong>tx</strong> and <strong>ty</strong>.</div> <h2 id=\"Syntax\">Syntax</h2> <pre class=\"syntaxbox\">matrix(<em>a</em>, <em>b</em>, <em>c</em>, <em>d</em>, <em>tx</em>, <em>ty</em>)\n</pre> <h2 id=\"Values\">Values</h2> <dl> <dt>\n<em>a</em> <em>b</em> <em>c</em> <em>d</em>\n</dt> <dd>Are <a href=\"../number\" title=\"The &lt;number&gt; CSS data type represents a number, either integer or fractional. Its syntax extends the one of the &lt;integer&gt; data value. To represent a fractional value, add the fractional part — a '.' followed by one or several decimal digits — to any &lt;integer&gt; data value. Like for &lt;integer&gt; data type, there isn't any unit associated to a &lt;number&gt;, which is not a CSS dimension.\"><code>&lt;number&gt;</code></a> describing the linear transformation.</dd> <dt>\n<em>tx</em> <em>ty</em>\n</dt> <dd>Are <a href=\"../number\" title=\"The &lt;number&gt; CSS data type represents a number, either integer or fractional. Its syntax extends the one of the &lt;integer&gt; data value. To represent a fractional value, add the fractional part — a '.' followed by one or several decimal digits — to any &lt;integer&gt; data value. Like for &lt;integer&gt; data type, there isn't any unit associated to a &lt;number&gt;, which is not a CSS dimension.\"><code>&lt;number&gt;</code></a> describing the translation to apply.</dd> </dl> <table class=\"standard-table\"> <thead> <tr> <th scope=\"col\">Cartesian coordinates on ℝ<sup>2</sup>\n</th> <th scope=\"col\">Homogeneous coordinates on ℝℙ<sup>2</sup>\n</th> <th scope=\"col\">Cartesian coordinates on ℝ<sup>3</sup>\n</th> <th scope=\"col\">Homogeneous coordinates on ℝℙ<sup>3</sup>\n</th> </tr> </thead> <tbody> <tr> <td rowspan=\"2\" colspan=\"1\"><math> <mfenced> <mtable> <mtr><mtd>a</mtd><mtd>c</mtd></mtr> <mtr><mtd>b</mtd><mtd>d</mtd></mtr> </mtable> </mfenced> </math></td> <td><math> <mfenced> <mtable> <mtr><mtd>a</mtd><mtd>c</mtd><mtd>ty</mtd></mtr><mtr><mtd>b</mtd><mtd>d</mtd><mtd>tx</mtd></mtr><mtr><mtd>0</mtd><mtd>0</mtd><mtd>1</mtd></mtr></mtable> </mfenced> </math></td> <td rowspan=\"2\" colspan=\"1\"><math> <mfenced> <mtable> <mtr><mtd>a</mtd><mtd>c</mtd><mtd>ty</mtd></mtr><mtr><mtd>b</mtd><mtd>d</mtd><mtd>tx</mtd></mtr><mtr><mtd>0</mtd><mtd>0</mtd><mtd>1</mtd></mtr></mtable> </mfenced> </math></td> <td rowspan=\"2\" colspan=\"1\"><math> <mfenced> <mtable> <mtr><mtd>a</mtd><mtd>c</mtd><mtd>0</mtd><mtd>tx</mtd></mtr><mtr><mtd>b</mtd><mtd>d</mtd><mtd>0</mtd><mtd>ty</mtd></mtr><mtr><mtd>0</mtd><mtd>0</mtd><mtd>1</mtd><mtd>0</mtd></mtr><mtr><mtd>0</mtd><mtd>0</mtd><mtd>0</mtd><mtd>1</mtd></mtr></mtable> </mfenced> </math></td> </tr> <tr> <td><code>[a b c d tx ty]</code></td> </tr> </tbody> </table> <h2 id=\"Examples\">Examples</h2> <p>TBD</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/matrix$edit\" class=\"_attribution-link\">Edit this page on MDN</a>\n  </p>\n</div>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2016 Mozilla Contributors<br>Licensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.<br>\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/matrix\" class=\"_attribution-link\">https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/matrix</a>\n  </p>\n</div>\n","transform-function/matrix3d":"<h1>matrix3d()</h1><p>The <code>matrix3d()</code> CSS function describes a 3D transform as a 4x4 homogeneous matrix. The 16 parameters are described in the column-major order.</p> <div class=\"note\">\n<strong>Note:</strong> Until Firefox 16, Gecko accepted a <a title=\"The &lt;length&gt; CSS data type denotes distance measurements. It is a &lt;number&gt; immediately followed by a length unit (px, em, pc, in, mm, …). Like for any CSS dimension, there is no space between the unit literal and the number. The length unit is optional after the &lt;number&gt; 0.\" href=\"../length\"><code>&lt;length&gt;</code></a> value for <strong>a4</strong>, <strong>b4</strong> and <strong>c4</strong>.</div> <h2 id=\"Syntax\">Syntax</h2> <pre class=\"syntaxbox\">matrix3d(a1, b1, c1, d1, a2, b2, c2, d2, a3, b3, c3, d3, a4, b4, c4, d4)</pre> <h2 id=\"Values\">Values</h2> <dl> <dt>\n<em>a1 b1 c1 d1</em> <em>a2 b2 c2 d2 </em><em>a3 b3 c3 d3</em> <em>d4</em>\n</dt> <dd>Are <a title=\"The &lt;number&gt; CSS data type represents a number, either integer or fractional. Its syntax extends the one of the &lt;integer&gt; data value. To represent a fractional value, add the fractional part — a '.' followed by one or several decimal digits — to any &lt;integer&gt; data value. Like for &lt;integer&gt; data type, there isn't any unit associated to a &lt;number&gt;, which is not a CSS dimension.\" href=\"../number\"><code>&lt;number&gt;</code></a> describing the linear transformation.</dd> <dt>\n<em>a4</em> <em>b4 c4</em>\n</dt> <dd>Are <a title=\"The &lt;number&gt; CSS data type represents a number, either integer or fractional. Its syntax extends the one of the &lt;integer&gt; data value. To represent a fractional value, add the fractional part — a '.' followed by one or several decimal digits — to any &lt;integer&gt; data value. Like for &lt;integer&gt; data type, there isn't any unit associated to a &lt;number&gt;, which is not a CSS dimension.\" href=\"../number\"><code>&lt;number&gt;</code></a> describing the translation to apply.</dd> </dl> <table class=\"standard-table\"> <thead> <tr> <th scope=\"col\">Cartesian coordinates on ℝ<sup>2</sup>\n</th> <th scope=\"col\">Homogeneous coordinates on ℝℙ<sup>2</sup>\n</th> <th scope=\"col\">Cartesian coordinates on ℝ<sup>3</sup>\n</th> <th scope=\"col\">Homogeneous coordinates on ℝℙ<sup>3</sup>\n</th> </tr> </thead> <tbody> <tr> <td colspan=\"2\" rowspan=\"2\">This transform applies to the 3D space and cannot be represented on the plan.</td> <td colspan=\"1\" rowspan=\"2\">Cartesian-coordinate matrix doesn't allow to represent a generic 3d affine transforms as translations are not linear transforms.</td> <td colspan=\"1\" rowspan=\"2\"><math><mfenced><mtable><mtr><mtd>a1</mtd><mtd>a2</mtd><mtd>a3</mtd><mtd>a4</mtd></mtr><mtr><mtd>b1</mtd><mtd>b2</mtd><mtd>b3</mtd><mtd>b4</mtd></mtr><mtr><mtd>c1</mtd><mtd>c2</mtd><mtd>c3</mtd><mtd>c4</mtd></mtr><mtr><mtd>d1</mtd><mtd>d2</mtd><mtd>d3</mtd><mtd>d4</mtd></mtr></mtable> </mfenced> </math></td> </tr> </tbody> </table> <h2 id=\"Examples\">Examples</h2> <p>TBD</p><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/matrix3d$edit\" class=\"_attribution-link\">Edit this page on MDN</a>\n  </p>\n</div>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2016 Mozilla Contributors<br>Licensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.<br>\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/matrix3d\" class=\"_attribution-link\">https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/matrix3d</a>\n  </p>\n</div>\n","text-size-adjust":"<h1>text-size-adjust</h1><div><div class=\"notice experimental\"> <p> <strong>This is an experimental technology</strong><br>Because this technology's specification has not stabilized, check the <a href=\"#Browser_compatibility\">compatibility table</a> for usage in various browsers. Also note that the syntax and behavior of an experimental technology is subject to change in future versions of browsers as the specification changes.</p> </div></div> <p>On mobile devices, the <strong><code>text-size-adjust</code></strong> property allows Web authors to control if and how the text-inflating algorithm is applied to the textual content of the element it is applied to.</p> <p>As this property is non-standard, it must be used prefixed: <code>-moz-text-size-adjust</code>, <code>-webkit-text-size-adjust</code>, and <code>-ms-text-size-adjust</code>.</p> <p>Browsers on smartphones don't display web pages using the same algorithms as browsers rendering web pages on desktop machines. Instead of laying out the web page at the width of the device screen, they lay it out using a viewport that is much wider than the device screen, usually of 800 or 1000 pixels wide. One of two possible methods is used to map back to the original device coordinates: either a smaller window is then used to display on the device screen only part of what is actually being rendered, or the viewport is stretched to the size of the device.</p> <p>In essence, this means that either only a small, rectangular portion of the original web page is usually visible on a mobile device screen or that on mobile devices, the web page looks \"zoomed out\" and smaller than intended.</p> <p>This approach has been used as numerous web sites are not able to cope with small screens and are not usable when using the classical layout algorithm. This technique has drawbacks: the text is so tiny that it is unreadable without zooming. Even so, the user experience is better with the classical approach, which often leads to put secondary content at the top of the smartphone display, effectively pushing the main content of the page outside the viewport.</p> <p>But when the user zoomed in until the text becomes readable, an horizontal scrollbar is often needed as the line becomes larger than the width of the screen. This horizontal scrollbar has to be used to read each line of the text, which is a user experience nightmare. To prevent this, several mobile browsers implement a text <strong>inflation</strong> algorithm. When a focused element containing text use 100 % of the width of the screen, its text size is increased until it reached a readable size, without modifying the layout and removing the need of an horizontal scrollbar.</p> <p>The <code>text-size-adjust</code> property allows Web authors to opt out from this behavior, as Web pages designed to handle small screen widths do not need it.</p> <div class=\"note\">\n<strong>Notes</strong><strong>:</strong> <ul> <li>This property is not standard. In order to use it, Web authors have to duplicate, or even triplicate it, prefixed for each engine supporting it.</li> <li>Its behavior, and even the syntax, is slightly different from one browser engine to the other. Web developers should read the browser compatibility section with the required attention.</li> <li>\n<strong>This property only has an effect on smartphones</strong><strong>. </strong>As there is no inflation algorithm on desktop browsers, and on some tablet browsers like the iPad, the property is not supported there (and ignored). This property is only designed to opt out, or to cancel this opt-out, of the inflating behavior, <em>not to opt in</em>.</li> <li>If <code>-webkit-text-size-adjust</code> is explicitly set to <code>none</code>, old versions of Webkit-based desktop and tablet browsers, like Chrome≤26 or Safari≤5, instead of ignoring the property, will prevent the user to zoom in or out the Web page.<a href=\"https://bugs.webkit.org/show_bug.cgi?id=56543\">#</a>\n</li> <li>Not all engines do allow to control the final size of the text using a percentage value (E.g. Webkit and Trident do allow it, Gecko doesn't). Again Web developers should read the browser compatibility section with the required attention.</li> </ul> </div> <table class=\"properties\"><tbody>\n<tr>\n<th scope=\"row\"><a href=\"initial_value\">Initial value</a></th>\n<td>\n<code>auto</code> for smartphone browsers supporting inflation, <code>none</code> in other cases (and then not modifiable).</td>\n</tr>\n<tr>\n<th scope=\"row\">Applies to</th>\n<td>all elements</td>\n</tr>\n<tr>\n<th scope=\"row\"><a href=\"inheritance\">Inherited</a></th>\n<td>yes</td>\n</tr>\n<tr>\n<th scope=\"row\">Percentages</th>\n<td>yes, refer to the corresponding size of the text font</td>\n</tr>\n<tr>\n<th scope=\"row\">Media</th>\n<td>visual</td>\n</tr>\n<tr>\n<th scope=\"row\"><a href=\"computed_value\">Computed value</a></th>\n<td>as specified</td>\n</tr>\n<tr>\n<th scope=\"row\">Animatable</th>\n<td>no</td>\n</tr>\n<tr>\n<th scope=\"row\">Canonical order</th>\n<td>the unique non-ambiguous order defined by the formal grammar</td>\n</tr>\n</tbody></table> <h2 id=\"Syntax\">Syntax</h2> <pre data-language=\"css\">/* Text is never inflated */\ntext-size-adjust: none;\n\n/* Text may be inflated */\ntext-size-adjust: auto;\n\n/* Text may be inflated in this exact proportion */\ntext-size-adjust: 80%;\n\n/* Global values */\ntext-size-adjust: inherit;\ntext-size-adjust: initial;\ntext-size-adjust: unset;\n</pre> <h3 id=\"Values\">Values</h3> <dl> <dt><code>none</code></dt> <dd>Is a keyword preventing the usage of the inflation algorithm on the element. Basically, this means that the element will be displayed without its font inflated. On old WebKit-based desktop browsers (Chrome≤26, Safari≤5), this will instead prevent the user from zooming the webpage in or out.</dd> <dt><code>auto</code></dt> <dd>Is a keyword allowing the usage of the inflation algorithm on the element. Browsers are not forced to use it and they won't do it on desktops and on some tablets. Its main use is to cancel a <code>none</code> value previously set.</dd> <dt><code>&lt;percentage&gt;</code></dt> <dd>A percentage value is a synonym of the <code>auto</code> keyword, with the additional information that the percentage value is the increase rate to be applied to the font size when the inflation algorithm is applied.</dd> </dl> <h3 id=\"Formal_syntax\">Formal syntax</h3> <pre class=\"syntaxbox\">none | auto | <a title=\"\" href=\"percentage\">&lt;percentage&gt;</a></pre> <h2 id=\"Specifications\">Specifications</h2> <table class=\"standard-table\"> <thead> <tr> <th scope=\"col\">Specification</th> <th scope=\"col\">Status</th> <th scope=\"col\">Comment</th> </tr> </thead> <tbody> <tr> <td><a lang=\"en\" hreflang=\"en\" href=\"https://drafts.csswg.org/css-size-adjust/#adjustment-control\" class=\"external\">CSS Mobile Text Size Adjustment Module Level 1<br><small lang=\"en-US\">The definition of 'text-size-adjust' in that specification.</small></a></td> <td><span class=\"spec-ED\">Editor's Draft</span></td> <td>Initial definition</td> </tr> </tbody> </table> <h2 id=\"Browser_compatibility\">Browser compatibility</h2>  <div id=\"compat-desktop\"> <table class=\"compat-table\"> <tbody> <tr> <th>Feature</th> <th>Chrome</th> <th>Firefox (Gecko)</th> <th>Internet Explorer</th> <th>Opera</th> <th>Safari (WebKit)</th> </tr> <tr> <td>Basic support</td> <td>\n<span style=\"color: #f00;\">No support</span><sup>[1]</sup>\n</td> <td><span style=\"color: #f00;\">No support</span></td> <td><span style=\"color: #f00;\">No support</span></td> <td><span style=\"color: #f00;\">No support</span></td> <td>\n<span style=\"color: #f00;\">No support</span><sup>[1]</sup>\n</td> </tr> <tr> <td>Percentages</td> <td><span style=\"color: #f00;\">No support</span></td> <td><span style=\"color: #f00;\">No support</span></td> <td><span style=\"color: #f00;\">No support</span></td> <td><span style=\"color: #f00;\">No support</span></td> <td><span style=\"color: #f00;\">No support</span></td> </tr> </tbody> </table> </div> <div id=\"compat-mobile\"> <table class=\"compat-table\"> <tbody> <tr> <th>Feature</th> <th>Android</th> <th>Firefox Mobile (Gecko)</th> <th>IE Phone</th> <th>Opera Mobile</th> <th>Safari Mobile</th> </tr> <tr> <td>Basic support</td> <td><span title=\"Compatibility unknown; please update this.\" style=\"color: rgb(255, 153, 0);\">?</span></td> <td>11.0 (11.0) <span title=\"prefix\" class=\"inlineIndicator prefixBox prefixBoxInline\"><a title=\"The name of this feature is prefixed with '-moz' as this browser considers it experimental\" href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/Prefixes\">-moz</a></span>\n</td> <td>\n<span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span> <span title=\"prefix\" class=\"inlineIndicator prefixBox prefixBoxInline\"><a title=\"The name of this feature is prefixed with '-ms' as this browser considers it experimental\" href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/Prefixes\">-ms</a></span><sup>[2]</sup><br> 11<span title=\"prefix\" class=\"inlineIndicator prefixBox prefixBoxInline\"><a title=\"The name of this feature is prefixed with '-webkit' as this browser considers it experimental\" href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/Prefixes\">-webkit</a></span>\n</td> <td><span style=\"color: #f00;\">No support</span></td> <td>\n<span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span><span title=\"prefix\" class=\"inlineIndicator prefixBox prefixBoxInline\"><a title=\"The name of this feature is prefixed with '-webkit' as this browser considers it experimental\" href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/Prefixes\">-webkit</a></span>\n</td> </tr> <tr> <td>Percentages</td> <td><span title=\"Compatibility unknown; please update this.\" style=\"color: rgb(255, 153, 0);\">?</span></td> <td><span style=\"color: #f00;\">No support</span></td> <td>\n<span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span><sup>[2]</sup>\n</td> <td><span style=\"color: #f00;\">No support</span></td> <td><span title=\"Please update this with the earliest version of support.\" style=\"color: #888;\">(Yes)</span></td> </tr> </tbody> </table> </div> <p>[1] There is a bug in old Webkit-based desktop browsers. If <code>-webkit-text-size-adjust</code> is explicitly set to <code>none</code>, Webkit-based desktop browsers, like Chrome or Safari, instead of ignoring the property, will prevent the user to zoom in or out the Web page. See <a href=\"https://bugs.webkit.org/show_bug.cgi?id=56543\">Bug 56543</a> (affected Safari≤5 &amp; Chrome≤26), <a href=\"https://code.google.com/p/chromium/issues/detail?id=163359\">Bug 163359</a>, and <a href=\"https://bugs.webkit.org/show_bug.cgi?id=84186\">Bug 84186</a>.</p> <p>[2] If the viewport is set using <a title=\"The HTML &lt;meta&gt; element represents any metadata information that cannot be represented by one of the other HTML meta-related elements (&lt;base&gt;, &lt;link&gt;, &lt;script&gt;, &lt;style&gt; or &lt;title&gt;).\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta\"><code>&lt;meta&gt;</code></a> element, the value of the CSS <code>text-size-adjust</code> property is ignored. See <a href=\"https://msdn.microsoft.com/library/windows/apps/ff462082(v=vs.105).aspx#BKMK_AdjustingTextSizewithCustomCSS\">detailed implementation hints on MSDN</a>.</p> <h2 id=\"See_also\">See also</h2> <ul> <li>Apple's <a href=\"https://developer.apple.com/library/ios/documentation/AppleApplications/Reference/SafariWebContent/AdjustingtheTextSize/AdjustingtheTextSize.html#//apple_ref/doc/uid/TP40006510-SW16\" class=\"link-https\">documentation</a>.</li> <li>Gecko's <a href=\"http://dbaron.org/log/20111126-font-inflation\" class=\"external\">behavior description</a> by L. David Baron.</li> <li>Microsoft's <a href=\"https://msdn.microsoft.com/library/windows/apps/ff462082(v=vs.105).aspx#BKMK_AdjustingTextSizewithCustomCSS\" class=\"external\">documentation</a>.</li> </ul><div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/text-size-adjust$edit\" class=\"_attribution-link\">Edit this page on MDN</a>\n  </p>\n</div>\n<div class=\"_attribution\">\n  <p class=\"_attribution-p\">\n    &copy; 2016 Mozilla Contributors<br>Licensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.<br>\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/text-size-adjust\" class=\"_attribution-link\">https://developer.mozilla.org/en-US/docs/Web/CSS/text-size-adjust</a>\n  </p>\n</div>\n"}